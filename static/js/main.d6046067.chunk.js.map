{"version":3,"sources":["components/Modal/Modal.module.css","containers/ExplainationBoard/ExplainationBoard.module.css","components/Button/Button.module.css","containers/NumberBoard/Board.module.css","components/Button/Button.js","components/Modal/Modal.js","store/actions/actions.js","containers/ActionButtons/Buttons.js","store/actions/numberFn.js","containers/ExplainationBoard/ExplainationBoard.js","components/BoardHeaderRow/Row.js","components/BoardCarryRow/Row.js","components/BoardResultsRow/Row.js","containers/NumberBoard/Board.js","containers/Layout/Layout.js","App.js","reportWebVitals.js","store/reducers/numbers.js","store/reducers/carry.js","store/reducers/Utility/result.js","store/reducers/results.js","index.js","containers/ActionButtons/Buttons.module.css","containers/Layout/Layout.module.css"],"names":["module","exports","Button","props","className","classNames","btn","onClick","btnClick","children","Modal","show","container","inner","close","RANDOM_NUMBER","INPUT_NUMBER","START","END","COUNTER","connect","state","tR","number","topRow","bR","bottomRow","c","counter","nextBtn","nextBtnHide","fR","result","finalResult","dispatch","random","d","fn","type","actionTypes","digitCount","rowType","startMulti","endMulti","countSteps","u","upperDigit","lowerDigit","carry","p","t","b","f","position","useState","btnHide","setBtnHide","allInputs","document","querySelectorAll","digitsL","setDigitsL","setUpperDigit","setLowerDigit","0","1","2","activeClassTop","setActiveClassTop","activeClassBottom","setActiveClassBottom","randomBtnModal","setRandomBtnModal","falsyObject","randomDigitContainer","selections","map","i","selectOption","toString","active","e","Number","target","innerText","iToStr","upDigit","lowDigit","generate","inputCheck","emptyCheck","tL","join","length","bL","forEach","disabled","alert","title","boardTitle","texts","allTexts","text","dangerouslySetInnerHTML","__html","Object","values","Row","row","mobile","brt","classes","color","c1","brc","c2","c3","style","numbers","hundredThousands","focusAction","backgroundColor","value","tenThousands","thousands","hundreds","tens","ones","results","r1","brf","r2","brs","r3","r4","brl","blank","blankH","fRC","frCarry","zero","zeroO","tLofCarry","topLine","mLofCarry","middleLine","bLofCarry","bottomLine","topResult","middleResult","bottomResult","focusInput","focusingInput","resultRow","resutltsRow","input","newNum","newNumbers","rowPosition","nameInput","rows","inputChange","tb","changeFN","slice","old","useEffect","focus","digits","id","onChange","max","first","ref","second","third","brd","Layout","buttons","resultSection","explaination","board","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","reducer","actions","randomNumArray","randomNum1","Math","floor","randomNum2","randomNum3","randomNumString1","randomNumString2","randomNumString3","initialState","action","carryNumb","carryNumFn","prev","p1","p2","carryNumber","carryNum","cNumFn","stepsFn","obj","line","focusPos","logic1","logic2","resultNumFn","resultNumber","resultNum","carryingNum","rNumFn","allNumbers","resultNumb","n1","n2","n3","finalResultNum","returnedObject","finalResultFn","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","rootReducer","combineReducers","carrys","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d6046067.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Modal_container__21mgz\",\"close\":\"Modal_close__2a0K7\",\"inner\":\"Modal_inner__1SoX6\",\"zoom\":\"Modal_zoom__qicFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ExplainationBoard_container__3g7PE\",\"inner\":\"ExplainationBoard_inner__F6iLu\",\"text\":\"ExplainationBoard_text__2yJMS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__2mB2p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Board_container__2I5Ib\",\"inner\":\"Board_inner__2ui33\",\"row\":\"Board_row__18vsI\",\"brt\":\"Board_brt__xPrsW\",\"brc\":\"Board_brc__3n5cg\",\"brd\":\"Board_brd__3DKRt\",\"brp\":\"Board_brp__35wCz\",\"brf\":\"Board_brf__1vJ_z\",\"brs\":\"Board_brs__3A5Vz\",\"brl\":\"Board_brl__2ardM\",\"title\":\"Board_title__19QT0\",\"carry\":\"Board_carry__228Lj\",\"c1\":\"Board_c1__2Pkos\",\"c2\":\"Board_c2__Ku30P\",\"c3\":\"Board_c3__1lw3n\",\"digits\":\"Board_digits__2eP5W\",\"results\":\"Board_results__2jIgY\",\"r1\":\"Board_r1__1M1AW\",\"r2\":\"Board_r2__IUv_C\",\"r3\":\"Board_r3__3b8xK\",\"r4\":\"Board_r4__3y_96\",\"frCarry\":\"Board_frCarry__3N2r0\",\"mobile\":\"Board_mobile__2K3xC\"};","import React from 'react';\r\nimport classNames from './Button.module.css';\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <div className={classNames.btn}>\r\n            <button onClick={props.btnClick}> {props.children} </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport classNames from './Modal.module.css';\r\n\r\nconst Modal = (props) => {\r\n    return (\r\n        <>\r\n        {props.show ? <div className={classNames.container}>\r\n            <div className={classNames.inner}>\r\n                <div className={classNames.close}>\r\n                    <button onClick={props.close}>Close</button>\r\n                </div>\r\n                {props.children}\r\n            </div>\r\n        </div> : null}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Modal;","export const RANDOM_NUMBER = 'RANDOM_NUMBER';\r\nexport const INPUT_NUMBER = 'INPUT_NUMBER';\r\nexport const START = 'START';\r\nexport const END = 'END';\r\nexport const COUNTER = 'COUNTER';\r\nexport const COUNTERCARRY = 'COUNTERCARRY';\r\nexport const COUNTERRESULT = 'COUNTERRESULT';","import React, { useState } from \"react\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport Modal from '../../components/Modal/Modal';\r\nimport classNames from \"./Buttons.module.css\";\r\nimport {connect} from 'react-redux';\r\nimport * as reduxFunctions from '../../store/actions/index';\r\n\r\nconst Buttons = (props) => {\r\n  const [btnHide, setBtnHide] = useState(true);\r\n  const allInputs = document.querySelectorAll('#inputs');\r\n  const digitsU = [\"1\", \"2\", \"3\"];\r\n  const [digitsL, setDigitsL] = useState([\"1\", \"2\", \"3\"]);\r\n  const [upperDigit, setUpperDigit] = useState(3);\r\n  const [lowerDigit, setLowerDigit] = useState(3);\r\n  const [activeClassTop, setActiveClassTop] = useState({\r\n    0:false,\r\n    1:false,\r\n    2:true\r\n  })\r\n  const [activeClassBottom, setActiveClassBottom] = useState({\r\n    0:false,\r\n    1:false,\r\n    2:true\r\n  })\r\n  const [randomBtnModal, setRandomBtnModal] = useState(false);\r\n  const triggerModal = () => {\r\n    setRandomBtnModal(true);\r\n  };\r\n  const closeModal = () => {\r\n    setRandomBtnModal(false);\r\n  };\r\n  const falsyObject = {\r\n    0:false,\r\n    1:false,\r\n    2:false\r\n  }\r\n  const upDigit = (e, i) => {\r\n    setUpperDigit(Number(e.target.innerText));\r\n    const iToStr = i.toString();\r\n    setActiveClassTop({\r\n      ...falsyObject,\r\n      [i.toString()] : !activeClassTop[iToStr]\r\n    })\r\n    switch (i) {\r\n      case 0:\r\n        setDigitsL(['1'])\r\n        setLowerDigit(1)\r\n        setActiveClassBottom({\r\n          ...falsyObject,\r\n          0: true\r\n        })\r\n        break;\r\n      case 1:\r\n        setDigitsL(['1', '2'])\r\n        setLowerDigit(2)\r\n        setActiveClassBottom({\r\n          ...falsyObject,\r\n          1: true\r\n        })\r\n        break;\r\n      case 2:\r\n        setDigitsL(['1', '2', '3'])\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const lowDigit = (e, i) => {\r\n    setLowerDigit(Number(e.target.innerText));\r\n    const iToStr = i.toString();\r\n    setActiveClassBottom({\r\n      ...falsyObject,\r\n      [i.toString()] : !activeClassBottom[iToStr]\r\n    })\r\n  };\r\n\r\n  const starting = () => {\r\n    let inputCheck = true;\r\n    let emptyCheck = true;\r\n    const tL = props.tR.join('').length;\r\n    const bL = props.bR.join('').length;\r\n\r\n    if(tL < bL){\r\n      inputCheck = false;\r\n    }\r\n\r\n    if(tL <= 0 || bL <= 0){\r\n      emptyCheck = false;\r\n    }\r\n\r\n    if(inputCheck && emptyCheck){\r\n      allInputs.forEach(c=>{\r\n        c.disabled = true;\r\n      })\r\n      setUpperDigit(tL);\r\n      setLowerDigit(bL);\r\n      setBtnHide(false);\r\n      props.startMulti();\r\n\r\n    }else if(!inputCheck){\r\n      alert('You can\\'t add less numbers in the bottom then top!')\r\n    }else if(!emptyCheck){\r\n      alert('You can\\'t leave top or bottom fields empty!')\r\n    }\r\n  }\r\n\r\n\r\n  const ending = () => {\r\n    allInputs.forEach(c=>{\r\n      c.disabled = false;\r\n    })\r\n    setUpperDigit(3);\r\n    setLowerDigit(3);\r\n    setActiveClassTop({\r\n      0:false,\r\n      1:false,\r\n      2:true\r\n    });\r\n    setActiveClassBottom({\r\n      0:false,\r\n      1:false,\r\n      2:true\r\n    });\r\n    setDigitsL(['1', '2', '3']);\r\n    setBtnHide(true);\r\n    props.endMulti();\r\n  }\r\n\r\n  const setTopAndBelowItems = () => {\r\n    setRandomBtnModal(false);\r\n    props.random(upperDigit, 'topRow');\r\n    props.random(lowerDigit, 'bottomRow');\r\n  };\r\n\r\n  const nextSteps = () => {\r\n    props.countSteps(upperDigit, lowerDigit);\r\n    props.carry(props.c, props.tR, props.bR);\r\n    props.result(props.c, props.tR, props.bR, upperDigit, lowerDigit);\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Modal show={randomBtnModal} close={closeModal}>\r\n        <div className={classNames.randomDigitContainer}>\r\n          <h1>How many digit you want in top?</h1>\r\n          <div className={classNames.selections}>\r\n            {digitsU.map((c, i) => {\r\n              return (\r\n                <div\r\n                  key={c}\r\n                  className={`${classNames.selectOption} ${activeClassTop[i.toString()] ? classNames.active : null }`}\r\n                  onClick={(e) => {\r\n                    upDigit(e, i);\r\n                  }}\r\n                >\r\n                  {c}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className={classNames.randomDigitContainer}>\r\n          <h1>How many digit you want in Bottom?</h1>\r\n          <div className={classNames.selections}>\r\n            {digitsL.map((c, i) => {\r\n              return (\r\n                <div\r\n                  key={c}\r\n                  className={`${classNames.selectOption} ${activeClassBottom[i.toString()] ? classNames.active : null }`}\r\n                  onClick={(e) => {\r\n                    lowDigit(e, i);\r\n                  }}\r\n                >\r\n                  {c}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className={classNames.generate}>\r\n          <Button btnClick={setTopAndBelowItems}>Generate</Button>\r\n        </div>\r\n      </Modal>\r\n      <div className={classNames.container}>\r\n        {btnHide ? <>\r\n        <Button btnClick={triggerModal}>Random</Button>\r\n        <Button btnClick={starting}>Start</Button>\r\n        </>\r\n        : <>\r\n        <Button btnClick={ending}>End</Button>\r\n        {!props.nextBtn? <Button btnClick={nextSteps}>Next</Button> : null}\r\n        </>\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nconst mapStatetoProps = state => {\r\n  return{\r\n      tR: state.number.topRow,\r\n      bR: state.number.bottomRow,\r\n      c: state.number.counter,\r\n      nextBtn: state.number.nextBtnHide,\r\n      fR: state.result.finalResult\r\n  }\r\n}\r\n\r\nconst mapDispatchtoProps = dispatch => {\r\n  return{\r\n      random: (d, fn) => dispatch(reduxFunctions.randomNumberGenerate(d, fn)),\r\n      startMulti: () => dispatch(reduxFunctions.startMultiplication()),\r\n      endMulti: () => dispatch(reduxFunctions.endMultiplication()),\r\n      countSteps: (u,d) => dispatch(reduxFunctions.stepCounter(u,d)),\r\n      carry: (p, t, b, f) => dispatch(reduxFunctions.carryAddition(p, t, b, f)),\r\n      result: (p, t, b, u, d) => dispatch(reduxFunctions.resultAddition(p, t, b, u, d))\r\n  }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Buttons);","import * as actionTypes from './actions';\r\n\r\nexport const randomNumberGenerate = (digitCounter, changerFn) => {\r\n    return{\r\n        type: actionTypes.RANDOM_NUMBER,\r\n        digitCount: digitCounter,\r\n        rowType: changerFn\r\n    }\r\n}\r\nexport const inputNumber = (updatedNumbers, changerFn) => {\r\n    return{\r\n        type: actionTypes.INPUT_NUMBER,\r\n        newNumbers: updatedNumbers,\r\n        rowPosition: changerFn\r\n    }\r\n}\r\nexport const startMultiplication = () => {\r\n    return{\r\n        type: actionTypes.START\r\n    }\r\n}\r\nexport const endMultiplication = () => {\r\n    return{\r\n        type: actionTypes.END\r\n    }\r\n}\r\nexport const stepCounter = (upperDigit, lowerDigit) => {\r\n    return{\r\n        type: actionTypes.COUNTER,\r\n        upperDigit: upperDigit,\r\n        lowerDigit: lowerDigit\r\n    }\r\n}\r\nexport const carryAddition = (position, topRow, bottomRow, finalResult) => {\r\n    return{\r\n        type: actionTypes.COUNTERCARRY,\r\n        position: position,\r\n        topRow: topRow,\r\n        bottomRow: bottomRow,\r\n        finalResult: finalResult\r\n    }\r\n}\r\nexport const resultAddition = (position, topRow, bottomRow, upperDigit, lowerDigit) => {\r\n    return{\r\n        type: actionTypes.COUNTERRESULT,\r\n        position: position,\r\n        topRow: topRow,\r\n        bottomRow: bottomRow,\r\n        upperDigit: upperDigit,\r\n        lowerDigit: lowerDigit\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classNames from './ExplainationBoard.module.css';\r\n\r\nconst ExplainationBoard = (props) => {\r\n    return (\r\n        <div className={classNames.container}>\r\n            <div className={classNames.inner}>\r\n                <div className={classNames.text}>\r\n                    <h3 dangerouslySetInnerHTML={{ __html: props.title.show ? props.title.title : 'Generate random numbers to start' }}></h3>\r\n                    <div>\r\n                        {Object.values(props.texts).map((c, i)=>{\r\n                            return <p key={i}>{c}</p>\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStatetoProps = state => {\r\n    return{\r\n        title: state.number.boardTitle,\r\n        texts: state.result.allTexts\r\n    }\r\n}\r\nexport default connect(mapStatetoProps)(ExplainationBoard);","import React from 'react';\r\nimport classNames from '../../containers/NumberBoard/Board.module.css';\r\n\r\nconst Row = () => {\r\n    return (\r\n        <div className={`${classNames.row} ${classNames.mobile}`}>\r\n            <div className={`${classNames.title} ${classNames.brt}`}>\r\n                <h4>Hundred Thousands</h4>\r\n            </div>\r\n            <div className={`${classNames.title} ${classNames.brt}`}>\r\n                <h4>Ten Thousands</h4>\r\n            </div>\r\n            <div className={`${classNames.title} ${classNames.brt}`}>\r\n                <h4>Thousands</h4>\r\n            </div>\r\n            <div className={`${classNames.title} ${classNames.brt}`}>\r\n                <h4>Hundreds</h4>\r\n            </div>\r\n            <div className={`${classNames.title} ${classNames.brt}`}>\r\n                <h4>Tens</h4>\r\n            </div>\r\n            <div className={`${classNames.title} ${classNames.brt}`}>\r\n                <h4>Ones</h4>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Row;","import React from 'react';\r\nimport classNames from '../../containers/NumberBoard/Board.module.css';\r\n\r\nconst Row = (props) => {\r\n    let classes;\r\n    switch (props.color) {\r\n        case 'c1':\r\n            classes = `${classNames.carry} ${classNames.c1} ${classNames.brc}`\r\n            break;\r\n        case 'c2':\r\n            classes = `${classNames.carry} ${classNames.c2} ${classNames.brc}`\r\n            break;\r\n        case 'c3':\r\n            classes = `${classNames.carry} ${classNames.c3} ${classNames.brc}`\r\n            break;\r\n    \r\n        default:\r\n            classes = `${classNames.carry} ${classNames.c1} ${classNames.brc}`\r\n            break;\r\n    }\r\n    return (\r\n        <>\r\n        <div className={classNames.row}>\r\n            <div className={classes} style={props.numbers.hundredThousands.focusAction ? {backgroundColor: '#ffffc0'} : null}>\r\n                <h2>{props.numbers.hundredThousands.value}</h2>\r\n            </div>\r\n            <div className={classes} style={props.numbers.tenThousands.focusAction ? {backgroundColor: '#ffffc0'} : null}>\r\n                <h2>{props.numbers.tenThousands.value}</h2>\r\n            </div>\r\n            <div className={classes} style={props.numbers.thousands.focusAction ? {backgroundColor: '#ffffc0'} : null}>\r\n                <h2>{props.numbers.thousands.value}</h2>\r\n            </div>\r\n            <div className={classes} style={props.numbers.hundreds.focusAction ? {backgroundColor: '#ffffc0'} : null}>\r\n                <h2>{props.numbers.hundreds.value}</h2>\r\n            </div>\r\n            <div className={classes} style={props.numbers.tens.focusAction ? {backgroundColor: '#ffffc0'} : null}>\r\n                <h2>{props.numbers.tens.value}</h2>\r\n            </div>\r\n            <div className={classes}>\r\n                <h2>{props.numbers.ones.value}</h2>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Row;","import React from 'react';\r\nimport classNames from '../../containers/NumberBoard/Board.module.css';\r\n\r\nconst Row = (props) => {\r\n    let classes;\r\n    switch (props.color) {\r\n        case 'r1':\r\n            classes = `${classNames.results} ${classNames.r1} ${classNames.brf}`\r\n            break;\r\n        case 'r2':\r\n            classes = `${classNames.results} ${classNames.r2} ${classNames.brs}`\r\n            break;\r\n        case 'r3':\r\n            classes = `${classNames.results} ${classNames.r3} ${classNames.brt}`\r\n            break;\r\n        case 'r4':\r\n            classes = `${classNames.results} ${classNames.r4} ${classNames.brl}`\r\n            break;\r\n    \r\n        default:\r\n            break;\r\n    }\r\n    return (\r\n        <div className={classNames.row}>\r\n            <div className={classes} style={props.numbers.hundredThousands.focusAction ? {backgroundColor: '#ffffc0'} : props.blank || props.blankH ? {backgroundColor: 'white'} : null}>\r\n                {props.fRC ? <span className={classNames.frCarry}>{props.fRC.tenThousands.carry}</span>:null}\r\n                <h1>{props.numbers.hundredThousands.value}</h1>\r\n            </div>\r\n            <div className={classes} style={props.numbers.tenThousands.focusAction ? {backgroundColor: '#ffffc0'} : props.blank ? {backgroundColor: 'white'} : null}>\r\n                {props.fRC ? <span className={classNames.frCarry}>{props.fRC.thousands.carry}</span>:null}\r\n                <h1>{props.numbers.tenThousands.value}</h1>\r\n            </div>\r\n            <div className={classes} style={props.numbers.thousands.focusAction ? {backgroundColor: '#ffffc0'} : null}>\r\n                {props.fRC ? <span className={classNames.frCarry}>{props.fRC.hundreds.carry}</span>:null}\r\n                <h1>{props.numbers.thousands.value}</h1>\r\n            </div>\r\n            <div className={classes} style={props.numbers.hundreds.focusAction ? {backgroundColor: '#ffffc0'} : null}>\r\n                {props.fRC ? <span className={classNames.frCarry}>{props.fRC.tens.carry}</span>:null}\r\n                <h1>{props.numbers.hundreds.value}</h1>\r\n            </div>\r\n            <div className={classes} style={props.numbers.tens.focusAction ? {backgroundColor: '#ffffc0'} : props.zero ? {backgroundColor: 'white', color: '#D9D9D9'} : null}>\r\n                {props.fRC ? <span className={classNames.frCarry}>{props.fRC.ones.carry}</span>:null}\r\n                <h1>{props.numbers.tens.value}</h1>\r\n            </div>\r\n            <div className={classes} style={props.numbers.ones.focusAction ? {backgroundColor: '#ffffc0'} : props.zero || props.zeroO ? {backgroundColor: 'white', color: '#D9D9D9'} : null}>\r\n                <h1>{props.numbers.ones.value}</h1>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Row;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from '../../components/BoardHeaderRow/Row';\r\nimport Carry from '../../components/BoardCarryRow/Row';\r\nimport Result from '../../components/BoardResultsRow/Row';\r\nimport classNames from './Board.module.css';\r\nimport * as reduxFunctions from '../../store/actions/index';\r\n\r\nconst Board = (props) => {\r\n\r\n    const inputChange = (e, i, tb, changeFN)=>{\r\n        let maxLength = 1;\r\n        if (e.target.value.length > maxLength){\r\n            e.target.value = e.target.value.slice(0, maxLength);\r\n        }\r\n        let old = [...tb]\r\n        old[i] = e.target.value;\r\n        props.input(old, changeFN);\r\n    }\r\n\r\n    let nameInput;\r\n\r\n    useEffect(()=>{\r\n        nameInput.focus();\r\n    },[nameInput])\r\n\r\n    let rows;\r\n\r\n    switch (props.resultRow) {\r\n        case 1:\r\n            rows = <>\r\n                <Result numbers={props.r1} color='r1' blank fRC={props.r4} />\r\n            </>\r\n            break;\r\n        case 2:\r\n            rows = <>\r\n                <Result numbers={props.r1} color='r1' blank fRC={props.r4} />\r\n                <Result numbers={props.r2} color='r2' blankH zeroO />\r\n                <Result numbers={props.r4} color='r4'/>\r\n            </>\r\n            break;\r\n        case 3:\r\n            rows = <>\r\n                <Result numbers={props.r1} color='r1' blank fRC={props.r4} />\r\n                <Result numbers={props.r2} color='r2' blankH zeroO />\r\n                <Result numbers={props.r3} color='r3' zero/>\r\n                <Result numbers={props.r4} color='r4'/>\r\n            </>\r\n            break;\r\n    \r\n        default:\r\n            rows = null;\r\n            break;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classNames.container}>\r\n            <div className={classNames.inner}>\r\n                <Header />\r\n\r\n                <Carry numbers={props.tLofCarry} color='c1' />\r\n                <Carry numbers={props.mLofCarry} color='c2' />\r\n                <Carry numbers={props.bLofCarry} color='c3' />\r\n\r\n                <div className={classNames.row}>\r\n                    <div className={`${classNames.digits} ${classNames.brc}`}>\r\n                        <h1>{null}</h1>\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brc}`}>\r\n                        <h1>{null}</h1>\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brc}`}>\r\n                        <h1>{null}</h1>\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brc}`}>\r\n                        <input\r\n                        id='inputs'\r\n                        type='number'\r\n                        value={props.tR[0]}\r\n                        onChange={(e)=>inputChange(e, 0, props.tR, 'topRow')} max=\"1\"\r\n                        style={props.focusInput.t.first ? {backgroundColor: 'yellow'} : null}\r\n                        ref={(input) => { nameInput = input; }}\r\n                        />\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brc}`}>\r\n                        <input\r\n                        id='inputs'\r\n                        type='number'\r\n                        value={props.tR[1]}\r\n                        onChange={(e)=>inputChange(e, 1, props.tR, 'topRow')} max=\"1\"\r\n                        style={props.focusInput.t.second ? {backgroundColor: 'yellow'} : null}\r\n                        />\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brc}`}>\r\n                        <input\r\n                        id='inputs'\r\n                        type='number'\r\n                        value={props.tR[2]}\r\n                        onChange={(e)=>inputChange(e, 2, props.tR, 'topRow')}\r\n                        max=\"1\"\r\n                        style={props.focusInput.t.third ? {backgroundColor: 'yellow'} : null}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classNames.row}>\r\n                    <div className={`${classNames.digits} ${classNames.brd}`}>\r\n                        <h1>{null}</h1>\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brd}`}>\r\n                        <h1>{null}</h1>\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brd}`}>\r\n                        <h1>X</h1>\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brd}`}>\r\n                        <input\r\n                        id='inputs'\r\n                        type='number'\r\n                        value={props.bR[0]}\r\n                        onChange={(e)=>inputChange(e, 0, props.bR, 'bottomRow')} max=\"1\"\r\n                        style={props.focusInput.b.first ? {backgroundColor: 'yellow', color:'#0070C0'} : {color:'#0070C0'}}\r\n                        />\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brd}`}>\r\n                        <input\r\n                        id='inputs'\r\n                        type='number'\r\n                        value={props.bR[1]}\r\n                        onChange={(e)=>inputChange(e, 1, props.bR, 'bottomRow')} max=\"1\"\r\n                        style={props.focusInput.b.second ? {backgroundColor: 'yellow', color:'#00B050'} : {color:'#00B050'}}\r\n                        />\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brd}`}>\r\n                        <input\r\n                        id='inputs'\r\n                        type='number'\r\n                        value={props.bR[2]}\r\n                        onChange={(e)=>inputChange(e, 2, props.bR, 'bottomRow')} max=\"1\"\r\n                        style={props.focusInput.b.third ? {backgroundColor: 'yellow', color:'#7030A0'} : {color:'#7030A0'}}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                \r\n                {rows}\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStatetoProps = state => {\r\n    return{\r\n        tR: state.number.topRow,\r\n        bR: state.number.bottomRow,\r\n        tLofCarry : state.carry.topLine,\r\n        mLofCarry : state.carry.middleLine,\r\n        bLofCarry : state.carry.bottomLine,\r\n        r1 : state.result.topResult,\r\n        r2 : state.result.middleResult,\r\n        r3 : state.result.bottomResult,\r\n        r4 : state.result.finalResult,\r\n        focusInput: state.result.focusingInput,\r\n        resultRow : state.number.resutltsRow\r\n    }\r\n}\r\nconst mapDispatchtoProps = dispatch => {\r\n    return{\r\n        input: (newNum, fn) => dispatch(reduxFunctions.inputNumber(newNum, fn))\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Board);","import React from 'react';\r\nimport Buttons from '../ActionButtons/Buttons';\r\nimport ExplainationBoard from '../ExplainationBoard/ExplainationBoard';\r\nimport Board from '../NumberBoard/Board';\r\nimport classNames from './Layout.module.css';\r\n\r\nconst Layout = () => {\r\n    return (\r\n        <>\r\n            <div className={classNames.container}>\r\n                <div className={classNames.buttons}>\r\n                    <Buttons />\r\n                </div>\r\n                <div className={classNames.resultSection}>\r\n                    <div className={classNames.explaination}>\r\n                        <ExplainationBoard />\r\n                    </div>\r\n                    <div className={classNames.board}>\r\n                        <Board />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nexport default Layout;","import Layout from \"./containers/Layout/Layout\";\n\n\nfunction App() {\n  return (\n    <Layout />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from '../actions/actions';\r\n\r\nconst initState = {\r\n    topRow: ['','',''],\r\n    bottomRow: ['','',''],\r\n    boardTitle: {\r\n        title: '',\r\n        show: false\r\n    },\r\n    counter: 0,\r\n    nextBtnHide: false,\r\n    resutltsRow: 5\r\n}\r\n\r\nconst reducer = (state = initState, actions) => {\r\n    if(state.counter === 19){\r\n        return{\r\n            ...state,\r\n            counter: 0,\r\n            nextBtnHide: true\r\n        }\r\n    }\r\n    if(actions.upperDigit === 1 && actions.lowerDigit === 1){\r\n        if(state.counter === 1){\r\n            return{\r\n                ...state,\r\n                counter: 18,\r\n            }\r\n        }\r\n    }\r\n    if(actions.upperDigit === 2 && actions.lowerDigit === 1){\r\n        if(state.counter === 2){\r\n            return{\r\n                ...state,\r\n                counter: 18,\r\n            }\r\n        }\r\n    }\r\n    if(actions.upperDigit === 2 && actions.lowerDigit === 2){\r\n        switch (state.counter) {\r\n            case 2:\r\n                return{\r\n                    ...state,\r\n                    counter: 3,\r\n                }\r\n            case 6:\r\n                return{\r\n                    ...state,\r\n                    counter: 11,\r\n                }\r\n            case 16:\r\n                return{\r\n                    ...state,\r\n                    counter: 18,\r\n                }\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    if(actions.upperDigit === 3 && actions.lowerDigit === 1){\r\n        if(state.counter === 3){\r\n            return{\r\n                ...state,\r\n                counter: 18,\r\n            }\r\n        }\r\n    }\r\n    if(actions.upperDigit === 3 && actions.lowerDigit === 2){\r\n        if(state.counter === 7){\r\n            return{\r\n                ...state,\r\n                counter: 11,\r\n            }\r\n        }else if(state.counter === 17){\r\n            return{\r\n                ...state,\r\n                counter: 18,\r\n            }\r\n        }\r\n    }\r\n\r\n    switch (actions.type) {\r\n        case actionTypes.RANDOM_NUMBER:\r\n            let randomNumArray;\r\n            const randomNum1 = Math.floor(Math.random() * (9)) + 1;\r\n            const randomNum2 = Math.floor(Math.random() * (9)) + 1;\r\n            const randomNum3 = Math.floor(Math.random() * (9)) + 1;\r\n            const randomNumString1 = randomNum1.toString();\r\n            const randomNumString2 = randomNum2.toString();\r\n            const randomNumString3 = randomNum3.toString();\r\n            switch (actions.digitCount) {\r\n            case 3:\r\n                randomNumArray = [randomNumString1, randomNumString2, randomNumString3];\r\n                break;\r\n            case 2:\r\n                randomNumArray = ['', randomNumString1, randomNumString2];\r\n                break;\r\n            case 1:\r\n                randomNumArray = ['', '', randomNumString1];\r\n                break;\r\n\r\n            default:\r\n                randomNumArray = [randomNumString1, randomNumString2, randomNumString3];\r\n                break;\r\n            }\r\n            return{\r\n                ...state,\r\n                [actions.rowType]: randomNumArray\r\n            }\r\n        case actionTypes.INPUT_NUMBER:\r\n            return{\r\n                ...state,\r\n                [actions.rowPosition]: actions.newNumbers\r\n            }\r\n        case actionTypes.START:\r\n            const t = state.topRow.join('')\r\n            const b = state.bottomRow.join('')\r\n            return{\r\n                ...state,\r\n                boardTitle: {\r\n                    title: `We will multiply <span>${state.topRow[0]}${state.topRow[1]}${state.topRow[2]}</span> x <span>${state.bottomRow[0]}${state.bottomRow[1]}${state.bottomRow[2]}</span>. The answer is <span>${t * b}</span>, but that doesn’t matter. We don’t care about the answer here; we care only about how to get it. <span>Click Next</span>`,\r\n                    show: true\r\n                },\r\n                nextBtnHide: false,\r\n                resutltsRow: b.length\r\n            }\r\n        case actionTypes.END:\r\n            return{\r\n                ...state,\r\n                topRow: ['','',''],\r\n                bottomRow: ['','',''],\r\n                boardTitle: {\r\n                    ...state.boardTitle,\r\n                    show: false\r\n                },\r\n                counter: 0,\r\n                resutltsRow: 5\r\n            }\r\n        case actionTypes.COUNTER:\r\n            return{\r\n                ...state,\r\n                counter: state.counter + 1,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actions';\r\n\r\nconst initialState = {\r\n    topLine:{\r\n        ones: {focusAction: false, value: null},\r\n        tens: {focusAction: false, value: null},\r\n        hundreds: {focusAction: false, value: null},\r\n        thousands: {focusAction: false, value: null},\r\n        tenThousands: {focusAction: false, value: null},\r\n        hundredThousands: {focusAction: false, value: null}\r\n    },\r\n    middleLine:{\r\n        ones: {focusAction: false, value: null},\r\n        tens: {focusAction: false, value: null},\r\n        hundreds: {focusAction: false, value: null},\r\n        thousands: {focusAction: false, value: null},\r\n        tenThousands: {focusAction: false, value: null},\r\n        hundredThousands: {focusAction: false, value: null}\r\n    },\r\n    bottomLine:{\r\n        ones: {focusAction: false, value: null},\r\n        tens: {focusAction: false, value: null},\r\n        hundreds: {focusAction: false, value: null},\r\n        thousands: {focusAction: false, value: null},\r\n        tenThousands: {focusAction: false, value: null},\r\n        hundredThousands: {focusAction: false, value: null}\r\n    }\r\n};\r\n\r\nconst carry = (state = initialState, action)=>{\r\n    if(action.type === actionTypes.END){\r\n        return initialState;\r\n    }\r\n    let returnedObject = initialState;\r\n    let carryNumb;\r\n    const carryNumFn = (prev, p1, p2) => {\r\n        let carryNumber;\r\n        let carryNum;\r\n        const cNumFn = (carryNumber) =>{\r\n            if(carryNumber.toString().length > 1){\r\n                carryNum = carryNumber.toString().slice(0,1)\r\n            }else{\r\n                carryNum = null;\r\n            }\r\n            return carryNum;\r\n        }\r\n        if(prev){\r\n            carryNumber = (Number(action.topRow[p1]) * Number(action.bottomRow[p2])) + Number(prev);\r\n            carryNum = cNumFn(carryNumber);\r\n        }else{\r\n            carryNumber = Number(action.topRow[p1]) * Number(action.bottomRow[p2]);\r\n            carryNum = cNumFn(carryNumber);\r\n        }\r\n        return carryNum;\r\n    }\r\n    const stepsFn = (obj) => {\r\n        return {\r\n            ...initialState,\r\n            [obj.line] : {\r\n                ...initialState[obj.line],\r\n                [obj.focusPos] : {\r\n                    focusAction: obj.carryNumb?true:false,\r\n                    value: obj.carryNumb\r\n                }\r\n            }\r\n        }\r\n    }\r\n    switch (action.position) {\r\n        case 0:\r\n            if(action.upperDigit === 1 && action.lowerDigit === 1){\r\n                returnedObject = initialState;\r\n            }else{\r\n                carryNumb = carryNumFn(null,2,2);\r\n                returnedObject = stepsFn({\r\n                    line: 'bottomLine',\r\n                    focusPos: 'tens',\r\n                    carryNumb: carryNumb\r\n                });\r\n            }\r\n            return returnedObject;\r\n        case 1:\r\n            carryNumb = carryNumFn(state.bottomLine.tens.value,1,2);\r\n            const logic1  = action.upperDigit === 2 && action.lowerDigit === 1;\r\n            const logic2 = action.upperDigit === 2 && action.lowerDigit === 2;\r\n            if(logic1 || logic2){\r\n                returnedObject = initialState;\r\n            }else{\r\n                returnedObject = stepsFn({\r\n                    line: 'bottomLine',\r\n                    focusPos: 'hundreds',\r\n                    carryNumb: carryNumb\r\n                })\r\n            }\r\n            return returnedObject;\r\n        case 2:\r\n            return initialState\r\n        case 4:\r\n            carryNumb = carryNumFn(null, 2,1);\r\n            return stepsFn({\r\n                line: 'middleLine',\r\n                focusPos: 'hundreds',\r\n                carryNumb: carryNumb\r\n            })\r\n        case 5:\r\n            carryNumb = carryNumFn(state.middleLine.hundreds.value, 1,1);\r\n            if(action.upperDigit === 2 && action.lowerDigit === 2){\r\n                returnedObject = initialState;\r\n            }else{\r\n                returnedObject = stepsFn({\r\n                    line: 'middleLine',\r\n                    focusPos: 'thousands',\r\n                    carryNumb: carryNumb\r\n                })\r\n            }\r\n            return returnedObject\r\n        case 6:\r\n            return initialState\r\n        case 8:\r\n            carryNumb = carryNumFn(null, 2,0);\r\n            return stepsFn({\r\n                line: 'topLine',\r\n                focusPos: 'thousands',\r\n                carryNumb: carryNumb\r\n            })\r\n        case 9:\r\n            carryNumb = carryNumFn(state.topLine.thousands.value, 1,0);\r\n            return stepsFn({\r\n                line: 'topLine',\r\n                focusPos: 'tenThousands',\r\n                carryNumb: carryNumb\r\n            })\r\n        case 10:\r\n            return initialState\r\n    \r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default carry;","const resultNumFn = (prev, p1, p2) => {\r\n    let resultNumber;\r\n    let resultNum;\r\n    let carryingNum;\r\n    const rNumFn = (resultNumber) =>{\r\n        if(resultNumber.toString().length > 1){\r\n            resultNum = resultNumber.toString().slice(1);\r\n            carryingNum = resultNumber.toString().slice(0,1);\r\n        }else{\r\n            resultNum = resultNumber;\r\n        }\r\n        return resultNum;\r\n    }\r\n    if(prev){\r\n        resultNumber = (Number(p1) * Number(p2)) + Number(prev);\r\n        resultNum = rNumFn(resultNumber);\r\n    }else{\r\n        resultNumber = Number(p1) * Number(p2);\r\n        resultNum = rNumFn(resultNumber);\r\n    }\r\n    return {resultNum,carryingNum};\r\n}\r\n\r\nexport default resultNumFn;","import * as actionTypes from '../actions/actions';\r\nimport resultNumFn from './Utility/result';\r\n\r\nconst initialState = {\r\n    topResult:{\r\n        ones: {focusAction: false, value: null, carry: null},\r\n        tens: {focusAction: false, value: null, carry: null},\r\n        hundreds: {focusAction: false, value: null, carry: null},\r\n        thousands: {focusAction: false, value: null, carry: null},\r\n        tenThousands: {focusAction: false, value: null, carry: null},\r\n        hundredThousands: {focusAction: false, value: null, carry: null}\r\n    },\r\n    middleResult:{\r\n        ones: {focusAction: false, value: null, carry: null},\r\n        tens: {focusAction: false, value: null, carry: null},\r\n        hundreds: {focusAction: false, value: null, carry: null},\r\n        thousands: {focusAction: false, value: null, carry: null},\r\n        tenThousands: {focusAction: false, value: null, carry: null},\r\n        hundredThousands: {focusAction: false, value: null, carry: null}\r\n    },\r\n    bottomResult:{\r\n        ones: {focusAction: false, value: null, carry: null},\r\n        tens: {focusAction: false, value: null, carry: null},\r\n        hundreds: {focusAction: false, value: null, carry: null},\r\n        thousands: {focusAction: false, value: null, carry: null},\r\n        tenThousands: {focusAction: false, value: null, carry: null},\r\n        hundredThousands: {focusAction: false, value: null, carry: null}\r\n    },\r\n    finalResult:{\r\n        ones: {focusAction: false, value: null, carry: null},\r\n        tens: {focusAction: false, value: null, carry: null},\r\n        hundreds: {focusAction: false, value: null, carry: null},\r\n        thousands: {focusAction: false, value: null, carry: null},\r\n        tenThousands: {focusAction: false, value: null, carry: null},\r\n        hundredThousands: {focusAction: false, value: null, carry: null}\r\n    },\r\n    focusingInput: {\r\n        t:{\r\n            first: false,\r\n            second: false,\r\n            third: false\r\n        },\r\n        b:{\r\n            first: false,\r\n            second: false,\r\n            third: false\r\n        },\r\n    },\r\n    allTexts: {}\r\n};\r\n\r\nconst result = (state = initialState, action)=>{\r\n    if(action.type === actionTypes.END){\r\n        return initialState;\r\n    }\r\n    let returnedObject = {};\r\n    let allNumbers;\r\n    let resultNumb;\r\n    var n1, n2, n3;\r\n    let finalResultNum;\r\n    const finalResultFn = (carry, n1, n2, n3) =>{\r\n        let resultNumber;\r\n        let resultNum;\r\n        let carryingNum;\r\n        const rNumFn = (resultNumber) =>{\r\n            if(resultNumber.toString().length > 1){\r\n                resultNum = resultNumber.toString().slice(1);\r\n                carryingNum = resultNumber.toString().slice(0,1);\r\n            }else{\r\n                resultNum = resultNumber;\r\n            }\r\n            return resultNum;\r\n        }\r\n        if(carry){\r\n            resultNumber = Number(n1) + Number(n2) + Number(n3) + Number(carry);\r\n            resultNum = rNumFn(resultNumber);\r\n        }else{\r\n            resultNumber = Number(n1) + Number(n2) + Number(n3);\r\n            resultNum = rNumFn(resultNumber);\r\n        }\r\n        return {resultNum,carryingNum};\r\n    }\r\n    switch (action.position) {\r\n        case 0:\r\n            resultNumb = resultNumFn(null, action.topRow[2], action.bottomRow[2]);\r\n            if(action.upperDigit === 1 && action.lowerDigit === 1){\r\n                returnedObject = {\r\n                    topResult:{\r\n                        ...state.topResult,\r\n                        ones:{\r\n                            focusAction: true,\r\n                            value: resultNumb.resultNum,\r\n                            carry: null\r\n                        },\r\n                        tens:{\r\n                            focusAction: resultNumb.carryingNum ? true : false,\r\n                            value: resultNumb.carryingNum,\r\n                            carry: null\r\n                        }\r\n                    },\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        0: `${action.topRow[2]}x${action.bottomRow[2]}=${action.topRow[2] * action.bottomRow[2]}`\r\n                    }\r\n                }\r\n            }else{\r\n                returnedObject = {\r\n                    topResult:{\r\n                        ...state.topResult,\r\n                        ones:{\r\n                            focusAction: true,\r\n                            value: resultNumb.resultNum,\r\n                            carry: resultNumb.carryingNum\r\n                        }\r\n                    },\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        0: `${action.topRow[2]}x${action.bottomRow[2]}=${action.topRow[2] * action.bottomRow[2]} and result ${resultNumb.resultNum}, carry ${resultNumb.carryingNum ? resultNumb.carryingNum : 'nothing'}`\r\n                    }\r\n                }\r\n            }\r\n            return{\r\n                ...state,\r\n                ...returnedObject,\r\n                focusingInput: {\r\n                    ...state.focusingInput,\r\n                    t:{\r\n                        ...state.focusingInput.t,\r\n                        third: true\r\n                    },\r\n                    b:{\r\n                        ...state.focusingInput.b,\r\n                        third: true\r\n                    },\r\n                }\r\n            }\r\n        case 1:\r\n            resultNumb = resultNumFn(state.topResult.ones.carry, action.topRow[1], action.bottomRow[2])\r\n            const logic1  = action.upperDigit === 2 && action.lowerDigit === 1;\r\n            const logic2 = action.upperDigit === 2 && action.lowerDigit === 2;\r\n            if(logic1 || logic2){\r\n                returnedObject = {\r\n                    topResult:{\r\n                        ...state.topResult,\r\n                        ones:{\r\n                            ...state.topResult.ones,\r\n                            focusAction: false\r\n                        },\r\n                        tens:{\r\n                            focusAction: true,\r\n                            value: resultNumb.resultNum,\r\n                            carry: null\r\n                        },\r\n                        hundreds:{\r\n                            focusAction: resultNumb.carryingNum ? true : false,\r\n                            value: resultNumb.carryingNum,\r\n                            carry: null\r\n                        }\r\n                    }\r\n                }\r\n            }else{\r\n                returnedObject = {\r\n                    topResult:{\r\n                        ...state.topResult,\r\n                        ones:{\r\n                            ...state.topResult.ones,\r\n                            focusAction: false\r\n                        },\r\n                        tens:{\r\n                            focusAction: true,\r\n                            value: resultNumb.resultNum,\r\n                            carry: resultNumb.carryingNum\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return{\r\n                ...state,\r\n                ...returnedObject,\r\n                focusingInput: {\r\n                    ...state.focusingInput,\r\n                    t:{\r\n                        ...state.focusingInput.t,\r\n                        second: true,\r\n                        third: false\r\n                    },\r\n                    b:{\r\n                        ...state.focusingInput.b\r\n                    },\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    1: `${action.topRow[1]}x${action.bottomRow[2]}=${action.topRow[1] * action.bottomRow[2]} ${state.topResult.ones.carry? `and adding carry ${state.topResult.ones.carry} result is ${(action.topRow[1] * action.bottomRow[2])+Number(state.topResult.ones.carry)}`: ''} `\r\n                }\r\n            }\r\n        case 2:\r\n            resultNumb = resultNumFn(state.topResult.tens.carry, action.topRow[0], action.bottomRow[2])\r\n            return{\r\n                ...state,\r\n                topResult:{\r\n                    ...state.topResult,\r\n                    tens:{\r\n                        ...state.topResult.tens,\r\n                        focusAction: false\r\n                    },\r\n                    hundreds:{\r\n                        focusAction: true,\r\n                        value: resultNumb.resultNum,\r\n                        carry: null\r\n                    },\r\n                    thousands:{\r\n                        focusAction: resultNumb.carryingNum?true:false,\r\n                        value: resultNumb.carryingNum,\r\n                        carry: null\r\n                    },\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    2: `${action.topRow[0]}x${action.bottomRow[2]}=${action.topRow[0] * action.bottomRow[2]} ${state.topResult.tens.carry? `and adding carry ${state.topResult.tens.carry} result is ${(action.topRow[0] * action.bottomRow[2])+Number(state.topResult.tens.carry)}`: ''} `\r\n                },\r\n                focusingInput: {\r\n                    ...state.focusingInput,\r\n                    t:{\r\n                        ...state.focusingInput.t,\r\n                        first: true,\r\n                        second: false\r\n                    },\r\n                    b:{\r\n                        ...state.focusingInput.b\r\n                    },\r\n                }\r\n            }\r\n        case 3:\r\n            if(action.upperDigit === 2 && action.lowerDigit === 2){\r\n                returnedObject = {\r\n                    t:{\r\n                        ...state.focusingInput.t,\r\n                        first: false,\r\n                        second: false\r\n                    }\r\n                }\r\n            }else{\r\n                returnedObject = {\r\n                    t:{\r\n                        ...state.focusingInput.t,\r\n                        first: false\r\n                    }\r\n                }\r\n            }\r\n            return{\r\n                ...state,\r\n                topResult:{\r\n                    ...state.topResult,\r\n                    tens:{\r\n                        ...state.topResult.tens,\r\n                        focusAction: false\r\n                    },\r\n                    hundreds:{\r\n                        ...state.topResult.hundreds,\r\n                        focusAction: false\r\n                    },\r\n                    thousands:{\r\n                        ...state.topResult.thousands,\r\n                        focusAction: false\r\n                    }\r\n                },\r\n                middleResult:{\r\n                    ...state.middleResult,\r\n                    ones:{\r\n                        ...state.middleResult.ones,\r\n                        focusAction: true,\r\n                        value: 0\r\n                    }\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    3: `Reason for adding 0`\r\n                },\r\n                focusingInput: {\r\n                    ...state.focusingInput,\r\n                    t:{\r\n                        ...returnedObject\r\n                    },\r\n                    b:{\r\n                        ...state.focusingInput.b,\r\n                        third: false,\r\n                        second: true\r\n                    },\r\n                }\r\n            }\r\n        case 4:\r\n            resultNumb = resultNumFn(null, action.topRow[2], action.bottomRow[1])\r\n            return{\r\n                ...state,\r\n                middleResult:{\r\n                    ...state.middleResult,\r\n                    ones:{\r\n                        ...state.middleResult.ones,\r\n                        focusAction: false\r\n                    },\r\n                    tens:{\r\n                        focusAction: true,\r\n                        value: resultNumb.resultNum,\r\n                        carry: resultNumb.carryingNum \r\n                    }\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    4: `${action.topRow[2]}x${action.bottomRow[1]}=${action.topRow[2] * action.bottomRow[1]} and result ${resultNumb.resultNum}, carry ${resultNumb.carryingNum ? resultNumb.carryingNum : 'nothing'}`\r\n                },\r\n                focusingInput: {\r\n                    ...state.focusingInput,\r\n                    t:{\r\n                        ...state.focusingInput.t,\r\n                        third: true\r\n                    },\r\n                    b:{\r\n                        ...state.focusingInput.b\r\n                    },\r\n                }\r\n            }\r\n        case 5:\r\n            resultNumb = resultNumFn(state.middleResult.tens.carry, action.topRow[1], action.bottomRow[1])\r\n            if(action.upperDigit === 2 && action.lowerDigit === 2){\r\n                returnedObject = {\r\n                    middleResult:{\r\n                        ...state.middleResult,\r\n                        tens:{\r\n                            ...state.middleResult.tens,\r\n                            focusAction: false\r\n                        },\r\n                        hundreds:{\r\n                            focusAction: true,\r\n                            value: resultNumb.resultNum,\r\n                            carry:  null\r\n                        },\r\n                        thousands:{\r\n                            focusAction: resultNumb.carryingNum? true:false,\r\n                            value: resultNumb.carryingNum,\r\n                            carry: null\r\n                        }\r\n                    },\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        5: `${action.topRow[1]}x${action.bottomRow[1]}=${action.topRow[1] * action.bottomRow[1]} ${state.middleResult.tens.carry? `and adding carry ${state.middleResult.tens.carry} result is ${(action.topRow[1] * action.bottomRow[1])+Number(state.middleResult.tens.carry)}`: ''} `\r\n                    }\r\n                }\r\n            }else{\r\n                returnedObject = {\r\n                    middleResult:{\r\n                        ...state.middleResult,\r\n                        tens:{\r\n                            ...state.middleResult.tens,\r\n                            focusAction: false\r\n                        },\r\n                        hundreds:{\r\n                            focusAction: true,\r\n                            value: resultNumb.resultNum,\r\n                            carry: resultNumb.carryingNum \r\n                        }\r\n                    },\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        5: `${action.topRow[1]}x${action.bottomRow[1]}=${action.topRow[1] * action.bottomRow[1]} and result ${resultNumb.resultNum}, carry ${resultNumb.carryingNum ? resultNumb.carryingNum : 'nothing'}`\r\n                    }\r\n                }\r\n            }\r\n            return{\r\n                ...state,\r\n                ...returnedObject,\r\n                focusingInput: {\r\n                    ...state.focusingInput,\r\n                    t:{\r\n                        ...state.focusingInput.t,\r\n                        third: false,\r\n                        second: true\r\n                    },\r\n                    b:{\r\n                        ...state.focusingInput.b\r\n                    },\r\n                }\r\n            }\r\n        case 6:\r\n            resultNumb = resultNumFn(state.middleResult.hundreds.carry, action.topRow[0], action.bottomRow[1])\r\n            return{\r\n                ...state,\r\n                middleResult:{\r\n                    ...state.middleResult,\r\n                    hundreds:{\r\n                        ...state.middleResult.hundreds,\r\n                        focusAction: false\r\n                    },\r\n                    thousands:{\r\n                        focusAction: true,\r\n                        value: resultNumb.resultNum,\r\n                        carry: null\r\n                    },\r\n                    tenThousands:{\r\n                        focusAction: resultNumb.carryingNum?true:false,\r\n                        value: resultNumb.carryingNum,\r\n                        carry: null\r\n                    }\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    6: `${action.topRow[0]}x${action.bottomRow[1]}=${action.topRow[0] * action.bottomRow[1]} ${state.middleResult.hundreds.carry? `and adding carry ${state.middleResult.hundreds.carry} result is ${(action.topRow[0] * action.bottomRow[1])+Number(state.middleResult.hundreds.carry)}`: ''}`\r\n                },\r\n                focusingInput: {\r\n                    ...state.focusingInput,\r\n                    t:{\r\n                        ...state.focusingInput.t,\r\n                        second: false,\r\n                        first: true\r\n                    },\r\n                    b:{\r\n                        ...state.focusingInput.b\r\n                    },\r\n                }\r\n            }\r\n        case 7:\r\n            return{\r\n                ...state,\r\n                middleResult:{\r\n                    ...state.middleResult,\r\n                    thousands:{\r\n                        ...state.middleResult.thousands,\r\n                        focusAction: false\r\n                    },\r\n                    tenThousands:{\r\n                        ...state.middleResult.tenThousands,\r\n                        focusAction: false\r\n                    }\r\n                },\r\n                bottomResult:{\r\n                    ...state.bottomResult,\r\n                    ones:{\r\n                        ...state.bottomResult.ones,\r\n                        focusAction: true,\r\n                        value: 0\r\n                    },\r\n                    tens:{\r\n                        ...state.bottomResult.tens,\r\n                        focusAction: true,\r\n                        value: 0\r\n                    }\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    7: `Reason for adding two 0`\r\n                },\r\n                focusingInput: {\r\n                    ...state.focusingInput,\r\n                    t:{\r\n                        ...state.focusingInput.t,\r\n                        first: false\r\n                    },\r\n                    b:{\r\n                        ...state.focusingInput.b,\r\n                        second: false,\r\n                        first: true\r\n                    },\r\n                }\r\n            }\r\n        case 8:\r\n            resultNumb = resultNumFn(null, action.topRow[2], action.bottomRow[0])\r\n            return{\r\n                ...state,\r\n                bottomResult:{\r\n                    ...state.bottomResult,\r\n                    ones:{\r\n                        ...state.bottomResult.ones,\r\n                        focusAction: false\r\n                    },\r\n                    tens:{\r\n                        ...state.bottomResult.tens,\r\n                        focusAction: false\r\n                    },\r\n                    hundreds:{\r\n                        focusAction: true,\r\n                        value: resultNumb.resultNum,\r\n                        carry: resultNumb.carryingNum\r\n                    }\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    8: `${action.topRow[2]}x${action.bottomRow[0]}=${action.topRow[2] * action.bottomRow[0]} and result ${resultNumb.resultNum}, carry ${resultNumb.carryingNum ? resultNumb.carryingNum : 'nothing'}`\r\n                },\r\n                focusingInput: {\r\n                    ...state.focusingInput,\r\n                    t:{\r\n                        ...state.focusingInput.t,\r\n                        third: true\r\n                    },\r\n                    b:{\r\n                        ...state.focusingInput.b\r\n                    },\r\n                }\r\n            }\r\n        case 9:\r\n            resultNumb = resultNumFn(state.bottomResult.hundreds.carry, action.topRow[1], action.bottomRow[0])\r\n            return{\r\n                ...state,\r\n                bottomResult:{\r\n                    ...state.bottomResult,\r\n                    hundreds:{\r\n                        ...state.bottomResult.hundreds,\r\n                        focusAction: false,\r\n                    },\r\n                    thousands:{\r\n                        focusAction: true,\r\n                        value: resultNumb.resultNum,\r\n                        carry: resultNumb.carryingNum\r\n                    }\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    9: `${action.topRow[1]}x${action.bottomRow[0]}=${action.topRow[1] * action.bottomRow[0]} and result ${resultNumb.resultNum}, carry ${resultNumb.carryingNum ? resultNumb.carryingNum : 'nothing'}`\r\n                },\r\n                focusingInput: {\r\n                    ...state.focusingInput,\r\n                    t:{\r\n                        ...state.focusingInput.t,\r\n                        second: true,\r\n                        third: false\r\n                    },\r\n                    b:{\r\n                        ...state.focusingInput.b\r\n                    },\r\n                }\r\n            }\r\n        case 10:\r\n            resultNumb = resultNumFn(state.bottomResult.thousands.carry, action.topRow[0], action.bottomRow[0])\r\n            return{\r\n                ...state,\r\n                bottomResult:{\r\n                    ...state.bottomResult,\r\n                    thousands:{\r\n                        ...state.bottomResult.thousands,\r\n                        focusAction: false,\r\n                    },\r\n                    tenThousands:{\r\n                        focusAction: true,\r\n                        value: resultNumb.resultNum,\r\n                        carry: null\r\n                    },\r\n                    hundredThousands:{\r\n                        focusAction: resultNumb.carryingNum?true:false,\r\n                        value: resultNumb.carryingNum,\r\n                        carry: null\r\n                    }\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    10: `${action.topRow[0]}x${action.bottomRow[0]}=${action.topRow[0] * action.bottomRow[0]} and result ${resultNumb.resultNum}, carry ${resultNumb.carryingNum ? resultNumb.carryingNum : 'nothing'}`\r\n                },\r\n                focusingInput: {\r\n                    ...state.focusingInput,\r\n                    t:{\r\n                        ...state.focusingInput.t,\r\n                        second: false,\r\n                        first: true\r\n                    },\r\n                    b:{\r\n                        ...state.focusingInput.b\r\n                    },\r\n                }\r\n            }\r\n        case 11:\r\n            return{\r\n                ...state,\r\n                middleResult:{\r\n                    ...state.middleResult,\r\n                    hundreds:{\r\n                        ...state.middleResult.hundreds,\r\n                        focusAction: false\r\n                    },\r\n                    thousands:{\r\n                        ...state.middleResult.thousands,\r\n                        focusAction: false\r\n                    },\r\n                    tenThousands:{\r\n                        ...state.middleResult.tenThousands,\r\n                        focusAction: false\r\n                    }\r\n                },\r\n                bottomResult:{\r\n                    ...state.bottomResult,\r\n                    tenThousands:{\r\n                        ...state.bottomResult.tenThousands,\r\n                        focusAction: false\r\n                    },\r\n                    hundredThousands:{\r\n                        ...state.bottomResult.hundredThousands,\r\n                        focusAction: false\r\n                    }\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    11: `Multiplication end! Addition start.`\r\n                },\r\n                focusingInput:{\r\n                    ...initialState.focusingInput\r\n                }\r\n            }\r\n        case 12:\r\n            n1= state.topResult.ones.value;\r\n            n2= state.middleResult.ones.value;\r\n            n3= state.bottomResult.ones.value;\r\n            finalResultNum = finalResultFn(null, n1?n1:0, n2?n2:0, n3?n3:0)\r\n            if(action.lowerDigit === 2){\r\n                allNumbers = `${n1?n1:0}+${n2?n2:0}`;\r\n            }else{\r\n                allNumbers = `${n1?n1:0}+${n2?n2:0}+${n3?n3:0}`;\r\n            }\r\n            return{\r\n                ...state,\r\n                finalResult:{\r\n                    ...state.finalResult,\r\n                    ones:{\r\n                        focusAction: true,\r\n                        value: finalResultNum.resultNum,\r\n                        carry: finalResultNum.carryingNum,\r\n                    }\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    12: `${allNumbers}=${Number(n1?n1:0)+Number(n2?n2:0)+Number(n3?n3:0)} and result ${finalResultNum.resultNum}, carry ${finalResultNum.carryingNum ? finalResultNum.carryingNum : 'nothing'}`\r\n                }\r\n            }\r\n        case 13:\r\n            n1= state.topResult.tens.value;\r\n            n2= state.middleResult.tens.value;\r\n            n3= state.bottomResult.tens.value;\r\n            finalResultNum = finalResultFn(state.finalResult.ones.carry, n1?n1:0, n2?n2:0, n3?n3:0)\r\n            if(action.lowerDigit === 2){\r\n                allNumbers = `${n1?n1:0}+${n2?n2:0}`;\r\n            }else{\r\n                allNumbers = `${n1?n1:0}+${n2?n2:0}+${n3?n3:0}`;\r\n            }\r\n            return{\r\n                ...state,\r\n                finalResult:{\r\n                    ...state.finalResult,\r\n                    ones:{\r\n                        ...state.finalResult.ones,\r\n                        focusAction: false,\r\n                    },\r\n                    tens:{\r\n                        focusAction: true,\r\n                        value: finalResultNum.resultNum,\r\n                        carry: finalResultNum.carryingNum\r\n                    }\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    13: `${allNumbers}=${Number(n1?n1:0)+Number(n2?n2:0)+Number(n3?n3:0)} and result ${finalResultNum.resultNum}, carry ${finalResultNum.carryingNum ? finalResultNum.carryingNum : 'nothing'}`\r\n                }\r\n            }\r\n        case 14:\r\n            n1= state.topResult.hundreds.value;\r\n            n2= state.middleResult.hundreds.value;\r\n            n3= state.bottomResult.hundreds.value;\r\n            finalResultNum = finalResultFn(state.finalResult.tens.carry, n1?n1:0, n2?n2:0, n3?n3:0)\r\n            if(action.lowerDigit === 2){\r\n                allNumbers = `${n1?n1:0}+${n2?n2:0}`;\r\n            }else{\r\n                allNumbers = `${n1?n1:0}+${n2?n2:0}+${n3?n3:0}`;\r\n            }\r\n            return{\r\n                ...state,\r\n                finalResult:{\r\n                    ...state.finalResult,\r\n                    ones:{\r\n                        ...state.finalResult.ones,\r\n                        carry: null\r\n                    },\r\n                    tens:{\r\n                        ...state.finalResult.tens,\r\n                        focusAction: false,\r\n                    },\r\n                    hundreds:{\r\n                        focusAction: true,\r\n                        value: finalResultNum.resultNum,\r\n                        carry: finalResultNum.carryingNum\r\n                    }\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    14: `${allNumbers}=${Number(n1?n1:0)+Number(n2?n2:0)+Number(n3?n3:0)} and result ${finalResultNum.resultNum}, carry ${finalResultNum.carryingNum ? finalResultNum.carryingNum : 'nothing'}`\r\n                }\r\n            }\r\n        case 15:\r\n            n1= state.topResult.thousands.value;\r\n            n2= state.middleResult.thousands.value;\r\n            n3= state.bottomResult.thousands.value;\r\n            finalResultNum = finalResultFn(state.finalResult.hundreds.carry, n1?n1:0, n2?n2:0, n3?n3:0)\r\n            if(action.lowerDigit === 2){\r\n                allNumbers = `${n1?n1:0}+${n2?n2:0}`;\r\n            }else{\r\n                allNumbers = `${n1?n1:0}+${n2?n2:0}+${n3?n3:0}`;\r\n            }\r\n            return{\r\n                ...state,\r\n                finalResult:{\r\n                    ...state.finalResult,\r\n                    tens:{\r\n                        ...state.finalResult.tens,\r\n                        carry: null\r\n                    },\r\n                    hundreds:{\r\n                        ...state.finalResult.hundreds,\r\n                        focusAction: false,\r\n                    },\r\n                    thousands:{\r\n                        focusAction: true,\r\n                        value: finalResultNum.resultNum,\r\n                        carry: finalResultNum.carryingNum\r\n                    }\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    15: `${allNumbers}=${Number(n1?n1:0)+Number(n2?n2:0)+Number(n3?n3:0)} and result ${finalResultNum.resultNum}, carry ${finalResultNum.carryingNum ? finalResultNum.carryingNum : 'nothing'}`\r\n                }\r\n            }\r\n        case 16:\r\n            n1= state.topResult.tenThousands.value;\r\n            n2= state.middleResult.tenThousands.value;\r\n            n3= state.bottomResult.tenThousands.value;\r\n            finalResultNum = finalResultFn(state.finalResult.thousands.carry, n1?n1:0, n2?n2:0, n3?n3:0)\r\n            if(action.lowerDigit === 2){\r\n                allNumbers = `${n1?n1:0}+${n2?n2:0}`;\r\n            }else{\r\n                allNumbers = `${n1?n1:0}+${n2?n2:0}+${n3?n3:0}`;\r\n            }\r\n            return{\r\n                ...state,\r\n                finalResult:{\r\n                    ...state.finalResult,\r\n                    hundreds:{\r\n                        ...state.finalResult.hundreds,\r\n                        carry: null\r\n                    },\r\n                    thousands:{\r\n                        ...state.finalResult.thousands,\r\n                        focusAction: false,\r\n                    },\r\n                    tenThousands:{\r\n                        focusAction: true,\r\n                        value: finalResultNum.resultNum,\r\n                        carry: finalResultNum.carryingNum\r\n                    }\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    16: `${allNumbers}=${Number(n1?n1:0)+Number(n2?n2:0)+Number(n3?n3:0)} and result ${finalResultNum.resultNum}, carry ${finalResultNum.carryingNum ? finalResultNum.carryingNum : 'nothing'}`\r\n                }\r\n            }\r\n        case 17:\r\n            n1= state.topResult.hundredThousands.value;\r\n            n2= state.middleResult.hundredThousands.value;\r\n            n3= state.bottomResult.hundredThousands.value;\r\n            finalResultNum = finalResultFn(state.finalResult.tenThousands.carry, n1?n1:0, n2?n2:0, n3?n3:0)\r\n            if(action.lowerDigit === 2){\r\n                allNumbers = `${n1?n1:0}+${n2?n2:0}`;\r\n            }else{\r\n                allNumbers = `${n1?n1:0}+${n2?n2:0}+${n3?n3:0}`;\r\n            }\r\n            return{\r\n                ...state,\r\n                finalResult:{\r\n                    ...state.finalResult,\r\n                    thousands:{\r\n                        ...state.finalResult.thousands,\r\n                        carry: null\r\n                    },\r\n                    tenThousands:{\r\n                        ...state.finalResult.tenThousands,\r\n                        focusAction: false,\r\n                    },\r\n                    hundredThousands:{\r\n                        focusAction: finalResultNum.resultNum === 0? false: true,\r\n                        value: finalResultNum.resultNum === 0? null: finalResultNum.resultNum,\r\n                        carry: null\r\n                    }\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    17: `${allNumbers}=${Number(n1?n1:0)+Number(n2?n2:0)+Number(n3?n3:0)} and result ${finalResultNum.resultNum}, carry ${finalResultNum.carryingNum ? finalResultNum.carryingNum : 'nothing'}`\r\n                }\r\n            }\r\n        case 18:\r\n            if(action.upperDigit === 1 && action.lowerDigit === 1){\r\n                returnedObject = {\r\n                    topResult:{\r\n                        ...state.topResult,\r\n                        ones:{\r\n                            ...state.topResult.ones,\r\n                            focusAction: false\r\n                        },\r\n                        tens:{\r\n                            ...state.topResult.tens,\r\n                            focusAction: false\r\n                        }\r\n                    }\r\n                }\r\n            }else if(action.upperDigit === 2 && action.lowerDigit === 1){\r\n                returnedObject = {\r\n                    topResult:{\r\n                        ...state.topResult,\r\n                        tens:{\r\n                            ...state.topResult.tens,\r\n                            focusAction: false\r\n                        },\r\n                        hundreds:{\r\n                            ...state.topResult.hundreds,\r\n                            focusAction: false,\r\n                        }\r\n                    }\r\n                }\r\n            }else if(action.upperDigit === 3 && action.lowerDigit === 1){\r\n                returnedObject = {\r\n                    topResult:{\r\n                        ...state.topResult,\r\n                        hundreds:{\r\n                            ...state.topResult.hundreds,\r\n                            focusAction: false\r\n                        },\r\n                        thousands:{\r\n                            ...state.topResult.thousands,\r\n                            focusAction: false,\r\n                        }\r\n                    }\r\n                }\r\n            }else if(action.upperDigit === 3 && action.lowerDigit === 3){\r\n                returnedObject = {\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        tenThousands:{\r\n                            ...state.finalResult.tenThousands,\r\n                            carry: null\r\n                        },\r\n                        hundredThousands:{\r\n                            ...state.finalResult.hundredThousands,\r\n                            focusAction: false\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return{\r\n                ...state,\r\n                ...returnedObject,\r\n                finalResult:{\r\n                    ...state.finalResult,\r\n                    ones: {\r\n                        ...state.finalResult.ones,\r\n                        focusAction: false,\r\n                        carry: null\r\n                    },\r\n                    tens: {\r\n                        ...state.finalResult.tens,\r\n                        focusAction: false,\r\n                        carry: null\r\n                    },\r\n                    hundreds: {\r\n                        ...state.finalResult.hundreds,\r\n                        focusAction: false,\r\n                        carry: null\r\n                    },\r\n                    thousands: {\r\n                        ...state.finalResult.thousands,\r\n                        focusAction: false,\r\n                        carry: null\r\n                    },\r\n                    tenThousands: {\r\n                        ...state.finalResult.tenThousands,\r\n                        focusAction: false,\r\n                        carry: null\r\n                    },\r\n                    hundredThousands: {\r\n                        ...state.finalResult.hundredThousands,\r\n                        focusAction: false,\r\n                        carry: null\r\n                    }\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    18: `The End`\r\n                },\r\n                focusingInput:{\r\n                    ...initialState.focusingInput\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default result;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {combineReducers, createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\n\nimport numbers from './store/reducers/numbers';\nimport carrys from './store/reducers/carry';\nimport results from './store/reducers/results';\n\nconst rootReducer = combineReducers({\n  number : numbers,\n  carry : carrys,\n  result : results\n})\n\n\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Buttons_container__1cSAn\",\"randomDigitContainer\":\"Buttons_randomDigitContainer__jWqI6\",\"selections\":\"Buttons_selections__3rfjF\",\"selectOption\":\"Buttons_selectOption__1hLs4\",\"active\":\"Buttons_active__3P5aW\",\"generate\":\"Buttons_generate__3ilUl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Layout_container__3v8bI\",\"buttons\":\"Layout_buttons__3V5QG\",\"resultSection\":\"Layout_resultSection__3fgKI\",\"board\":\"Layout_board__2pm6b\",\"explaination\":\"Layout_explaination__12tXX\"};"],"sourceRoot":""}