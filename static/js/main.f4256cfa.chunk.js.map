{"version":3,"sources":["containers/NumberBoard/Board.module.css","containers/ActionButtons/Buttons.module.css","containers/Layout/Layout.module.css","containers/Header/Header.module.css","components/Modal/Modal.module.css","containers/ExplainationBoard/ExplainationBoard.module.css","components/Button/Button.module.css","components/Button/Button.js","components/Modal/Modal.js","store/actions/actions.js","containers/ActionButtons/Buttons.js","store/actions/numberFn.js","containers/ExplainationBoard/ExplainationBoard.js","components/BoardHeaderRow/Row.js","components/BoardCarryRow/Row.js","components/BoardResultsRow/Row.js","containers/NumberBoard/Board.js","assets/logo.svg","containers/Header/Header.js","containers/Layout/Layout.js","App.js","store/reducers/results.js","reportWebVitals.js","store/reducers/numbers.js","store/reducers/carry.js","store/texts/text_1x1.js","store/texts/text_2x1.js","store/texts/text_2x2.js","store/texts/text_3x1.js","store/texts/text_3x2.js","store/texts/text_3x3.js","store/reducers/Utility/carry.js","store/reducers/Utility/result.js","store/reducers/Utility/finalResult.js","store/reducers/multiplication.js","index.js"],"names":["module","exports","Button","props","className","classNames","btn","onClick","btnClick","children","Modal","show","container","inner","close","RANDOM_NUMBER","INPUT_NUMBER","START","END","COUNTER","COUNTERPREV","COUNTERCARRY","COUNTERRESULT","connect","state","tR","number","topRow","bR","bottomRow","c","counter","nextBtn","nextBtnHide","btnHide","fR","result","finalResult","carries","multi","answer","carry","results","dispatch","random","d","fn","type","actionTypes","digitCount","rowType","startMulti","t","b","d1","fn1","d2","fn2","endMulti","countSteps","p","u","r","position","upperDigit","lowerDigit","resultDigits","prevSteps","carryNumbers","allInputs","document","querySelectorAll","useState","digitsL","setDigitsL","setUpperDigit","setLowerDigit","0","1","2","activeClassTop","setActiveClassTop","activeClassBottom","setActiveClassBottom","generateOnStart","setGenerateOnStart","randomBtnModal","setRandomBtnModal","falsyObject","randomDigitContainer","selections","map","i","selectOption","toString","active","e","Number","target","innerText","iToStr","upDigit","lowDigit","generate","disabled","inputCheck","emptyCheck","tL","join","length","bL","forEach","alert","title","boardTitle","texts","allTexts","text","dangerouslySetInnerHTML","__html","Object","values","Row","row","brt","classes","color","c1","brc","c2","c3","style","numbers","hundredThousands","focusAction","backgroundColor","value","tenThousands","thousands","hundreds","tens","ones","r1","brf","r2","brs","r3","r4","brl","blank","blankH","fRC","frCarry","zero","zeroO","inputDisable","tLofCarry","topLine","mLofCarry","middleLine","bLofCarry","bottomLine","topResult","middleResult","bottomResult","focusInput","focusingInput","resultRow","resutltsRow","input","newNum","newNumbers","rowPosition","nameInput","rows","inputChange","tb","changeFN","slice","old","useEffect","focus","digits","onChange","max","first","ref","second","third","brd","Header","header","ico","src","Logo","alt","logo","Layout","board_container","explainer_container","number_pad_container","App","nto","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","reducer","actions","randomNumberGenerate","digit","randomNumArray","randomNum1","Math","floor","randomNum2","randomNum3","randomNumString1","randomNumString2","randomNumString3","initialState","action","returnedObject","stepsFn","obj","line","focusPos","carryNumb","cL1","cL11","logic1","logic2","cL12","cL2","cL21","cL22","cL3","cL31","cL32","c4","c5","c6","logic11","logic21","logic22","logic31","logic32","logic33","texts_1x1","t1","b1","texts_2x1","t2","cr1","emptySpaceText","texts_2x2","b2","cr4","r5","r6","r7","r13","r14","r15","r16","fcr1","fcr2","fcr3","fc1","fc2","fc3","texts_3x1","t3","cr2","texts_3x2","cr5","r8","r17","fcr4","fc4","texts_3x3","b3","cr7","cr8","r9","r10","r11","r12","r18","fcr5","c7","c8","fc5","textCounter","textsLines","rL1","rL11","rL12","rL13","rL14","rL2","rL21","rL22","rL23","rL24","rL3","rL31","rL32","rL33","rL34","fr1","fr2","fr3","fr4","fr5","fr6","newTextsObjectCreate","valuesTextsArr","keysTextsArr","removedTextsArr","newTextsObj","pop","keys","carryNumFn","prev","p1","p2","cNumFn","carryNumber","resultNumFn","rNumFn","resultNumber","finalResultFn","n1","n2","n3","resultNum","carryingNum","multiplication","c9","fR1","fR2","fR3","fR4","fR5","fR6","cL13","cL23","cL33","rootReducer","combineReducers","carrys","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f4256cfa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Board_container__2I5Ib\",\"inner\":\"Board_inner__2ui33\",\"row\":\"Board_row__18vsI\",\"brt\":\"Board_brt__xPrsW\",\"brc\":\"Board_brc__3n5cg\",\"brd\":\"Board_brd__3DKRt\",\"brp\":\"Board_brp__35wCz\",\"brf\":\"Board_brf__1vJ_z\",\"brs\":\"Board_brs__3A5Vz\",\"brl\":\"Board_brl__2ardM\",\"title\":\"Board_title__19QT0\",\"carry\":\"Board_carry__228Lj\",\"c1\":\"Board_c1__2Pkos\",\"c2\":\"Board_c2__Ku30P\",\"c3\":\"Board_c3__1lw3n\",\"digits\":\"Board_digits__2eP5W\",\"results\":\"Board_results__2jIgY\",\"r1\":\"Board_r1__1M1AW\",\"r2\":\"Board_r2__IUv_C\",\"r3\":\"Board_r3__3b8xK\",\"r4\":\"Board_r4__3y_96\",\"frCarry\":\"Board_frCarry__3N2r0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Buttons_container__1cSAn\",\"inner\":\"Buttons_inner__1OAFK\",\"randomDigitContainer\":\"Buttons_randomDigitContainer__jWqI6\",\"selections\":\"Buttons_selections__3rfjF\",\"selectOption\":\"Buttons_selectOption__1hLs4\",\"active\":\"Buttons_active__3P5aW\",\"generate\":\"Buttons_generate__3ilUl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Layout_container__3v8bI\",\"inner\":\"Layout_inner__3JCe2\",\"board_container\":\"Layout_board_container__2Qn4q\",\"number_pad_container\":\"Layout_number_pad_container__2GVLx\",\"explainer_container\":\"Layout_explainer_container__1Mz_o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2u7Yr\",\"ico\":\"Header_ico__1UaI6\",\"logo\":\"Header_logo__2adzS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Modal_container__21mgz\",\"close\":\"Modal_close__2a0K7\",\"inner\":\"Modal_inner__1SoX6\",\"zoom\":\"Modal_zoom__qicFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ExplainationBoard_container__3g7PE\",\"inner\":\"ExplainationBoard_inner__F6iLu\",\"text\":\"ExplainationBoard_text__2yJMS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__2mB2p\"};","import React from 'react';\r\nimport classNames from './Button.module.css';\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <div className={classNames.btn}>\r\n            <button onClick={props.btnClick}> {props.children} </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport classNames from './Modal.module.css';\r\n\r\nconst Modal = (props) => {\r\n    return (\r\n        <>\r\n        {props.show ? <div className={classNames.container}>\r\n            <div className={classNames.inner}>\r\n                <div className={classNames.close}>\r\n                    <button onClick={props.close}>Close</button>\r\n                </div>\r\n                {props.children}\r\n            </div>\r\n        </div> : null}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Modal;","export const RANDOM_NUMBER = 'RANDOM_NUMBER';\r\nexport const INPUT_NUMBER = 'INPUT_NUMBER';\r\nexport const START = 'START';\r\nexport const END = 'END';\r\nexport const COUNTER = 'COUNTER';\r\nexport const COUNTERPREV = 'COUNTERPREV';\r\nexport const COUNTERCARRY = 'COUNTERCARRY';\r\nexport const COUNTERRESULT = 'COUNTERRESULT';","import React, { useState } from \"react\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport Modal from '../../components/Modal/Modal';\r\nimport classNames from \"./Buttons.module.css\";\r\nimport {connect} from 'react-redux';\r\nimport * as reduxFunctions from '../../store/actions/index';\r\n\r\nconst Buttons = (props) => {\r\n  const allInputs = document.querySelectorAll('#inputs');\r\n  const digitsU = [\"1\", \"2\", \"3\"];\r\n  const [digitsL, setDigitsL] = useState([\"1\", \"2\", \"3\"]);\r\n  const [upperDigit, setUpperDigit] = useState(3);\r\n  const [lowerDigit, setLowerDigit] = useState(3);\r\n  const [activeClassTop, setActiveClassTop] = useState({\r\n    0:false,\r\n    1:false,\r\n    2:true\r\n  })\r\n  const [activeClassBottom, setActiveClassBottom] = useState({\r\n    0:false,\r\n    1:false,\r\n    2:true\r\n  })\r\n  const [generateOnStart, setGenerateOnStart] = useState(true);\r\n\r\n  const [randomBtnModal, setRandomBtnModal] = useState(false);\r\n  const triggerModal = () => {\r\n    setRandomBtnModal(true);\r\n  };\r\n  const closeModal = () => {\r\n    setRandomBtnModal(false);\r\n  };\r\n  const falsyObject = {\r\n    0:false,\r\n    1:false,\r\n    2:false\r\n  }\r\n  const upDigit = (e, i) => {\r\n    setUpperDigit(Number(e.target.innerText));\r\n    const iToStr = i.toString();\r\n    setActiveClassTop({\r\n      ...falsyObject,\r\n      [i.toString()] : !activeClassTop[iToStr]\r\n    })\r\n    switch (i) {\r\n      case 0:\r\n        setDigitsL(['1'])\r\n        setLowerDigit(1)\r\n        setActiveClassBottom({\r\n          ...falsyObject,\r\n          0: true\r\n        })\r\n        break;\r\n      case 1:\r\n        setDigitsL(['1', '2'])\r\n        setLowerDigit(2)\r\n        setActiveClassBottom({\r\n          ...falsyObject,\r\n          1: true\r\n        })\r\n        break;\r\n      case 2:\r\n        setDigitsL(['1', '2', '3'])\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const lowDigit = (e, i) => {\r\n    setLowerDigit(Number(e.target.innerText));\r\n    const iToStr = i.toString();\r\n    setActiveClassBottom({\r\n      ...falsyObject,\r\n      [i.toString()] : !activeClassBottom[iToStr]\r\n    })\r\n  };\r\n  const starting = () => {\r\n    let inputCheck = true;\r\n    let emptyCheck = true;\r\n    const tL = props.tR.join('').length;\r\n    const bL = props.bR.join('').length;\r\n\r\n    if(tL < bL){\r\n      inputCheck = false;\r\n    }\r\n\r\n    if(tL <= 0 || bL <= 0){\r\n      emptyCheck = false;\r\n    }\r\n\r\n    if(inputCheck && emptyCheck){\r\n      allInputs.forEach(c=>{\r\n        c.disabled = true;\r\n      })\r\n      setUpperDigit(tL);\r\n      setLowerDigit(bL);\r\n      props.startMulti(props.tR, props.bR);\r\n      if(!generateOnStart){\r\n        setGenerateOnStart(true);\r\n      }\r\n    }else if(!inputCheck){\r\n      alert('You can\\'t add less numbers in the bottom then top!')\r\n    }else if(!emptyCheck){\r\n      alert('You can\\'t leave top or bottom fields empty!')\r\n    }\r\n  }\r\n\r\n  const ending = () => {\r\n    props.endMulti();\r\n  }\r\n\r\n  const setTopAndBelowItems = () => {\r\n    setRandomBtnModal(false);\r\n    setGenerateOnStart(false);\r\n    props.random(upperDigit, 'topRow');\r\n    props.random(lowerDigit, 'bottomRow');\r\n  };\r\n\r\n  const nextSteps = () => {\r\n    props.countSteps(props.c, upperDigit, lowerDigit, props.results);\r\n    props.carry(props.c, props.carries, upperDigit, lowerDigit);\r\n    props.result(props.c, upperDigit, lowerDigit);\r\n  }\r\n\r\n  const prevSteps = () => {\r\n    props.prevSteps(props.c, upperDigit, lowerDigit, props.results);\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Modal show={randomBtnModal} close={closeModal}>\r\n        <div className={classNames.randomDigitContainer}>\r\n          <h1>How many digit you want in top?</h1>\r\n          <div className={classNames.selections}>\r\n            {digitsU.map((c, i) => {\r\n              return (\r\n                <div\r\n                  key={c}\r\n                  className={`${classNames.selectOption} ${activeClassTop[i.toString()] ? classNames.active : null }`}\r\n                  onClick={(e) => {\r\n                    upDigit(e, i);\r\n                  }}\r\n                >\r\n                  {c}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className={classNames.randomDigitContainer}>\r\n          <h1>How many digit you want in Bottom?</h1>\r\n          <div className={classNames.selections}>\r\n            {digitsL.map((c, i) => {\r\n              return (\r\n                <div\r\n                  key={c}\r\n                  className={`${classNames.selectOption} ${activeClassBottom[i.toString()] ? classNames.active : null }`}\r\n                  onClick={(e) => {\r\n                    lowDigit(e, i);\r\n                  }}\r\n                >\r\n                  {c}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className={classNames.generate}>\r\n          <Button btnClick={setTopAndBelowItems}>\r\n            <span>Generate</span>\r\n            <i className=\"fas fa-check\"></i>\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n      <div className={classNames.container}>\r\n        <div className={classNames.inner}>\r\n          {/* props.btnHide props.nextBtn */}\r\n          <button onClick={triggerModal} disabled={!props.btnHide}>\r\n            <i className=\"fas fa-random\"></i>\r\n          </button>\r\n          <button onClick={prevSteps} disabled={props.btnHide || props.nextBtn ? true : false}>\r\n            <i className=\"fas fa-fast-backward\"></i>\r\n          </button>\r\n          <button onClick={starting} disabled={!props.btnHide}>\r\n            <i className=\"fas fa-play\"></i>\r\n          </button>\r\n          <button onClick={ending} disabled={props.btnHide}>\r\n            <i className=\"fas fa-pause\"></i>\r\n          </button>\r\n          <button onClick={nextSteps} disabled={props.btnHide || props.nextBtn ? true : false}>\r\n            <i className=\"fas fa-fast-forward\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nconst mapStatetoProps = state => {\r\n  return{\r\n      tR: state.number.topRow,\r\n      bR: state.number.bottomRow,\r\n      c: state.number.counter,\r\n      nextBtn: state.number.nextBtnHide,\r\n      btnHide: state.number.btnHide,\r\n      fR: state.result.finalResult,\r\n      carries: state.multi.answer.carry,\r\n      results: state.multi.answer\r\n  }\r\n}\r\n\r\nconst mapDispatchtoProps = dispatch => {\r\n  return{\r\n      random: (d, fn) => dispatch(reduxFunctions.randomNumberGenerate(d, fn)),\r\n      startMulti: (t, b, d1, fn1, d2, fn2) => dispatch(reduxFunctions.startMultiplication(t, b, d1, fn1, d2, fn2)),\r\n      endMulti: () => dispatch(reduxFunctions.endMultiplication()),\r\n      countSteps: (p, u, d, r) => dispatch(reduxFunctions.stepCounter(p, u, d, r)),\r\n      prevSteps: (c, u, d, r) => dispatch(reduxFunctions.prevCounter(c, u, d, r)),\r\n      carry: (p, c, u, d) => dispatch(reduxFunctions.carryAddition(p, c, u, d)),\r\n      result: (p, u, d, r) => dispatch(reduxFunctions.resultAddition(p, u, d, r))\r\n  }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Buttons);","import * as actionTypes from './actions';\r\n\r\nexport const randomNumberGenerate = (digitCounter, changerFn) => {\r\n    return{\r\n        type: actionTypes.RANDOM_NUMBER,\r\n        digitCount: digitCounter,\r\n        rowType: changerFn\r\n    }\r\n}\r\nexport const inputNumber = (updatedNumbers, changerFn) => {\r\n    return{\r\n        type: actionTypes.INPUT_NUMBER,\r\n        newNumbers: updatedNumbers,\r\n        rowPosition: changerFn\r\n    }\r\n}\r\nexport const startMultiplication = (topRow, bottomRow) => {\r\n    return{\r\n        type: actionTypes.START,\r\n        topRow: topRow,\r\n        bottomRow: bottomRow\r\n    }\r\n}\r\nexport const endMultiplication = () => {\r\n    return{\r\n        type: actionTypes.END\r\n    }\r\n}\r\nexport const stepCounter = (position, upperDigit, lowerDigit, resultDigits) => {\r\n    return{\r\n        type: actionTypes.COUNTER,\r\n        position: position,\r\n        upperDigit: upperDigit,\r\n        lowerDigit: lowerDigit,\r\n        resultDigits: resultDigits\r\n    }\r\n}\r\nexport const prevCounter = (position, upperDigit, lowerDigit, resultDigits) => {\r\n    return{\r\n        type: actionTypes.COUNTERPREV,\r\n        upperDigit: upperDigit,\r\n        lowerDigit: lowerDigit,\r\n        position: position,\r\n        resultDigits: resultDigits\r\n    }\r\n}\r\nexport const carryAddition = (position, carryNumbers, upperDigit, lowerDigit) => {\r\n    return{\r\n        type: actionTypes.COUNTERCARRY,\r\n        position: position,\r\n        carryNumbers: carryNumbers,\r\n        upperDigit: upperDigit,\r\n        lowerDigit: lowerDigit\r\n    }\r\n}\r\nexport const resultAddition = (position, upperDigit, lowerDigit) => {\r\n    return{\r\n        type: actionTypes.COUNTERRESULT,\r\n        position: position,\r\n        upperDigit: upperDigit,\r\n        lowerDigit: lowerDigit\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classNames from './ExplainationBoard.module.css';\r\n\r\nconst ExplainationBoard = (props) => {\r\n    return (\r\n        <div className={classNames.container}>\r\n            <div className={classNames.inner}>\r\n                <div className={classNames.text}>\r\n                    <h3 dangerouslySetInnerHTML={{ __html: props.title.show ? props.title.title : 'Generate random numbers to start' }}></h3>\r\n                    <div>\r\n                        {Object.values(props.texts).map((c, i)=>{\r\n                            return <p dangerouslySetInnerHTML={{__html: c}} key={i}></p>\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStatetoProps = state => {\r\n    return{\r\n        title: state.number.boardTitle,\r\n        texts: state.result.allTexts\r\n    }\r\n}\r\nexport default connect(mapStatetoProps)(ExplainationBoard);","import React from 'react';\r\nimport classNames from '../../containers/NumberBoard/Board.module.css';\r\n\r\nconst Row = () => {\r\n    return (\r\n        <div className={`${classNames.row}`}>\r\n            <div className={`${classNames.title} ${classNames.brt}`}>\r\n                <h4>Hundred Thousands</h4>\r\n            </div>\r\n            <div className={`${classNames.title} ${classNames.brt}`}>\r\n                <h4>Ten Thousands</h4>\r\n            </div>\r\n            <div className={`${classNames.title} ${classNames.brt}`}>\r\n                <h4>Thousands</h4>\r\n            </div>\r\n            <div className={`${classNames.title} ${classNames.brt}`}>\r\n                <h4>Hundreds</h4>\r\n            </div>\r\n            <div className={`${classNames.title} ${classNames.brt}`}>\r\n                <h4>Tens</h4>\r\n            </div>\r\n            <div className={`${classNames.title} ${classNames.brt}`}>\r\n                <h4>Ones</h4>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Row;","import React from 'react';\r\nimport classNames from '../../containers/NumberBoard/Board.module.css';\r\n\r\nconst Row = (props) => {\r\n    let classes;\r\n    switch (props.color) {\r\n        case 'c1':\r\n            classes = `${classNames.carry} ${classNames.c1} ${classNames.brc}`\r\n            break;\r\n        case 'c2':\r\n            classes = `${classNames.carry} ${classNames.c2} ${classNames.brc}`\r\n            break;\r\n        case 'c3':\r\n            classes = `${classNames.carry} ${classNames.c3} ${classNames.brc}`\r\n            break;\r\n    \r\n        default:\r\n            classes = `${classNames.carry} ${classNames.c1} ${classNames.brc}`\r\n            break;\r\n    }\r\n    return (\r\n        <>\r\n        <div className={classNames.row}>\r\n            <div className={classes} style={props.numbers.hundredThousands.focusAction ? {backgroundColor: '#ffffc0'} : null}>\r\n                <h2>{props.numbers.hundredThousands.value}</h2>\r\n            </div>\r\n            <div className={classes} style={props.numbers.tenThousands.focusAction ? {backgroundColor: '#ffffc0'} : null}>\r\n                <h2>{props.numbers.tenThousands.value}</h2>\r\n            </div>\r\n            <div className={classes} style={props.numbers.thousands.focusAction ? {backgroundColor: '#ffffc0'} : null}>\r\n                <h2>{props.numbers.thousands.value}</h2>\r\n            </div>\r\n            <div className={classes} style={props.numbers.hundreds.focusAction ? {backgroundColor: '#ffffc0'} : null}>\r\n                <h2>{props.numbers.hundreds.value}</h2>\r\n            </div>\r\n            <div className={classes} style={props.numbers.tens.focusAction ? {backgroundColor: '#ffffc0'} : null}>\r\n                <h2>{props.numbers.tens.value}</h2>\r\n            </div>\r\n            <div className={classes}>\r\n                <h2>{props.numbers.ones.value}</h2>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Row;","import React from 'react';\r\nimport classNames from '../../containers/NumberBoard/Board.module.css';\r\n\r\nconst Row = (props) => {\r\n    let classes;\r\n    switch (props.color) {\r\n        case 'r1':\r\n            classes = `${classNames.results} ${classNames.r1} ${classNames.brf}`\r\n            break;\r\n        case 'r2':\r\n            classes = `${classNames.results} ${classNames.r2} ${classNames.brs}`\r\n            break;\r\n        case 'r3':\r\n            classes = `${classNames.results} ${classNames.r3} ${classNames.brt}`\r\n            break;\r\n        case 'r4':\r\n            classes = `${classNames.results} ${classNames.r4} ${classNames.brl}`\r\n            break;\r\n    \r\n        default:\r\n            break;\r\n    }\r\n    return (\r\n        <div className={classNames.row}>\r\n            <div className={classes} style={props.numbers.hundredThousands.focusAction ? {backgroundColor: '#ffffc0'} : props.blank || props.blankH ? {backgroundColor: 'white'} : null}>\r\n                {props.fRC ? <span className={classNames.frCarry}>{props.fRC.hundredThousands.carry}</span>:null}\r\n                <h1>{props.numbers.hundredThousands.value}</h1>\r\n            </div>\r\n            <div className={classes} style={props.numbers.tenThousands.focusAction ? {backgroundColor: '#ffffc0'} : props.blank ? {backgroundColor: 'white'} : null}>\r\n                {props.fRC ? <span className={classNames.frCarry}>{props.fRC.tenThousands.carry}</span>:null}\r\n                <h1>{props.numbers.tenThousands.value}</h1>\r\n            </div>\r\n            <div className={classes} style={props.numbers.thousands.focusAction ? {backgroundColor: '#ffffc0'} : null}>\r\n                {props.fRC ? <span className={classNames.frCarry}>{props.fRC.thousands.carry}</span>:null}\r\n                <h1>{props.numbers.thousands.value}</h1>\r\n            </div>\r\n            <div className={classes} style={props.numbers.hundreds.focusAction ? {backgroundColor: '#ffffc0'} : null}>\r\n                {props.fRC ? <span className={classNames.frCarry}>{props.fRC.hundreds.carry}</span>:null}\r\n                <h1>{props.numbers.hundreds.value}</h1>\r\n            </div>\r\n            <div className={classes} style={props.numbers.tens.focusAction ? {backgroundColor: '#ffffc0'} : props.zero ? {backgroundColor: 'white', color: '#D9D9D9'} : null}>\r\n                {props.fRC ? <span className={classNames.frCarry}>{props.fRC.tens.carry}</span>:null}\r\n                <h1>{props.numbers.tens.value}</h1>\r\n            </div>\r\n            <div className={classes} style={props.numbers.ones.focusAction ? {backgroundColor: '#ffffc0'} : props.zero || props.zeroO ? {backgroundColor: 'white', color: '#D9D9D9'} : null}>\r\n                <h1>{props.numbers.ones.value}</h1>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Row;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from '../../components/BoardHeaderRow/Row';\r\nimport Carry from '../../components/BoardCarryRow/Row';\r\nimport Result from '../../components/BoardResultsRow/Row';\r\nimport classNames from './Board.module.css';\r\nimport * as reduxFunctions from '../../store/actions/index';\r\n\r\nconst Board = (props) => {\r\n\r\n    const inputChange = (e, i, tb, changeFN)=>{\r\n        let maxLength = 1;\r\n        if (e.target.value.length > maxLength){\r\n            e.target.value = e.target.value.slice(0, maxLength);\r\n        }\r\n        let old = [...tb]\r\n        old[i] = e.target.value;\r\n        props.input(old, changeFN);\r\n    }\r\n\r\n    let nameInput;\r\n\r\n    useEffect(()=>{\r\n        nameInput.focus();\r\n    },[nameInput])\r\n\r\n    let rows;\r\n\r\n    switch (props.resultRow) {\r\n        case 1:\r\n            rows = <>\r\n                <Result numbers={props.r1} color='r1' blank fRC={props.r4} />\r\n            </>\r\n            break;\r\n        case 2:\r\n            rows = <>\r\n                <Result numbers={props.r1} color='r1' blank fRC={props.r4} />\r\n                <Result numbers={props.r2} color='r2' blankH zeroO />\r\n                <Result numbers={props.r4} color='r4'/>\r\n            </>\r\n            break;\r\n        case 3:\r\n            rows = <>\r\n                <Result numbers={props.r1} color='r1' blank fRC={props.r4} />\r\n                <Result numbers={props.r2} color='r2' blankH zeroO />\r\n                <Result numbers={props.r3} color='r3' zero/>\r\n                <Result numbers={props.r4} color='r4'/>\r\n            </>\r\n            break;\r\n    \r\n        default:\r\n            rows = null;\r\n            break;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classNames.container}>\r\n            <div className={classNames.inner}>\r\n                <Header />\r\n\r\n                <Carry numbers={props.tLofCarry} color='c1' />\r\n                <Carry numbers={props.mLofCarry} color='c2' />\r\n                <Carry numbers={props.bLofCarry} color='c3' />\r\n\r\n                <div className={classNames.row}>\r\n                    <div className={`${classNames.digits} ${classNames.brc}`}>\r\n                        <h1>{null}</h1>\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brc}`}>\r\n                        <h1>{null}</h1>\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brc}`}>\r\n                        <h1>{null}</h1>\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brc}`}>\r\n                        <input\r\n                        type='number'\r\n                        value={props.tR[0]}\r\n                        onChange={(e)=>inputChange(e, 0, props.tR, 'topRow')} max=\"1\"\r\n                        style={props.focusInput.t.first ? {backgroundColor: 'yellow'} : null}\r\n                        ref={(input) => { nameInput = input; }}\r\n                        disabled={props.inputDisable}\r\n                        />\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brc}`}>\r\n                        <input\r\n                        type='number'\r\n                        value={props.tR[1]}\r\n                        onChange={(e)=>inputChange(e, 1, props.tR, 'topRow')} max=\"1\"\r\n                        style={props.focusInput.t.second ? {backgroundColor: 'yellow'} : null}\r\n                        disabled={props.inputDisable}\r\n                        />\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brc}`}>\r\n                        <input\r\n                        type='number'\r\n                        value={props.tR[2]}\r\n                        onChange={(e)=>inputChange(e, 2, props.tR, 'topRow')}\r\n                        max=\"1\"\r\n                        style={props.focusInput.t.third ? {backgroundColor: 'yellow'} : null}\r\n                        disabled={props.inputDisable}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classNames.row}>\r\n                    <div className={`${classNames.digits} ${classNames.brd}`}>\r\n                        <h1>X</h1>\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brd}`}>\r\n                        <h1>{null}</h1>\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brd}`}>\r\n                        <h1>{null}</h1>\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brd}`}>\r\n                        <input\r\n                        type='number'\r\n                        value={props.bR[0]}\r\n                        onChange={(e)=>inputChange(e, 0, props.bR, 'bottomRow')} max=\"1\"\r\n                        style={props.focusInput.b.first ? {backgroundColor: 'yellow', color:'#0070C0'} : {color:'#0070C0'}}\r\n                        disabled={props.inputDisable}\r\n                        />\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brd}`}>\r\n                        <input\r\n                        type='number'\r\n                        value={props.bR[1]}\r\n                        onChange={(e)=>inputChange(e, 1, props.bR, 'bottomRow')} max=\"1\"\r\n                        style={props.focusInput.b.second ? {backgroundColor: 'yellow', color:'#00B050'} : {color:'#00B050'}}\r\n                        disabled={props.inputDisable}\r\n                        />\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brd}`}>\r\n                        <input\r\n                        type='number'\r\n                        value={props.bR[2]}\r\n                        onChange={(e)=>inputChange(e, 2, props.bR, 'bottomRow')} max=\"1\"\r\n                        style={props.focusInput.b.third ? {backgroundColor: 'yellow', color:'#7030A0'} : {color:'#7030A0'}}\r\n                        disabled={props.inputDisable}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                \r\n                {rows}\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStatetoProps = state => {\r\n    return{\r\n        tR: state.number.topRow,\r\n        bR: state.number.bottomRow,\r\n        inputDisable: state.number.inputDisable,\r\n        tLofCarry : state.carry.topLine,\r\n        mLofCarry : state.carry.middleLine,\r\n        bLofCarry : state.carry.bottomLine,\r\n        r1 : state.result.topResult,\r\n        r2 : state.result.middleResult,\r\n        r3 : state.result.bottomResult,\r\n        r4 : state.result.finalResult,\r\n        focusInput: state.result.focusingInput,\r\n        resultRow : state.number.resutltsRow\r\n    }\r\n}\r\nconst mapDispatchtoProps = dispatch => {\r\n    return{\r\n        input: (newNum, fn) => dispatch(reduxFunctions.inputNumber(newNum, fn))\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Board);","export default __webpack_public_path__ + \"static/media/logo.a9eac690.svg\";","import React from 'react';\r\nimport classNames from './Header.module.css';\r\nimport Logo from '../../assets/logo.svg';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className={classNames.header}>\r\n            <div className={classNames.ico}>\r\n                <img src={Logo} alt=\"Logo\" />\r\n            </div>\r\n            <div className={classNames.logo}>\r\n                <h1>Multi Plus</h1>\r\n            </div>\r\n            <div className={classNames.ico}>\r\n                <i className=\"fas fa-bars\"></i>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport Buttons from '../ActionButtons/Buttons';\r\nimport ExplainationBoard from '../ExplainationBoard/ExplainationBoard';\r\nimport Board from '../NumberBoard/Board';\r\nimport classNames from './Layout.module.css';\r\nimport Header from '../Header/Header';\r\n\r\nconst Layout = () => {\r\n    return (\r\n        <>\r\n            <div className={classNames.container}>\r\n                <Header />\r\n                <div className={classNames.inner}>\r\n                    <div className={classNames.board_container}>\r\n                        <Board/>\r\n                    </div>\r\n                    <div className={classNames.explainer_container}>\r\n                        <ExplainationBoard/>\r\n                    </div>\r\n                    <div className={classNames.number_pad_container}>\r\n\r\n                    </div>\r\n                </div>\r\n                <Buttons/>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nexport default Layout;","import Layout from \"./containers/Layout/Layout\";\n\n\nfunction App() {\n  return (\n    <Layout />\n  );\n}\n\nexport default App;\n","import * as actionTypes from '../actions/actions';\r\nimport texts_1x1 from '../texts/text_1x1';\r\nimport texts_2x1 from '../texts/text_2x1';\r\nimport texts_2x2 from '../texts/text_2x2';\r\nimport texts_3x1 from '../texts/text_3x1';\r\nimport texts_3x2 from '../texts/text_3x2';\r\nimport texts_3x3 from '../texts/text_3x3';\r\n\r\nconst initialState = {\r\n    topResult:{\r\n        ones: {focusAction: false, value: null},\r\n        tens: {focusAction: false, value: null},\r\n        hundreds: {focusAction: false, value: null},\r\n        thousands: {focusAction: false, value: null},\r\n        tenThousands: {focusAction: false, value: null},\r\n        hundredThousands: {focusAction: false, value: null}\r\n    },\r\n    middleResult:{\r\n        ones: {focusAction: false, value: null},\r\n        tens: {focusAction: false, value: null},\r\n        hundreds: {focusAction: false, value: null},\r\n        thousands: {focusAction: false, value: null},\r\n        tenThousands: {focusAction: false, value: null},\r\n        hundredThousands: {focusAction: false, value: null}\r\n    },\r\n    bottomResult:{\r\n        ones: {focusAction: false, value: null},\r\n        tens: {focusAction: false, value: null},\r\n        hundreds: {focusAction: false, value: null},\r\n        thousands: {focusAction: false, value: null},\r\n        tenThousands: {focusAction: false, value: null},\r\n        hundredThousands: {focusAction: false, value: null}\r\n    },\r\n    finalResult:{\r\n        ones: {focusAction: false, value: null},\r\n        tens: {focusAction: false, value: null},\r\n        hundreds: {focusAction: false, value: null},\r\n        thousands: {focusAction: false, value: null},\r\n        tenThousands: {focusAction: false, value: null},\r\n        hundredThousands: {focusAction: false, value: null}\r\n    },\r\n    focusingInput: {\r\n        t:{\r\n            first: false,\r\n            second: false,\r\n            third: false\r\n        },\r\n        b:{\r\n            first: false,\r\n            second: false,\r\n            third: false\r\n        },\r\n    },\r\n    allTexts: {},\r\n    textCounter: 0\r\n};\r\n\r\nlet nto;\r\n\r\nconst result = (state = initialState, action)=>{\r\n    if(action.type === actionTypes.END){\r\n        return initialState;\r\n    }\r\n    let returnedObject = {};\r\n\r\n    let r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18;\r\n\r\n    let fc1, fc2, fc3, fc4, fc5;\r\n\r\n    let t1, t2, t3, b1, b2, b3, c1, c2, c4, c5, c7, c8;\r\n\r\n    let textsLines;\r\n\r\n    if(action.type === actionTypes.COUNTER){\r\n        r1 = action.resultDigits.result.rL1.rL11;\r\n        r2 = action.resultDigits.result.rL1.rL12;\r\n        r3 = action.resultDigits.result.rL1.rL13;\r\n        r4 = action.resultDigits.result.rL1.rL14;\r\n        r5 = action.resultDigits.result.rL2.rL21;\r\n        r6 = action.resultDigits.result.rL2.rL22;\r\n        r7 = action.resultDigits.result.rL2.rL23;\r\n        r8 = action.resultDigits.result.rL2.rL24;\r\n        r9 = action.resultDigits.result.rL3.rL31;\r\n        r10 = action.resultDigits.result.rL3.rL32;\r\n        r11 = action.resultDigits.result.rL3.rL33;\r\n        r12 = action.resultDigits.result.rL3.rL34;\r\n\r\n        r13 = action.resultDigits.finalResult.r.fr1;\r\n        r14 = action.resultDigits.finalResult.r.fr2;\r\n        r15 = action.resultDigits.finalResult.r.fr3;\r\n        r16 = action.resultDigits.finalResult.r.fr4;\r\n        r17 = action.resultDigits.finalResult.r.fr5;\r\n        r18 = action.resultDigits.finalResult.r.fr6;\r\n\r\n        fc1 = action.resultDigits.finalResult.c.fc1;\r\n        fc2 = action.resultDigits.finalResult.c.fc2;\r\n        fc3 = action.resultDigits.finalResult.c.fc3;\r\n        fc4 = action.resultDigits.finalResult.c.fc4;\r\n        fc5 = action.resultDigits.finalResult.c.fc5;\r\n\r\n        t1 = action.resultDigits.number.t1;\r\n        t2 = action.resultDigits.number.t2;\r\n        t3 = action.resultDigits.number.t3;\r\n        b1 = action.resultDigits.number.b1;\r\n        b2 = action.resultDigits.number.b2;\r\n        b3 = action.resultDigits.number.b3;\r\n\r\n        c1 = action.resultDigits.carry.cL1.cL11;\r\n        c2 = action.resultDigits.carry.cL1.cL12;\r\n        c4 = action.resultDigits.carry.cL2.cL21;\r\n        c5 = action.resultDigits.carry.cL2.cL22;\r\n        c7 = action.resultDigits.carry.cL3.cL31;\r\n        c8 = action.resultDigits.carry.cL3.cL32;\r\n\r\n        if(action.upperDigit === 1 && action.lowerDigit === 1){\r\n            textsLines = texts_1x1(t1, b1, r1, r2);\r\n        }else if(action.upperDigit === 2 && action.lowerDigit === 1){\r\n            textsLines = texts_2x1(t1, t2, b1, c1, r1, r2, r3);\r\n        }else if(action.upperDigit === 2 && action.lowerDigit === 2){\r\n            textsLines = texts_2x2(t1, t2, b1, b2, c1, r1, r2, r3, r5, r6, r7, r13, r14, fc1, fc2, fc3);\r\n        }else if(action.upperDigit === 3 && action.lowerDigit === 1){\r\n            textsLines = texts_3x1(t1, t2, t3, b1, c1, c2, r1, r2, r3, r4);\r\n        }else if(action.upperDigit === 3 && action.lowerDigit === 2){\r\n            textsLines = texts_3x2(t1, t2, t3, b1, b2, c1, c2, c4, c5, r1, r2, r3, r4, r5, r6, r7, r8, r13, r14, r15, r16, r17, fc1, fc2, fc3, fc4);\r\n        }else if(action.upperDigit === 3 && action.lowerDigit === 3){\r\n            textsLines = texts_3x3(t1, t2, t3, b1, b2, b3, c1, c2, c4, c5, c7, c8, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, fc1, fc2, fc3, fc4, fc5);\r\n        }\r\n\r\n        switch (action.position) {\r\n            case 0:\r\n                if(action.upperDigit === 1 && action.lowerDigit === 1){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            ones:{\r\n                                focusAction: true,\r\n                                value: r1,\r\n                            },\r\n                            tens:{\r\n                                focusAction: r2 ? true : false,\r\n                                value: r2 === 0 ? null : r2\r\n                            }\r\n                        }\r\n                    }\r\n                }else{\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            ones:{\r\n                                focusAction: true,\r\n                                value: r1\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            third: true\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b,\r\n                            third: true\r\n                        },\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    }\r\n                }\r\n            case 1:\r\n                const logic1  = action.upperDigit === 2 && action.lowerDigit === 1;\r\n                const logic2 = action.upperDigit === 2 && action.lowerDigit === 2;\r\n                if(logic1 || logic2){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            ones:{\r\n                                ...state.topResult.ones,\r\n                                focusAction: false\r\n                            },\r\n                            tens:{\r\n                                focusAction: true,\r\n                                value: r2\r\n                            },\r\n                            hundreds:{\r\n                                focusAction: r3 ? true : false,\r\n                                value: r3\r\n                            }\r\n                        }\r\n                    }\r\n                }else{\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            ones:{\r\n                                ...state.topResult.ones,\r\n                                focusAction: false\r\n                            },\r\n                            tens:{\r\n                                focusAction: true,\r\n                                value: r2\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            second: true,\r\n                            third: false\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b\r\n                        },\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    }\r\n                }\r\n            case 2:\r\n                return{\r\n                    ...state,\r\n                    topResult:{\r\n                        ...state.topResult,\r\n                        tens:{\r\n                            ...state.topResult.tens,\r\n                            focusAction: false\r\n                        },\r\n                        hundreds:{\r\n                            focusAction: true,\r\n                            value: r3\r\n                        },\r\n                        thousands:{\r\n                            focusAction: r4 ? true : false,\r\n                            value: r4,\r\n                        },\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    },\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            first: true,\r\n                            second: false\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b\r\n                        },\r\n                    }\r\n                }\r\n            case 3:\r\n                if(action.upperDigit === 2 && action.lowerDigit === 2){\r\n                    returnedObject = {\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            first: false,\r\n                            second: false\r\n                        }\r\n                    }\r\n                }else{\r\n                    returnedObject = {\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            first: false\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    topResult:{\r\n                        ...state.topResult,\r\n                        tens:{\r\n                            ...state.topResult.tens,\r\n                            focusAction: false\r\n                        },\r\n                        hundreds:{\r\n                            ...state.topResult.hundreds,\r\n                            focusAction: false\r\n                        },\r\n                        thousands:{\r\n                            ...state.topResult.thousands,\r\n                            focusAction: false\r\n                        }\r\n                    },\r\n                    middleResult:{\r\n                        ...state.middleResult,\r\n                        ones:{\r\n                            ...state.middleResult.ones,\r\n                            focusAction: true,\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    },\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...returnedObject\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b,\r\n                            third: false,\r\n                            second: true\r\n                        },\r\n                    }\r\n                }\r\n            case 4:\r\n                return{\r\n                    ...state,\r\n                    middleResult:{\r\n                        ...state.middleResult,\r\n                        ones:{\r\n                            ...state.middleResult.ones,\r\n                            focusAction: false\r\n                        },\r\n                        tens:{\r\n                            focusAction: true,\r\n                            value: r5\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    },\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            third: true\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b\r\n                        },\r\n                    }\r\n                }\r\n            case 5:\r\n                if(action.upperDigit === 2 && action.lowerDigit === 2){\r\n                    returnedObject = {\r\n                        middleResult:{\r\n                            ...state.middleResult,\r\n                            tens:{\r\n                                ...state.middleResult.tens,\r\n                                focusAction: false\r\n                            },\r\n                            hundreds:{\r\n                                focusAction: true,\r\n                                value: r6,\r\n                                carry:  null\r\n                            },\r\n                            thousands:{\r\n                                focusAction: r7 ? true:false,\r\n                                value: r7\r\n                            }\r\n                        }\r\n                    }\r\n                }else{\r\n                    returnedObject = {\r\n                        middleResult:{\r\n                            ...state.middleResult,\r\n                            tens:{\r\n                                ...state.middleResult.tens,\r\n                                focusAction: false\r\n                            },\r\n                            hundreds:{\r\n                                focusAction: true,\r\n                                value: r6\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            third: false,\r\n                            second: true\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b\r\n                        },\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    }\r\n                }\r\n            case 6:\r\n                return{\r\n                    ...state,\r\n                    middleResult:{\r\n                        ...state.middleResult,\r\n                        hundreds:{\r\n                            ...state.middleResult.hundreds,\r\n                            focusAction: false\r\n                        },\r\n                        thousands:{\r\n                            focusAction: true,\r\n                            value: r7\r\n                        },\r\n                        tenThousands:{\r\n                            focusAction: r8 ? true : false,\r\n                            value: r8,\r\n                            carry: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    },\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            second: false,\r\n                            first: true\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b\r\n                        },\r\n                    }\r\n                }\r\n            case 7:\r\n                return{\r\n                    ...state,\r\n                    middleResult:{\r\n                        ...state.middleResult,\r\n                        thousands:{\r\n                            ...state.middleResult.thousands,\r\n                            focusAction: false\r\n                        },\r\n                        tenThousands:{\r\n                            ...state.middleResult.tenThousands,\r\n                            focusAction: false\r\n                        }\r\n                    },\r\n                    bottomResult:{\r\n                        ...state.bottomResult,\r\n                        ones:{\r\n                            ...state.bottomResult.ones,\r\n                            focusAction: true,\r\n                            value: 0\r\n                        },\r\n                        tens:{\r\n                            ...state.bottomResult.tens,\r\n                            focusAction: true,\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    },\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            first: false\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b,\r\n                            second: false,\r\n                            first: true\r\n                        },\r\n                    }\r\n                }\r\n            case 8:\r\n                return{\r\n                    ...state,\r\n                    bottomResult:{\r\n                        ...state.bottomResult,\r\n                        ones:{\r\n                            ...state.bottomResult.ones,\r\n                            focusAction: false\r\n                        },\r\n                        tens:{\r\n                            ...state.bottomResult.tens,\r\n                            focusAction: false\r\n                        },\r\n                        hundreds:{\r\n                            focusAction: true,\r\n                            value: r9\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    },\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            third: true\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b\r\n                        },\r\n                    }\r\n                }\r\n            case 9:\r\n                return{\r\n                    ...state,\r\n                    bottomResult:{\r\n                        ...state.bottomResult,\r\n                        hundreds:{\r\n                            ...state.bottomResult.hundreds,\r\n                            focusAction: false,\r\n                        },\r\n                        thousands:{\r\n                            focusAction: true,\r\n                            value: r10\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    },\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            second: true,\r\n                            third: false\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b\r\n                        },\r\n                    }\r\n                }\r\n            case 10:\r\n                return{\r\n                    ...state,\r\n                    bottomResult:{\r\n                        ...state.bottomResult,\r\n                        thousands:{\r\n                            ...state.bottomResult.thousands,\r\n                            focusAction: false,\r\n                        },\r\n                        tenThousands:{\r\n                            focusAction: true,\r\n                            value: r11\r\n                        },\r\n                        hundredThousands:{\r\n                            focusAction: r12 ? true : false,\r\n                            value: r12\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    },\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            second: false,\r\n                            first: true\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b\r\n                        },\r\n                    }\r\n                }\r\n            case 11:\r\n                return{\r\n                    ...state,\r\n                    middleResult:{\r\n                        ...state.middleResult,\r\n                        hundreds:{\r\n                            ...state.middleResult.hundreds,\r\n                            focusAction: false\r\n                        },\r\n                        thousands:{\r\n                            ...state.middleResult.thousands,\r\n                            focusAction: false\r\n                        },\r\n                        tenThousands:{\r\n                            ...state.middleResult.tenThousands,\r\n                            focusAction: false\r\n                        }\r\n                    },\r\n                    bottomResult:{\r\n                        ...state.bottomResult,\r\n                        tenThousands:{\r\n                            ...state.bottomResult.tenThousands,\r\n                            focusAction: false\r\n                        },\r\n                        hundredThousands:{\r\n                            ...state.bottomResult.hundredThousands,\r\n                            focusAction: false\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    },\r\n                    focusingInput:{\r\n                        ...initialState.focusingInput\r\n                    }\r\n                }\r\n            case 12:\r\n                return{\r\n                    ...state,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        ones:{\r\n                            focusAction: true,\r\n                            value: r13\r\n                        },\r\n                        tens:{\r\n                            ...state.finalResult.tens,\r\n                            carry: fc1\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    }\r\n                }\r\n            case 13:\r\n                return{\r\n                    ...state,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        ones:{\r\n                            ...state.finalResult.ones,\r\n                            focusAction: false,\r\n                        },\r\n                        tens:{\r\n                            focusAction: true,\r\n                            value: r14,\r\n                            carry: null\r\n                        },\r\n                        hundreds:{\r\n                            ...state.finalResult.hundreds,\r\n                            carry: fc2\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    }\r\n                }\r\n            case 14:\r\n                return{\r\n                    ...state,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        tens:{\r\n                            ...state.finalResult.tens,\r\n                            focusAction: false,\r\n                        },\r\n                        hundreds:{\r\n                            focusAction: true,\r\n                            value: r15,\r\n                            carry: null\r\n                        },\r\n                        thousands:{\r\n                            ...state.finalResult.thousands,\r\n                            carry: fc3\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    }\r\n                }\r\n            case 15:\r\n                return{\r\n                    ...state,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        hundreds:{\r\n                            ...state.finalResult.hundreds,\r\n                            focusAction: false,\r\n                        },\r\n                        thousands:{\r\n                            focusAction: true,\r\n                            value: r16,\r\n                            carry: null\r\n                        },\r\n                        tenThousands:{\r\n                            ...state.finalResult.tenThousands,\r\n                            carry: fc4\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    }\r\n                }\r\n            case 16:\r\n                return{\r\n                    ...state,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        thousands:{\r\n                            ...state.finalResult.thousands,\r\n                            focusAction: false,\r\n                        },\r\n                        tenThousands:{\r\n                            focusAction: true,\r\n                            value: r17,\r\n                            carry: null\r\n                        },\r\n                        hundredThousands:{\r\n                            ...state.finalResult.hundredThousands,\r\n                            carry: fc5\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    }\r\n                }\r\n            case 17:\r\n                return{\r\n                    ...state,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        tenThousands:{\r\n                            ...state.finalResult.tenThousands,\r\n                            focusAction: false,\r\n                        },\r\n                        hundredThousands:{\r\n                            focusAction: r18 === 0? false: true,\r\n                            value: r18 === 0? null: r18,\r\n                            carry: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    }\r\n                }\r\n            case 18:\r\n                if(action.upperDigit === 1 && action.lowerDigit === 1){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            ones:{\r\n                                ...state.topResult.ones,\r\n                                focusAction: false\r\n                            },\r\n                            tens:{\r\n                                ...state.topResult.tens,\r\n                                focusAction: false\r\n                            }\r\n                        }\r\n                    }\r\n                }else if(action.upperDigit === 2 && action.lowerDigit === 1){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            tens:{\r\n                                ...state.topResult.tens,\r\n                                focusAction: false\r\n                            },\r\n                            hundreds:{\r\n                                ...state.topResult.hundreds,\r\n                                focusAction: false,\r\n                            }\r\n                        }\r\n                    }\r\n                }else if(action.upperDigit === 3 && action.lowerDigit === 1){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            hundreds:{\r\n                                ...state.topResult.hundreds,\r\n                                focusAction: false\r\n                            },\r\n                            thousands:{\r\n                                ...state.topResult.thousands,\r\n                                focusAction: false,\r\n                            }\r\n                        }\r\n                    }\r\n                }else if(action.upperDigit === 3 && action.lowerDigit === 3){\r\n                    returnedObject = {\r\n                        finalResult:{\r\n                            ...state.finalResult,\r\n                            tenThousands:{\r\n                                ...state.finalResult.tenThousands,\r\n                                carry: null\r\n                            },\r\n                            hundredThousands:{\r\n                                ...state.finalResult.hundredThousands,\r\n                                focusAction: false\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        ones: {\r\n                            ...state.finalResult.ones,\r\n                            focusAction: false,\r\n                            carry: null\r\n                        },\r\n                        tens: {\r\n                            ...state.finalResult.tens,\r\n                            focusAction: false,\r\n                            carry: null\r\n                        },\r\n                        hundreds: {\r\n                            ...state.finalResult.hundreds,\r\n                            focusAction: false,\r\n                            carry: null\r\n                        },\r\n                        thousands: {\r\n                            ...state.finalResult.thousands,\r\n                            focusAction: false,\r\n                            carry: null\r\n                        },\r\n                        tenThousands: {\r\n                            ...state.finalResult.tenThousands,\r\n                            focusAction: false,\r\n                            carry: null\r\n                        },\r\n                        hundredThousands: {\r\n                            ...state.finalResult.hundredThousands,\r\n                            focusAction: false,\r\n                            carry: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    },\r\n                    focusingInput:{\r\n                        ...initialState.focusingInput\r\n                    }\r\n                }\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n    if(action.type === actionTypes.COUNTERPREV){\r\n        const logic11 = action.upperDigit === 1 && action.lowerDigit === 1;\r\n        const logic21 = action.upperDigit === 2 && action.lowerDigit === 1;\r\n        const logic22 = action.upperDigit === 2 && action.lowerDigit === 2;\r\n        const logic31 = action.upperDigit === 3 && action.lowerDigit === 1;\r\n        const logic32 = action.upperDigit === 3 && action.lowerDigit === 2;\r\n        const logic33 = action.upperDigit === 3 && action.lowerDigit === 3;\r\n\r\n        fc1 = action.resultDigits.finalResult.c.fc1;\r\n        fc2 = action.resultDigits.finalResult.c.fc2;\r\n        fc3 = action.resultDigits.finalResult.c.fc3;\r\n        fc4 = action.resultDigits.finalResult.c.fc4;\r\n        fc5 = action.resultDigits.finalResult.c.fc5;\r\n\r\n        const newTextsObjectCreate = (texts) =>{\r\n\r\n            let valuesTextsArr, keysTextsArr, removedTextsArr;\r\n            let newTextsObj = {};\r\n\r\n            valuesTextsArr = Object.values(texts);\r\n            valuesTextsArr.pop();\r\n            removedTextsArr = [...valuesTextsArr];\r\n            keysTextsArr = Object.keys(texts);\r\n            for (let i = 0; i < removedTextsArr.length; i++) {\r\n                newTextsObj[keysTextsArr[i]] = removedTextsArr[i];\r\n            }\r\n\r\n            return newTextsObj;\r\n        }\r\n\r\n        switch (action.position) {\r\n            case 1:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                if(logic33 || logic31 || logic32 || logic21 || logic22){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            ones:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                third: false\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b,\r\n                                third: false\r\n                            },\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 2:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                if(logic33 || logic31 || logic32){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            ones:{\r\n                                ...state.topResult.ones,\r\n                                focusAction: true\r\n                            },\r\n                            tens:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                second: false,\r\n                                third: true\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b\r\n                            },\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 3:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                if(logic33 || logic32){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            tens:{\r\n                                ...state.topResult.tens,\r\n                                focusAction: true,\r\n                            },\r\n                            hundreds:{\r\n                                ...state.topResult.hundreds,\r\n                                focusAction: false,\r\n                                value: null\r\n                            },\r\n                            thousands:{\r\n                                ...state.topResult.thousands,\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                second: true,\r\n                                first: false\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b\r\n                            },\r\n                        }\r\n                    }\r\n                }else if(logic22){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            ones:{\r\n                                ...state.topResult.ones,\r\n                                focusAction: true\r\n                            },\r\n                            tens:{\r\n                                ...state.topResult.tens,\r\n                                focusAction: false,\r\n                                value: null\r\n                            },\r\n                            hundreds:{\r\n                                ...state.topResult.hundreds,\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                second: false,\r\n                                third: true\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b\r\n                            },\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 4:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                if(logic33 || logic32){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            hundreds:{\r\n                                ...state.topResult.hundreds,\r\n                                focusAction: true\r\n                            },\r\n                            thousands:{\r\n                                ...state.topResult.thousands,\r\n                                focusAction: state.topResult.thousands? true : false\r\n                            }\r\n                        },\r\n                        middleResult:{\r\n                            ...state.middleResult,\r\n                            ones:{\r\n                                ...state.middleResult.ones,\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                first: true,\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b,\r\n                                third: true,\r\n                                second: false\r\n                            },\r\n                        }\r\n                    }\r\n                }else if(logic22){\r\n                    returnedObject = {\r\n                        middleResult:{\r\n                            ...state.middleResult,\r\n                            ones:{\r\n                                ...state.middleResult.ones,\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            tens:{\r\n                                ...state.topResult.tens,\r\n                                focusAction: true\r\n                            },\r\n                            hundreds:{\r\n                                ...state.topResult.hundreds,\r\n                                focusAction: true\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                second: true,\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b,\r\n                                third: true,\r\n                                second: false\r\n                            },\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 5:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                if(logic33 || logic32){\r\n                    returnedObject = {\r\n                        middleResult:{\r\n                            ...state.middleResult,\r\n                            ones:{\r\n                                ...state.middleResult.ones,\r\n                                focusAction: true\r\n                            },\r\n                            tens:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                third: false\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b\r\n                            },\r\n                        }\r\n                    }\r\n                }else if(logic22){\r\n                    returnedObject = {\r\n                        middleResult:{\r\n                            ...state.middleResult,\r\n                            ones:{\r\n                                ...state.middleResult.ones,\r\n                                focusAction: true\r\n                            },\r\n                            tens:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                third: false,\r\n                                first: false\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b\r\n                            },\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 6:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                if(logic33 || logic32){\r\n                    returnedObject = {\r\n                        middleResult:{\r\n                            ...state.middleResult,\r\n                            tens:{\r\n                                ...state.middleResult.tens,\r\n                                focusAction: true\r\n                            },\r\n                            hundreds:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                third: true,\r\n                                second: false\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b\r\n                            },\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 7:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                return{\r\n                    ...state,\r\n                    middleResult:{\r\n                        ...state.middleResult,\r\n                        hundreds:{\r\n                            ...state.middleResult.hundreds,\r\n                            focusAction: true\r\n                        },\r\n                        thousands:{\r\n                            focusAction: false,\r\n                            value: null\r\n                        },\r\n                        tenThousands:{\r\n                            focusAction: false,\r\n                            value: null,\r\n                            carry: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter - 1,\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            second: true,\r\n                            first: false\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b\r\n                        },\r\n                    },\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 8:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                return{\r\n                    ...state,\r\n                    middleResult:{\r\n                        ...state.middleResult,\r\n                        thousands:{\r\n                            ...state.middleResult.thousands,\r\n                            focusAction: true\r\n                        },\r\n                        tenThousands:{\r\n                            ...state.middleResult.tenThousands,\r\n                            focusAction: state.middleResult.tenThousands.value? true : false\r\n                        }\r\n                    },\r\n                    bottomResult:{\r\n                        ...state.bottomResult,\r\n                        ones:{\r\n                            ...state.bottomResult.ones,\r\n                            focusAction: false,\r\n                            value: null\r\n                        },\r\n                        tens:{\r\n                            ...state.bottomResult.tens,\r\n                            focusAction: false,\r\n                            value: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter - 1,\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            first: true\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b,\r\n                            second: true,\r\n                            first: false\r\n                        },\r\n                    },\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 9:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                return{\r\n                    ...state,\r\n                    bottomResult:{\r\n                        ...state.bottomResult,\r\n                        ones:{\r\n                            ...state.bottomResult.ones,\r\n                            focusAction: true\r\n                        },\r\n                        tens:{\r\n                            ...state.bottomResult.tens,\r\n                            focusAction: true\r\n                        },\r\n                        hundreds:{\r\n                            focusAction: false,\r\n                            value: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter - 1,\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            third: false\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b\r\n                        },\r\n                    },\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 10:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                return{\r\n                    ...state,\r\n                    bottomResult:{\r\n                        ...state.bottomResult,\r\n                        hundreds:{\r\n                            ...state.bottomResult.hundreds,\r\n                            focusAction: true,\r\n                        },\r\n                        thousands:{\r\n                            focusAction: false,\r\n                            value: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter - 1,\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            second: false,\r\n                            third: true\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b\r\n                        },\r\n                    },\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 11:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                if(logic33){\r\n                    returnedObject = {\r\n                        bottomResult:{\r\n                            ...state.bottomResult,\r\n                            thousands:{\r\n                                ...state.bottomResult.thousands,\r\n                                focusAction: true,\r\n                            },\r\n                            tenThousands:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            },\r\n                            hundredThousands:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                second: true,\r\n                                first: false\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b\r\n                            },\r\n                        }\r\n                    }\r\n                }else if(logic22){\r\n                    returnedObject = {\r\n                        middleResult:{\r\n                            ...state.middleResult,\r\n                            tens:{\r\n                                ...state.middleResult.tens,\r\n                                focusAction: true\r\n                            },\r\n                            hundreds:{\r\n                                focusAction: false,\r\n                                value: null,\r\n                                carry:  null\r\n                            },\r\n                            thousands:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                first: false,\r\n                                second: false,\r\n                                third: true\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b\r\n                            },\r\n                        }\r\n                    }\r\n                }else if(logic32){\r\n                    returnedObject = {\r\n                        middleResult:{\r\n                            ...state.middleResult,\r\n                            hundreds:{\r\n                                ...state.middleResult.thousands,\r\n                                focusAction: true,\r\n                            },\r\n                            thousands:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            },\r\n                            tenThousands:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                second: true,\r\n                                first: false\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b\r\n                            },\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 12:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                if(logic33){\r\n                    returnedObject = {\r\n                        bottomResult:{\r\n                            ...state.bottomResult,\r\n                            tenThousands:{\r\n                                ...state.bottomResult.tenThousands,\r\n                                focusAction: true\r\n                            },\r\n                            hundredThousands:{\r\n                                ...state.bottomResult.hundredThousands,\r\n                                focusAction: state.bottomResult.hundredThousands.value ? true : false\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                first: true\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b,\r\n                                first: true\r\n                            },\r\n                        }\r\n                    }\r\n                }else if(logic22){\r\n                    returnedObject = {\r\n                        middleResult:{\r\n                            ...state.middleResult,\r\n                            hundreds:{\r\n                                ...state.middleResult.hundreds,\r\n                                focusAction: true\r\n                            },\r\n                            thousands:{\r\n                                ...state.middleResult.thousands,\r\n                                focusAction: state.middleResult.thousands.value ? true : false\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                second: true\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b,\r\n                                second: true\r\n                            },\r\n                        }\r\n                    }\r\n                }else if(logic32){\r\n                    returnedObject = {\r\n                        middleResult:{\r\n                            ...state.middleResult,\r\n                            thousands:{\r\n                                ...state.middleResult.thousands,\r\n                                focusAction: true\r\n                            },\r\n                            tenThousands:{\r\n                                ...state.middleResult.tenThousands,\r\n                                focusAction: state.middleResult.tenThousands.value ? true : false\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                first: true\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b,\r\n                                second: true\r\n                            },\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 13:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                return{\r\n                    ...state,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        ones:{\r\n                            focusAction: false,\r\n                            value: null\r\n                        },\r\n                        tens:{\r\n                            ...state.finalResult.tens,\r\n                            carry: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 14:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                return{\r\n                    ...state,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        ones:{\r\n                            ...state.finalResult.ones,\r\n                            focusAction: true,\r\n                        },\r\n                        tens:{\r\n                            focusAction: false,\r\n                            value: null,\r\n                            carry: fc1\r\n                        },\r\n                        hundreds:{\r\n                            ...state.finalResult.hundreds,\r\n                            carry: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 15:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                return{\r\n                    ...state,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        tens:{\r\n                            ...state.finalResult.tens,\r\n                            focusAction: true,\r\n                        },\r\n                        hundreds:{\r\n                            focusAction: false,\r\n                            value: null,\r\n                            carry: fc2\r\n                        },\r\n                        thousands:{\r\n                            ...state.finalResult.thousands,\r\n                            carry: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 16:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                return{\r\n                    ...state,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        hundreds:{\r\n                            ...state.finalResult.hundreds,\r\n                            focusAction: true,\r\n                        },\r\n                        thousands:{\r\n                            focusAction: false,\r\n                            value: null,\r\n                            carry: fc3\r\n                        },\r\n                        tenThousands:{\r\n                            ...state.finalResult.tenThousands,\r\n                            carry: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 17:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                return{\r\n                    ...state,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        thousands:{\r\n                            ...state.finalResult.thousands,\r\n                            focusAction: true,\r\n                        },\r\n                        tenThousands:{\r\n                            ...state.finalResult.tenThousands,\r\n                            focusAction: false,\r\n                            value: null,\r\n                            carry: fc4\r\n                        },\r\n                        hundredThousands:{\r\n                            ...state.finalResult.hundredThousands,\r\n                            carry: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 18:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n\r\n                if(logic11){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            ones:{\r\n                                focusAction: false,\r\n                                value: null,\r\n                            },\r\n                            tens:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...initialState.focusingInput\r\n                        }\r\n                    }\r\n                }else if(logic21){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            ones:{\r\n                                ...state.topResult.ones,\r\n                                focusAction: true\r\n                            },\r\n                            tens:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            },\r\n                            hundreds:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                second: false,\r\n                                third: true\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b\r\n                            }\r\n                        }\r\n                    }\r\n                }else if(logic22){\r\n                    returnedObject = {\r\n                        finalResult:{\r\n                            ...state.finalResult,\r\n                            hundreds:{\r\n                                ...state.finalResult.hundreds,\r\n                                focusAction: true,\r\n                            },\r\n                            thousands:{\r\n                                focusAction: false,\r\n                                value: null,\r\n                                carry: fc3\r\n                            },\r\n                            tenThousands:{\r\n                                ...state.finalResult.tenThousands,\r\n                                carry: null\r\n                            }\r\n                        }\r\n                    }\r\n                }else if(logic31){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            tens:{\r\n                                ...state.topResult.tens,\r\n                                focusAction: true\r\n                            },\r\n                            hundreds:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            },\r\n                            thousands:{\r\n                                focusAction: false,\r\n                                value: null,\r\n                            },\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                first: false,\r\n                                second: true\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b\r\n                            },\r\n                        }\r\n                    }\r\n                }else if(logic32){\r\n                    returnedObject = {\r\n                        finalResult:{\r\n                            ...state.finalResult,\r\n                            thousands:{\r\n                                ...state.finalResult.thousands,\r\n                                focusAction: true,\r\n                            },\r\n                            tenThousands:{\r\n                                focusAction: false,\r\n                                value: null,\r\n                                carry: fc4\r\n                            },\r\n                            hundredThousands:{\r\n                                ...state.finalResult.hundredThousands,\r\n                                carry: null\r\n                            }\r\n                        }\r\n                    }\r\n                }else if(logic33){\r\n                    returnedObject = {\r\n                        finalResult:{\r\n                            ...state.finalResult,\r\n                            tenThousands:{\r\n                                ...state.finalResult.tenThousands,\r\n                                focusAction: true,\r\n                            },\r\n                            hundredThousands:{\r\n                                focusAction: false,\r\n                                value: null,\r\n                                carry: fc5\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            default:\r\n                return state\r\n        }\r\n    }else{\r\n        return state\r\n    }\r\n};\r\n\r\nexport default result;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from '../actions/actions';\r\n\r\nconst initState = {\r\n    topRow: ['','',''],\r\n    bottomRow: ['','',''],\r\n    boardTitle: {\r\n        title: '',\r\n        show: false\r\n    },\r\n    counter: 0,\r\n    nextBtnHide: false,\r\n    resutltsRow: 5,\r\n    inputDisable: false,\r\n    btnHide: true\r\n}\r\n\r\nconst reducer = (state = initState, actions) => {\r\n    if(state.counter === 19){\r\n        return{\r\n            ...state,\r\n            counter: 0,\r\n            nextBtnHide: true\r\n        }\r\n    }\r\n\r\n    if(actions.type === actionTypes.COUNTERRESULT){\r\n        if(actions.upperDigit === 1 && actions.lowerDigit === 1){\r\n            if(state.counter === 1){\r\n                return{\r\n                    ...state,\r\n                    counter: 18,\r\n                }\r\n            }\r\n        }\r\n        if(actions.upperDigit === 2 && actions.lowerDigit === 1){\r\n            if(state.counter === 2){\r\n                return{\r\n                    ...state,\r\n                    counter: 18,\r\n                }\r\n            }\r\n        }\r\n        if(actions.upperDigit === 2 && actions.lowerDigit === 2){\r\n            switch (state.counter) {\r\n                case 2:\r\n                    return{\r\n                        ...state,\r\n                        counter: 3,\r\n                    }\r\n                case 6:\r\n                    return{\r\n                        ...state,\r\n                        counter: 11,\r\n                    }\r\n                case 16:\r\n                    return{\r\n                        ...state,\r\n                        counter: 18,\r\n                    }\r\n            \r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        if(actions.upperDigit === 3 && actions.lowerDigit === 1){\r\n            if(state.counter === 3){\r\n                return{\r\n                    ...state,\r\n                    counter: 18,\r\n                }\r\n            }\r\n        }\r\n        if(actions.upperDigit === 3 && actions.lowerDigit === 2){\r\n            if(state.counter === 7){\r\n                return{\r\n                    ...state,\r\n                    counter: 11,\r\n                }\r\n            }else if(state.counter === 17){\r\n                return{\r\n                    ...state,\r\n                    counter: 18,\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if(actions.type === actionTypes.COUNTERPREV){\r\n        if(actions.upperDigit === 1 && actions.lowerDigit === 1){\r\n            if(state.counter === 18){\r\n                return{\r\n                    ...state,\r\n                    counter: 0,\r\n                }\r\n            }\r\n        }\r\n        if(actions.upperDigit === 2 && actions.lowerDigit === 1){\r\n            if(state.counter === 18){\r\n                return{\r\n                    ...state,\r\n                    counter: 1,\r\n                }\r\n            }\r\n        }\r\n        if(actions.upperDigit === 2 && actions.lowerDigit === 2){\r\n            switch (state.counter) {\r\n                case 3:\r\n                    return{\r\n                        ...state,\r\n                        counter: 1,\r\n                    }\r\n                case 11:\r\n                    return{\r\n                        ...state,\r\n                        counter: 5,\r\n                    }\r\n                case 18:\r\n                    return{\r\n                        ...state,\r\n                        counter: 15,\r\n                    }\r\n            \r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        if(actions.upperDigit === 3 && actions.lowerDigit === 1){\r\n            if(state.counter === 18){\r\n                return{\r\n                    ...state,\r\n                    counter: 2,\r\n                }\r\n            }\r\n        }\r\n        if(actions.upperDigit === 3 && actions.lowerDigit === 2){\r\n            if(state.counter === 11){\r\n                return{\r\n                    ...state,\r\n                    counter: 6,\r\n                }\r\n            }else if(state.counter === 18){\r\n                return{\r\n                    ...state,\r\n                    counter: 16,\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const randomNumberGenerate = (digit) => {\r\n\r\n        let randomNumArray;\r\n        const randomNum1 = Math.floor(Math.random() * (9)) + 1;\r\n        const randomNum2 = Math.floor(Math.random() * (9)) + 1;\r\n        const randomNum3 = Math.floor(Math.random() * (9)) + 1;\r\n        const randomNumString1 = randomNum1.toString();\r\n        const randomNumString2 = randomNum2.toString();\r\n        const randomNumString3 = randomNum3.toString();\r\n\r\n        switch (digit) {\r\n            case 3:\r\n                randomNumArray = [randomNumString1, randomNumString2, randomNumString3];\r\n                break;\r\n            case 2:\r\n                randomNumArray = ['', randomNumString1, randomNumString2];\r\n                break;\r\n            case 1:\r\n                randomNumArray = ['', '', randomNumString1];\r\n                break;\r\n\r\n            default:\r\n                randomNumArray = [randomNumString1, randomNumString2, randomNumString3];\r\n                break;\r\n        }\r\n        \r\n        return randomNumArray\r\n    }\r\n\r\n    switch (actions.type) {\r\n        case actionTypes.RANDOM_NUMBER:\r\n            let randomNumArray = randomNumberGenerate(actions.digitCount);\r\n            return{\r\n                ...state,\r\n                [actions.rowType]: randomNumArray\r\n            }\r\n        case actionTypes.INPUT_NUMBER:\r\n            return{\r\n                ...state,\r\n                [actions.rowPosition]: actions.newNumbers\r\n            }\r\n        case actionTypes.START:\r\n            const t = state.topRow.join('')\r\n            const b = state.bottomRow.join('')\r\n            \r\n            return{\r\n                ...state,\r\n                boardTitle: {\r\n                    title: `We will multiply <span>${state.topRow[0]}${state.topRow[1]}${state.topRow[2]}</span> x <span>${state.bottomRow[0]}${state.bottomRow[1]}${state.bottomRow[2]}</span>. The answer is <span>${t * b}</span>, but that doesn’t matter. We don’t care about the answer here; we care only about how to get it. <span>Click Next</span>`,\r\n                    show: true\r\n                },\r\n                nextBtnHide: false,\r\n                resutltsRow: b.length,\r\n                inputDisable: true,\r\n                btnHide: false\r\n            }\r\n        case actionTypes.END:\r\n            return{\r\n                ...state,\r\n                topRow: ['','',''],\r\n                bottomRow: ['','',''],\r\n                boardTitle: {\r\n                    ...state.boardTitle,\r\n                    show: false\r\n                },\r\n                counter: 0,\r\n                resutltsRow: 5,\r\n                inputDisable: false,\r\n                btnHide: true\r\n            }\r\n        case actionTypes.COUNTER:\r\n            return{\r\n                ...state,\r\n                counter: state.counter + 1,\r\n            }\r\n        case actionTypes.COUNTERPREV:\r\n            if(state.counter === 0){\r\n                return{\r\n                    ...state,\r\n                    topRow: ['','',''],\r\n                    bottomRow: ['','',''],\r\n                    boardTitle: {\r\n                        ...state.boardTitle,\r\n                        show: false\r\n                    },\r\n                    counter: 0,\r\n                    resutltsRow: 5,\r\n                    inputDisable: false,\r\n                    btnHide: true\r\n                }\r\n            }else{\r\n                return{\r\n                    ...state,\r\n                    counter: state.counter - 1,\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actions';\r\n\r\nconst initialState = {\r\n    topLine:{\r\n        ones: {focusAction: false, value: null},\r\n        tens: {focusAction: false, value: null},\r\n        hundreds: {focusAction: false, value: null},\r\n        thousands: {focusAction: false, value: null},\r\n        tenThousands: {focusAction: false, value: null},\r\n        hundredThousands: {focusAction: false, value: null}\r\n    },\r\n    middleLine:{\r\n        ones: {focusAction: false, value: null},\r\n        tens: {focusAction: false, value: null},\r\n        hundreds: {focusAction: false, value: null},\r\n        thousands: {focusAction: false, value: null},\r\n        tenThousands: {focusAction: false, value: null},\r\n        hundredThousands: {focusAction: false, value: null}\r\n    },\r\n    bottomLine:{\r\n        ones: {focusAction: false, value: null},\r\n        tens: {focusAction: false, value: null},\r\n        hundreds: {focusAction: false, value: null},\r\n        thousands: {focusAction: false, value: null},\r\n        tenThousands: {focusAction: false, value: null},\r\n        hundredThousands: {focusAction: false, value: null}\r\n    }\r\n};\r\n\r\nconst carry = (state = initialState, action)=>{\r\n    if(action.type === actionTypes.END){\r\n        return initialState;\r\n    }\r\n    let returnedObject = initialState;\r\n    const stepsFn = (obj) => {\r\n        return {\r\n            ...initialState,\r\n            [obj.line] : {\r\n                ...initialState[obj.line],\r\n                [obj.focusPos] : {\r\n                    focusAction: obj.carryNumb?true:false,\r\n                    value: obj.carryNumb\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if(action.type === actionTypes.COUNTERCARRY){\r\n\r\n        switch (action.position) {\r\n            case 0:\r\n                if(action.upperDigit === 1 && action.lowerDigit === 1){\r\n                    returnedObject = initialState;\r\n                }else{\r\n                    returnedObject = stepsFn({\r\n                        line: 'bottomLine',\r\n                        focusPos: 'tens',\r\n                        carryNumb: action.carryNumbers.cL1.cL11\r\n                    });\r\n                }\r\n                return returnedObject;\r\n            case 1:\r\n                const logic1  = action.upperDigit === 2 && action.lowerDigit === 1;\r\n                const logic2 = action.upperDigit === 2 && action.lowerDigit === 2;\r\n                if(logic1 || logic2){\r\n                    returnedObject = initialState;\r\n                }else{\r\n                    returnedObject = stepsFn({\r\n                        line: 'bottomLine',\r\n                        focusPos: 'hundreds',\r\n                        carryNumb: action.carryNumbers.cL1.cL12\r\n                    })\r\n                }\r\n                return returnedObject;\r\n            case 2:\r\n                return initialState\r\n            case 4:\r\n                return stepsFn({\r\n                    line: 'middleLine',\r\n                    focusPos: 'hundreds',\r\n                    carryNumb: action.carryNumbers.cL2.cL21\r\n                })\r\n            case 5:\r\n                if(action.upperDigit === 2 && action.lowerDigit === 2){\r\n                    returnedObject = initialState;\r\n                }else{\r\n                    returnedObject = stepsFn({\r\n                        line: 'middleLine',\r\n                        focusPos: 'thousands',\r\n                        carryNumb: action.carryNumbers.cL2.cL22\r\n                    })\r\n                }\r\n                return returnedObject\r\n            case 6:\r\n                return initialState\r\n            case 8:\r\n                return stepsFn({\r\n                    line: 'topLine',\r\n                    focusPos: 'thousands',\r\n                    carryNumb: action.carryNumbers.cL3.cL31\r\n                })\r\n            case 9:\r\n                return stepsFn({\r\n                    line: 'topLine',\r\n                    focusPos: 'tenThousands',\r\n                    carryNumb: action.carryNumbers.cL3.cL32\r\n                })\r\n            case 10:\r\n                return initialState\r\n        \r\n            default:\r\n                return state\r\n        }\r\n\r\n    }\r\n    \r\n    if(action.type === actionTypes.COUNTERPREV){\r\n        const logic11 = action.upperDigit === 1 && action.lowerDigit === 1;\r\n        const logic21 = action.upperDigit === 2 && action.lowerDigit === 1;\r\n        const logic22 = action.upperDigit === 2 && action.lowerDigit === 2;\r\n        const logic31 = action.upperDigit === 3 && action.lowerDigit === 1;\r\n        const logic32 = action.upperDigit === 3 && action.lowerDigit === 2;\r\n        const logic33 = action.upperDigit === 3 && action.lowerDigit === 3;\r\n\r\n        let c1, c2, c3, c4, c5, c6;\r\n\r\n        c1 = action.resultDigits.carry.cL1.cL11;\r\n        c2 = action.resultDigits.carry.cL1.cL12;\r\n        c3 = action.resultDigits.carry.cL2.cL21;\r\n        c4 = action.resultDigits.carry.cL2.cL22;\r\n        c5 = action.resultDigits.carry.cL3.cL31;\r\n        c6 = action.resultDigits.carry.cL3.cL32;\r\n\r\n        switch (action.position){\r\n            case 1:\r\n                return initialState\r\n            case 2:\r\n                if(logic11){\r\n                    returnedObject = initialState;\r\n                }else if(logic33 || logic32 || logic31){\r\n                    returnedObject = stepsFn({\r\n                        line: 'bottomLine',\r\n                        focusPos: 'tens',\r\n                        carryNumb: c1\r\n                    });\r\n                }\r\n                return returnedObject;\r\n            case 3:\r\n                if(logic21 || logic22){\r\n                    returnedObject = initialState;\r\n                }else if(logic33 || logic32 || logic31){\r\n                    returnedObject = stepsFn({\r\n                        line: 'bottomLine',\r\n                        focusPos: 'hundreds',\r\n                        carryNumb: c2\r\n                    })\r\n                }\r\n                return returnedObject;\r\n            case 5:\r\n                return initialState\r\n            case 6:\r\n                return stepsFn({\r\n                    line: 'middleLine',\r\n                    focusPos: 'hundreds',\r\n                    carryNumb: c3\r\n                })\r\n            case 7:\r\n                if(logic22){\r\n                    returnedObject = initialState;\r\n                }else if(logic33){\r\n                    returnedObject = stepsFn({\r\n                        line: 'middleLine',\r\n                        focusPos: 'thousands',\r\n                        carryNumb: c4\r\n                    })\r\n                }\r\n                return returnedObject\r\n            case 9:\r\n                return initialState\r\n            case 10:\r\n                if(logic33){\r\n                    return stepsFn({\r\n                        line: 'topLine',\r\n                        focusPos: 'thousands',\r\n                        carryNumb: c5\r\n                    })\r\n                }else if(logic32){\r\n                    return stepsFn({\r\n                        line: 'middleLine',\r\n                        focusPos: 'hundreds',\r\n                        carryNumb: c3\r\n                    })\r\n                }\r\n                return returnedObject\r\n            case 11:\r\n                if(logic33){\r\n                    return stepsFn({\r\n                        line: 'topLine',\r\n                        focusPos: 'tenThousands',\r\n                        carryNumb: c6\r\n                    })\r\n                }else if(logic32){\r\n                    return stepsFn({\r\n                        line: 'middleLine',\r\n                        focusPos: 'thousands',\r\n                        carryNumb: c4\r\n                    })\r\n                }\r\n                return returnedObject\r\n            default:\r\n                return state\r\n        }\r\n    }else{\r\n        return state\r\n    }\r\n\r\n};\r\n\r\nexport default carry;","const texts_1x1 = (t1, b1, r1, r2) => {\r\n\r\n    return [\r\n        {\r\n            text: `${b1} x ${t1} <br> = ${r2}${r1}`\r\n        },\r\n        {\r\n            text: `2----`\r\n        }\r\n    ]\r\n}\r\n\r\nexport default texts_1x1;","let emptySpaceText = 'Nothing';\r\n\r\nconst texts_2x1 = (t1, t2, b1, cr1, r1, r2, r3) => {\r\n\r\n    let c1;\r\n\r\n    c1 = cr1 ? cr1 : emptySpaceText;\r\n\r\n    return [\r\n        {\r\n            text: `Carries are ${c1}`\r\n        },\r\n        {\r\n            text: `2------------------`\r\n        },\r\n        {\r\n            text: `3------------------`\r\n        }\r\n    ]\r\n}\r\n\r\nexport default texts_2x1;","let emptySpaceText = 'Nothing';\r\n\r\nconst texts_2x2 = (t1, t2, b1, b2, cr1, cr4, r1, r2, r3, r5, r6, r7, r13, r14, r15, r16, fcr1, fcr2, fcr3) => {\r\n\r\n    let c1, c4, fc1, fc2, fc3;\r\n\r\n    c1 = cr1 ? cr1 : emptySpaceText;\r\n    c4 = cr4 ? cr4 : emptySpaceText;\r\n\r\n    fc1 = fcr1 ? fcr1 : emptySpaceText;\r\n    fc2 = fcr2 ? fcr2 : emptySpaceText;\r\n    fc3 = fcr3 ? fcr3 : emptySpaceText;\r\n\r\n    return [\r\n        {\r\n            text: `Carries are ${c1}, ${c4}, ${fc1}, ${fc2}, ${fc3}`\r\n        },\r\n        {\r\n            text: `2------------------`\r\n        },\r\n        {\r\n            text: `3------------------`\r\n        },\r\n        {\r\n            text: `4------------------`\r\n        },\r\n        {\r\n            text: `5------------------`\r\n        },\r\n        {\r\n            text: `6------------------`\r\n        },\r\n        {\r\n            text: `7------------------`\r\n        },\r\n        {\r\n            text: `8------------------`\r\n        },\r\n        {\r\n            text: `9------------------`\r\n        },\r\n        {\r\n            text: `10------------------`\r\n        },\r\n        {\r\n            text: `11------------------`\r\n        },\r\n        {\r\n            text: `12------------------`\r\n        }\r\n    ]\r\n}\r\n\r\nexport default texts_2x2;","let emptySpaceText = 'Nothing';\r\n\r\nconst texts_3x1 = (t1, t2, t3, b1, cr1, cr2, r1, r2, r3, r4) => {\r\n\r\n    let c1, c2;\r\n\r\n    c1 = cr1 ? cr1 : emptySpaceText;\r\n    c2 = cr2 ? cr2 : emptySpaceText;\r\n\r\n    return [\r\n        {\r\n            text: `Carries are ${c1}, ${c2}`\r\n        },\r\n        {\r\n            text: `2------------------`\r\n        },\r\n        {\r\n            text: `3------------------`\r\n        },\r\n        {\r\n            text: `4------------------`\r\n        },\r\n        {\r\n            text: `5------------------`\r\n        },\r\n        {\r\n            text: `6------------------`\r\n        },\r\n        {\r\n            text: `7------------------`\r\n        },\r\n        {\r\n            text: `8------------------`\r\n        },\r\n        {\r\n            text: `9------------------`\r\n        },\r\n        {\r\n            text: `10------------------`\r\n        },\r\n        {\r\n            text: `11------------------`\r\n        },\r\n        {\r\n            text: `12------------------`\r\n        }\r\n    ]\r\n}\r\n\r\nexport default texts_3x1;","let emptySpaceText = 'Nothing';\r\n\r\nconst texts_3x2 = (t1, t2, t3, b1, b2, cr1, cr2, cr4, cr5, r1, r2, r3, r4, r5, r6, r7, r8, r13, r14, r15, r16, r17, fcr1, fcr2, fcr3, fcr4) => {\r\n\r\n    let c1, c2, c4, c5, fc1, fc2, fc3, fc4;\r\n\r\n    c1 = cr1 ? cr1 : emptySpaceText;\r\n    c2 = cr2 ? cr2 : emptySpaceText;\r\n    c4 = cr4 ? cr4 : emptySpaceText;\r\n    c5 = cr5 ? cr5 : emptySpaceText;\r\n\r\n    fc1 = fcr1 ? fcr1 : emptySpaceText;\r\n    fc2 = fcr2 ? fcr2 : emptySpaceText;\r\n    fc3 = fcr3 ? fcr3 : emptySpaceText;\r\n    fc4 = fcr4 ? fcr4 : emptySpaceText;\r\n\r\n    return [\r\n        {\r\n            text: `Carries ${c1} ${c2} ${c4} ${c5} ${fc1} ${fc2} ${fc3} ${fc4}`\r\n        },\r\n        {\r\n            text: `2------------------`\r\n        },\r\n        {\r\n            text: `3------------------`\r\n        },\r\n        {\r\n            text: `4------------------`\r\n        },\r\n        {\r\n            text: `5------------------`\r\n        },\r\n        {\r\n            text: `6------------------`\r\n        },\r\n        {\r\n            text: `7------------------`\r\n        },\r\n        {\r\n            text: `8------------------`\r\n        },\r\n        {\r\n            text: `9------------------`\r\n        },\r\n        {\r\n            text: `10------------------`\r\n        },\r\n        {\r\n            text: `11------------------`\r\n        },\r\n        {\r\n            text: `12------------------`\r\n        },\r\n        {\r\n            text: `13------------------`\r\n        },\r\n        {\r\n            text: `14------------------`\r\n        },\r\n        {\r\n            text: `15------------------`\r\n        },\r\n        {\r\n            text: `16------------------`\r\n        },\r\n        {\r\n            text: `17------------------`\r\n        },\r\n        {\r\n            text: `18------------------`\r\n        },\r\n        {\r\n            text: `19-------------END`\r\n        }\r\n    ]\r\n}\r\n\r\nexport default texts_3x2;","let emptySpaceText = 'Nothing';\r\n\r\nconst texts_3x3 = (t1, t2, t3, b1, b2, b3, cr1, cr2, cr4, cr5, cr7, cr8, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, fcr1, fcr2, fcr3, fcr4, fcr5) => {\r\n\r\n    let c1, c2, c4, c5, c7, c8, fc1, fc2, fc3, fc4, fc5;\r\n\r\n    c1 = cr1 ? cr1 : emptySpaceText;\r\n    c2 = cr2 ? cr2 : emptySpaceText;\r\n    c4 = cr4 ? cr4 : emptySpaceText;\r\n    c5 = cr5 ? cr5 : emptySpaceText;\r\n    c7 = cr7 ? cr7 : emptySpaceText;\r\n    c8 = cr8 ? cr8 : emptySpaceText;\r\n\r\n    fc1 = fcr1 ? fcr1 : emptySpaceText;\r\n    fc2 = fcr2 ? fcr2 : emptySpaceText;\r\n    fc3 = fcr3 ? fcr3 : emptySpaceText;\r\n    fc4 = fcr4 ? fcr4 : emptySpaceText;\r\n    fc5 = fcr5 ? fcr5 : emptySpaceText;\r\n\r\n    return [\r\n        {\r\n            text: `Carries ${c1}, ${c2}, ${c4}, ${c5}, ${c7}, ${c8}, ${fc1}, ${fc2}, ${fc3}, ${fc4}, ${fc5}`\r\n        },\r\n        {\r\n            text: `2------------------`\r\n        },\r\n        {\r\n            text: `3------------------`\r\n        },\r\n        {\r\n            text: `4------------------`\r\n        },\r\n        {\r\n            text: `5------------------`\r\n        },\r\n        {\r\n            text: `6------------------`\r\n        },\r\n        {\r\n            text: `7------------------`\r\n        },\r\n        {\r\n            text: `8------------------`\r\n        },\r\n        {\r\n            text: `9------------------`\r\n        },\r\n        {\r\n            text: `10------------------`\r\n        },\r\n        {\r\n            text: `11------------------`\r\n        },\r\n        {\r\n            text: `12------------------`\r\n        },\r\n        {\r\n            text: `13------------------`\r\n        },\r\n        {\r\n            text: `14------------------`\r\n        },\r\n        {\r\n            text: `15------------------`\r\n        },\r\n        {\r\n            text: `16------------------`\r\n        },\r\n        {\r\n            text: `17------------------`\r\n        },\r\n        {\r\n            text: `18------------------`\r\n        },\r\n        {\r\n            text: `19-------------END`\r\n        },\r\n    ]\r\n}\r\n\r\nexport default texts_3x3;","const carryNumFn = (prev, p1, p2) => {\r\n    let carryNumber;\r\n    let carryNum;\r\n    const cNumFn = (carryNumber) =>{\r\n        if(carryNumber.toString().length > 1){\r\n            carryNum = Number(carryNumber.toString().slice(0,1))\r\n        }else{\r\n            carryNum = null;\r\n        }\r\n        return carryNum;\r\n    }\r\n    if(prev){\r\n        carryNumber = (p1 * p2) + prev;\r\n        carryNum = cNumFn(carryNumber);\r\n    }else{\r\n        carryNumber = p1 * p2;\r\n        carryNum = cNumFn(carryNumber);\r\n    }\r\n    return carryNum;\r\n}\r\n\r\nexport default carryNumFn;","const resultNumFn = (prev, p1, p2) => {\r\n    let resultNumber;\r\n    let resultNum;\r\n    let result;\r\n    const rNumFn = (resultNumber) =>{\r\n        if(resultNumber.toString().length > 1){\r\n            resultNum = Number(resultNumber.toString().slice(1));\r\n        }else{\r\n            resultNum = resultNumber;\r\n        }\r\n        return resultNum;\r\n    }\r\n    if(prev){\r\n        resultNumber = (p1 * p2) + prev;\r\n        result = rNumFn(resultNumber);\r\n    }else{\r\n        resultNumber = p1 * p2;\r\n        result = rNumFn(resultNumber);\r\n    }\r\n    return result;\r\n}\r\nexport default resultNumFn;","const finalResultFn = (carry, n1, n2, n3) =>{\r\n    let resultNumber;\r\n    let resultNum;\r\n    let carryingNum;\r\n    const rNumFn = (resultNumber) =>{\r\n        if(resultNumber.toString().length > 1){\r\n            resultNum = Number(resultNumber.toString().slice(1));\r\n            carryingNum = Number(resultNumber.toString().slice(0,1));\r\n        }else{\r\n            resultNum = resultNumber;\r\n        }\r\n    }\r\n    if(carry){\r\n        resultNumber = n1 + n2 + n3 + carry;\r\n        rNumFn(resultNumber);\r\n    }else{\r\n        resultNumber = n1 + n2 + n3;\r\n        rNumFn(resultNumber);\r\n    }\r\n    return {resultNum,carryingNum};\r\n}\r\n\r\nexport default finalResultFn;","import * as actionTypes from '../actions/actions';\r\nimport carryNumFn from './Utility/carry';\r\nimport resultNumFn from './Utility/result';\r\nimport finalResultFn from './Utility/finalResult';\r\n\r\nconst initialState = {\r\n    answer : {}\r\n};\r\n\r\nconst multiplication = (state = initialState, action)=>{\r\n    if(action.type === actionTypes.START){\r\n        \r\n        const t1 = Number(action.topRow[2]);\r\n        const t2 = Number(action.topRow[1]);\r\n        const t3 = Number(action.topRow[0]);\r\n        const b1 = Number(action.bottomRow[2]);\r\n        const b2 = Number(action.bottomRow[1]);\r\n        const b3 = Number(action.bottomRow[0]);\r\n\r\n        const c1 = carryNumFn(null, t1, b1);\r\n        const c2 = carryNumFn(c1, t2, b1);\r\n        const c3 = carryNumFn(c2, t3, b1);\r\n        const c4 = carryNumFn(null, t1, b2);\r\n        const c5 = carryNumFn(c4, t2, b2);\r\n        const c6 = carryNumFn(c5, t3, b2);\r\n        const c7 = carryNumFn(null, t1, b3);\r\n        const c8 = carryNumFn(c7, t2, b3);\r\n        const c9 = carryNumFn(c8, t3, b3);\r\n\r\n        const r1 = resultNumFn(null, t1, b1);\r\n        const r2 = resultNumFn(c1, t2, b1);\r\n        const r3 = resultNumFn(c2, t3, b1);\r\n        const r4 = c3;\r\n        const r5 = resultNumFn(null, t1, b2);\r\n        const r6 = resultNumFn(c4, t2, b2);\r\n        const r7 = resultNumFn(c5, t3, b2);\r\n        const r8 = c6;\r\n        const r9 = resultNumFn(null, t1, b3);\r\n        const r10 = resultNumFn(c7, t2, b3);\r\n        const r11 = resultNumFn(c8, t3, b3);\r\n        const r12 = c9;\r\n\r\n        const fR1 = finalResultFn(null, r1, 0, 0);\r\n        const fR2 = finalResultFn(fR1.carryingNum, r2, r5, 0);\r\n        const fR3 = finalResultFn(fR2.carryingNum, r3, r6, r9);\r\n        const fR4 = finalResultFn(fR3.carryingNum, r4, r7, r10);\r\n        const fR5 = finalResultFn(fR4.carryingNum, 0, r8, r11);\r\n        const fR6 = finalResultFn(fR5.carryingNum, 0, 0, r12);\r\n\r\n        return {\r\n            ...state,\r\n            answer:{\r\n                ...state.answer,\r\n                number : {\r\n                    t1: t1,\r\n                    t2: t2,\r\n                    t3: t3,\r\n                    b1: b1,\r\n                    b2: b2,\r\n                    b3: b3\r\n                },\r\n                carry : {\r\n                    cL1 : {\r\n                        cL11: c1,\r\n                        cL12: c2,\r\n                        cL13: c3\r\n                    },\r\n                    cL2 : {\r\n                        cL21: c4,\r\n                        cL22: c5,\r\n                        cL23: c6\r\n                    },\r\n                    cL3 : {\r\n                        cL31: c7,\r\n                        cL32: c8,\r\n                        cL33: c9\r\n                    }\r\n                },\r\n                result : {\r\n                    rL1 : {\r\n                        rL11: r1,\r\n                        rL12: r2,\r\n                        rL13: r3,\r\n                        rL14: r4,\r\n                    },\r\n                    rL2 : {\r\n                        rL21: r5,\r\n                        rL22: r6,\r\n                        rL23: r7,\r\n                        rL24: r8,\r\n                    },\r\n                    rL3 : {\r\n                        rL31: r9,\r\n                        rL32: r10,\r\n                        rL33: r11,\r\n                        rL34: r12,\r\n                    }\r\n                },\r\n                finalResult:{\r\n                    r:{\r\n                        fr1: fR1.resultNum,\r\n                        fr2: fR2.resultNum,\r\n                        fr3: fR3.resultNum,\r\n                        fr4: fR4.resultNum,\r\n                        fr5: fR5.resultNum,\r\n                        fr6: fR6.resultNum,\r\n                    },\r\n                    c:{\r\n                        fc1: fR1.carryingNum,\r\n                        fc2: fR2.carryingNum,\r\n                        fc3: fR3.carryingNum,\r\n                        fc4: fR4.carryingNum,\r\n                        fc5: fR5.carryingNum\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }else{\r\n        return state\r\n    }\r\n};\r\n\r\nexport default multiplication;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {combineReducers, createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\n\nimport numbers from './store/reducers/numbers';\nimport carrys from './store/reducers/carry';\nimport results from './store/reducers/results';\nimport multiplication from './store/reducers/multiplication';\n\nconst rootReducer = combineReducers({\n  number : numbers,\n  carry : carrys,\n  result : results,\n  multi: multiplication\n})\n\n\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}