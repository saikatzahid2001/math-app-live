{"version":3,"sources":["containers/NumberBoard/Board.module.css","containers/Keypad/Keypad.module.css","containers/ActionButtons/Buttons.module.css","containers/Layout/Layout.module.css","components/Modal/Modal.module.css","containers/ExplainationBoard/ExplainationBoard.module.css","containers/Header/Header.module.css","components/Button/Button.module.css","components/Button/Button.js","components/Modal/Modal.js","store/actions/actions.js","store/actions/numberFn.js","containers/ActionButtons/Buttons.js","containers/ExplainationBoard/ExplainationBoard.js","components/BoardHeaderRow/Row.js","components/BoardCarryRow/Row.js","components/BoardResultsRow/Row.js","containers/NumberBoard/Board.js","containers/Header/Header.js","containers/Keypad/Keypad.js","containers/Layout/Layout.js","App.js","store/reducers/results.js","reportWebVitals.js","store/reducers/numbers.js","store/reducers/carry.js","store/texts/text_1x1.js","store/texts/text_2x1.js","store/texts/text_2x2.js","store/texts/text_3x1.js","store/texts/text_3x2.js","store/texts/text_3x3.js","store/reducers/Utility/carry.js","store/reducers/Utility/result.js","store/reducers/Utility/finalResult.js","store/reducers/multiplication.js","store/reducers/numberPad.js","index.js"],"names":["module","exports","Button","props","className","classNames","btn","onClick","btnClick","children","Modal","show","container","inner","close","RANDOM_NUMBER","INPUT_NUMBER","START","GENERATEONSTART","GENERATEDONSTART","END","COUNTER","COUNTERPREV","COUNTERCARRY","COUNTERRESULT","INPUTFOCUS","KEYPRESS","KEYPRESSMULTI","DELETEDIGIT","inputFocus","current","changeFn","type","actionTypes","position","connect","state","tR","number","topRow","bR","bottomRow","c","counter","nextBtn","nextBtnHide","btnHide","fR","result","finalResult","carries","multi","answer","carry","results","dispatch","random","d","fn","digitCount","rowType","randomOnStart","t","b","generatedOnStart","startMulti","endMulti","countSteps","p","u","r","upperDigit","lowerDigit","resultDigits","prevSteps","carryNumbers","useState","digitsL","setDigitsL","setUpperDigit","setLowerDigit","0","1","2","activeClassTop","setActiveClassTop","activeClassBottom","setActiveClassBottom","generateOnStart","setGenerateOnStart","generatedOnStartTrigger","setGeneratedOnStartTrigger","randomBtnModal","setRandomBtnModal","falsyObject","useEffect","randomDigitContainer","selections","map","i","selectOption","toString","active","e","Number","target","innerText","upDigit","lowDigit","generate","disabled","tL","join","length","bL","alert","title","boardTitle","texts","allTexts","explainerContainer","document","getElementById","scroll","top","scrollHeight","behavior","id","text","dangerouslySetInnerHTML","__html","Object","values","Row","row","brt","classes","color","c1","brc","c2","c3","style","numbers","hundredThousands","focusAction","backgroundColor","value","tenThousands","thousands","hundreds","tens","ones","r1","brf","r2","brs","r3","r4","brl","blank","blankH","fRC","frCarry","zero","zeroO","inputDisable","tLofCarry","topLine","mLofCarry","middleLine","bLofCarry","bottomLine","topResult","middleResult","bottomResult","focusInput","focusingInput","resultRow","resutltsRow","inputFocusTop","numpad","inputFocusBottom","input","newNum","newNumbers","rowPosition","reduxFunctions","rows","focusColor","digits","pointer","first","second","third","brd","cross","bI1","bI2","bI3","Header","header","logo","href","src","alt","ico","iFT","iFB","onPress","key","index","multiply","deleteDigit","getIndexPosition","convertToArray","indexOf","onKeyPress","indexPosition","digit","Layout","arrow","setArrow","toggleKeypad","setToggleKeypad","board_container","explainer_container","number_pad_container_grow","number_pad_container","keypadTrigger","numberPad","classList","remove","number_pad_container_shrink","add","App","nto","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","trd","reducer","actions","randomNumberGenerate","randomNumArray","randomNum1","Math","floor","randomNum2","randomNum3","randomNumString1","randomNumString2","randomNumString3","startingObject","bottom","getLength","forEach","push","getPosition","newArrayOnPress","keys","el","newArrayOnDelete","keysD","positionOfDigit","start","topRowNew","bottomRowNew","startOnGen","initialState","action","returnedObject","stepsFn","obj","line","focusPos","carryNumb","cL1","cL11","logic1","logic2","cL12","cL2","cL21","cL22","cL3","cL31","cL32","c4","c5","c6","logic11","logic21","logic22","logic31","logic32","logic33","texts_1x1","t1","b1","texts_2x1","t2","cr1","emptySpaceText","texts_2x2","b2","cr4","r5","r6","r7","r13","r14","r15","r16","fcr1","fcr2","fcr3","fc1","fc2","fc3","texts_3x1","t3","cr2","texts_3x2","cr5","r8","r17","fcr4","fc4","texts_3x3","b3","cr7","cr8","r9","r10","r11","r12","r18","fcr5","c7","c8","fc5","textCounter","textsLines","rL1","rL11","rL12","rL13","rL14","rL2","rL21","rL22","rL23","rL24","rL3","rL31","rL32","rL33","rL34","fr1","fr2","fr3","fr4","fr5","fr6","newTextsObjectCreate","valuesTextsArr","keysTextsArr","removedTextsArr","newTextsObj","pop","carryNumFn","prev","p1","p2","cNumFn","carryNumber","slice","resultNumFn","rNumFn","resultNumber","finalResultFn","n1","n2","n3","resultNum","carryingNum","multiplication","c9","fR1","fR2","fR3","fR4","fR5","fR6","cL13","cL23","cL33","rootReducer","combineReducers","carrys","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.aeff5174.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Board_container__2I5Ib\",\"inner\":\"Board_inner__2ui33\",\"row\":\"Board_row__18vsI\",\"brt\":\"Board_brt__xPrsW\",\"brc\":\"Board_brc__3n5cg\",\"brd\":\"Board_brd__3DKRt\",\"brp\":\"Board_brp__35wCz\",\"brf\":\"Board_brf__1vJ_z\",\"brs\":\"Board_brs__3A5Vz\",\"brl\":\"Board_brl__2ardM\",\"title\":\"Board_title__19QT0\",\"carry\":\"Board_carry__228Lj\",\"c1\":\"Board_c1__2Pkos\",\"c2\":\"Board_c2__Ku30P\",\"c3\":\"Board_c3__1lw3n\",\"digits\":\"Board_digits__2eP5W\",\"pointer\":\"Board_pointer__8BeKJ\",\"cross\":\"Board_cross__3-IIs\",\"results\":\"Board_results__2jIgY\",\"r1\":\"Board_r1__1M1AW\",\"r2\":\"Board_r2__IUv_C\",\"r3\":\"Board_r3__3b8xK\",\"r4\":\"Board_r4__3y_96\",\"frCarry\":\"Board_frCarry__3N2r0\",\"bI1\":\"Board_bI1__27k8N\",\"bI2\":\"Board_bI2__2PNT_\",\"bI3\":\"Board_bI3__3DQF7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Keypad_container__15i43\",\"digits\":\"Keypad_digits__1GfBQ\",\"digit\":\"Keypad_digit__1bjxo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Buttons_container__1cSAn\",\"inner\":\"Buttons_inner__1OAFK\",\"randomDigitContainer\":\"Buttons_randomDigitContainer__jWqI6\",\"selections\":\"Buttons_selections__3rfjF\",\"selectOption\":\"Buttons_selectOption__1hLs4\",\"active\":\"Buttons_active__3P5aW\",\"generate\":\"Buttons_generate__3ilUl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Layout_container__3v8bI\",\"inner\":\"Layout_inner__3JCe2\",\"board_container\":\"Layout_board_container__2Qn4q\",\"number_pad_container\":\"Layout_number_pad_container__2GVLx\",\"keypadTrigger\":\"Layout_keypadTrigger__38FY4\",\"number_pad_container_grow\":\"Layout_number_pad_container_grow__2Zn4k\",\"grow\":\"Layout_grow__3VkWM\",\"number_pad_container_shrink\":\"Layout_number_pad_container_shrink__1rPs-\",\"shrink\":\"Layout_shrink__pgRh3\",\"explainer_container\":\"Layout_explainer_container__1Mz_o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Modal_container__21mgz\",\"close\":\"Modal_close__2a0K7\",\"inner\":\"Modal_inner__1SoX6\",\"zoom\":\"Modal_zoom__qicFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ExplainationBoard_container__3g7PE\",\"inner\":\"ExplainationBoard_inner__F6iLu\",\"text\":\"ExplainationBoard_text__2yJMS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2u7Yr\",\"ico\":\"Header_ico__1UaI6\",\"logo\":\"Header_logo__2adzS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__2mB2p\"};","import React from 'react';\r\nimport classNames from './Button.module.css';\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <div className={classNames.btn}>\r\n            <button onClick={props.btnClick}> {props.children} </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport classNames from './Modal.module.css';\r\n\r\nconst Modal = (props) => {\r\n    return (\r\n        <>\r\n        {props.show ? <div className={classNames.container}>\r\n            <div className={classNames.inner}>\r\n                <div className={classNames.close}>\r\n                    <button onClick={props.close}>Close</button>\r\n                </div>\r\n                {props.children}\r\n            </div>\r\n        </div> : null}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Modal;","export const RANDOM_NUMBER = 'RANDOM_NUMBER';\r\nexport const INPUT_NUMBER = 'INPUT_NUMBER';\r\nexport const START = 'START';\r\nexport const GENERATEONSTART = 'GENERATEONSTART';\r\nexport const GENERATEDONSTART = 'GENERATEDONSTART';\r\nexport const END = 'END';\r\nexport const COUNTER = 'COUNTER';\r\nexport const COUNTERPREV = 'COUNTERPREV';\r\nexport const COUNTERCARRY = 'COUNTERCARRY';\r\nexport const COUNTERRESULT = 'COUNTERRESULT';\r\n\r\nexport const INPUTFOCUS = 'INPUTFOCUS';\r\nexport const KEYPRESS = 'KEYPRESS';\r\nexport const KEYPRESSMULTI = 'KEYPRESSMULTI';\r\nexport const DELETEDIGIT = 'DELETEDIGIT';","import * as actionTypes from './actions';\r\n\r\nexport const randomNumberGenerate = (digitCounter, changerFn) => {\r\n    return{\r\n        type: actionTypes.RANDOM_NUMBER,\r\n        digitCount: digitCounter,\r\n        rowType: changerFn\r\n    }\r\n}\r\nexport const randomNumberGenerateOnStart = (topRow, bottomRow) => {\r\n    return{\r\n        type: actionTypes.GENERATEONSTART,\r\n        topRow: topRow,\r\n        bottomRow: bottomRow\r\n    }\r\n}\r\nexport const generatedOnStart = (topRow, bottomRow) => {\r\n    return{\r\n        type: actionTypes.GENERATEDONSTART,\r\n        topRow: topRow,\r\n        bottomRow: bottomRow\r\n    }\r\n}\r\nexport const inputNumber = (updatedNumbers, changerFn) => {\r\n    return{\r\n        type: actionTypes.INPUT_NUMBER,\r\n        newNumbers: updatedNumbers,\r\n        rowPosition: changerFn\r\n    }\r\n}\r\nexport const startMultiplication = (topRow, bottomRow) => {\r\n    return{\r\n        type: actionTypes.START,\r\n        topRow: topRow,\r\n        bottomRow: bottomRow\r\n    }\r\n}\r\nexport const endMultiplication = () => {\r\n    return{\r\n        type: actionTypes.END\r\n    }\r\n}\r\nexport const stepCounter = (position, upperDigit, lowerDigit, resultDigits) => {\r\n    return{\r\n        type: actionTypes.COUNTER,\r\n        position: position,\r\n        upperDigit: upperDigit,\r\n        lowerDigit: lowerDigit,\r\n        resultDigits: resultDigits\r\n    }\r\n}\r\nexport const prevCounter = (position, upperDigit, lowerDigit, resultDigits) => {\r\n    return{\r\n        type: actionTypes.COUNTERPREV,\r\n        upperDigit: upperDigit,\r\n        lowerDigit: lowerDigit,\r\n        position: position,\r\n        resultDigits: resultDigits\r\n    }\r\n}\r\nexport const carryAddition = (position, carryNumbers, upperDigit, lowerDigit) => {\r\n    return{\r\n        type: actionTypes.COUNTERCARRY,\r\n        position: position,\r\n        carryNumbers: carryNumbers,\r\n        upperDigit: upperDigit,\r\n        lowerDigit: lowerDigit\r\n    }\r\n}\r\nexport const resultAddition = (position, upperDigit, lowerDigit) => {\r\n    return{\r\n        type: actionTypes.COUNTERRESULT,\r\n        position: position,\r\n        upperDigit: upperDigit,\r\n        lowerDigit: lowerDigit\r\n    }\r\n}\r\n\r\nexport const inputFocus = (current, changeFn) => {\r\n    return{\r\n        type: actionTypes.INPUTFOCUS,\r\n        current: current,\r\n        position: changeFn\r\n    }\r\n}\r\n\r\nexport const keypress = (key, index, changeFn) => {\r\n    return{\r\n        type: actionTypes.KEYPRESS,\r\n        key: key,\r\n        index: index,\r\n        position: changeFn\r\n    }\r\n}\r\nexport const multiply = () => {\r\n    return{\r\n        type: actionTypes.KEYPRESSMULTI\r\n    }\r\n}\r\nexport const deleteDigit = (index, position) => {\r\n    return{\r\n        type: actionTypes.DELETEDIGIT,\r\n        index: index,\r\n        position: position\r\n    }\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport Modal from '../../components/Modal/Modal';\r\nimport classNames from \"./Buttons.module.css\";\r\nimport {connect} from 'react-redux';\r\nimport * as reduxFunctions from '../../store/actions/index';\r\n\r\nconst Buttons = (props) => {\r\n  const digitsU = [\"1\", \"2\", \"3\"];\r\n  const [digitsL, setDigitsL] = useState([\"1\", \"2\", \"3\"]);\r\n  const [upperDigit, setUpperDigit] = useState(3);\r\n  const [lowerDigit, setLowerDigit] = useState(3);\r\n  const [activeClassTop, setActiveClassTop] = useState({\r\n    0:false,\r\n    1:false,\r\n    2:true\r\n  })\r\n  const [activeClassBottom, setActiveClassBottom] = useState({\r\n    0:false,\r\n    1:false,\r\n    2:true\r\n  })\r\n  const [generateOnStart, setGenerateOnStart] = useState(false);\r\n  const [generatedOnStartTrigger, setGeneratedOnStartTrigger] = useState(false);\r\n\r\n  const [randomBtnModal, setRandomBtnModal] = useState(false);\r\n  const triggerModal = () => {\r\n    setRandomBtnModal(true);\r\n  };\r\n  const closeModal = () => {\r\n    setRandomBtnModal(false);\r\n  };\r\n  const falsyObject = {\r\n    0:false,\r\n    1:false,\r\n    2:false\r\n  }\r\n\r\n  const tR = props.tR;\r\n  const bR = props.bR;\r\n\r\n  const {generatedOnStart} = props;\r\n\r\n  useEffect(()=>{\r\n    if(generatedOnStartTrigger){\r\n      generatedOnStart(tR, bR);\r\n    }\r\n  },[tR, bR, generatedOnStart, generatedOnStartTrigger])\r\n\r\n  const upDigit = (e, i) => {\r\n    setUpperDigit(Number(e.target.innerText));\r\n    setActiveClassTop({\r\n      ...falsyObject,\r\n      [i.toString()] : true\r\n    })\r\n    switch (i) {\r\n      case 0:\r\n        setDigitsL(['1'])\r\n        setLowerDigit(1)\r\n        setActiveClassBottom({\r\n          ...falsyObject,\r\n          0: true\r\n        })\r\n        break;\r\n      case 1:\r\n        setDigitsL(['1', '2'])\r\n        setLowerDigit(2)\r\n        setActiveClassBottom({\r\n          ...falsyObject,\r\n          1: true\r\n        })\r\n        break;\r\n      case 2:\r\n        setDigitsL(['1', '2', '3'])\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const lowDigit = (e, i) => {\r\n    setLowerDigit(Number(e.target.innerText));\r\n    setActiveClassBottom({\r\n      ...falsyObject,\r\n      [i.toString()] : true\r\n    })\r\n  };\r\n  const starting = () => {\r\n    const tL = props.tR.join('').length;\r\n    const bL = props.bR.join('').length;\r\n    if(tL < bL){\r\n      alert('You can\\'t add lower digits in the top than the bottom' )\r\n    }else{\r\n      if(generateOnStart || tL === 0 || bL === 0){\r\n        props.randomOnStart();\r\n        setGeneratedOnStartTrigger(true);\r\n        setGenerateOnStart(false);\r\n      }else{\r\n        setUpperDigit(tL);\r\n        setLowerDigit(bL);\r\n        props.startMulti(props.tR, props.bR);\r\n        setGenerateOnStart(true);\r\n        setGeneratedOnStartTrigger(false);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  const ending = () => {\r\n    props.endMulti();\r\n    setGeneratedOnStartTrigger(false);\r\n  }\r\n\r\n  const setTopAndBelowItems = () => {\r\n    setRandomBtnModal(false);\r\n    setGenerateOnStart(false);\r\n    props.random(upperDigit, 'topRow');\r\n    props.random(lowerDigit, 'bottomRow');\r\n  };\r\n\r\n  const nextSteps = () => {\r\n    props.countSteps(props.c, upperDigit, lowerDigit, props.results);\r\n    props.carry(props.c, props.carries, upperDigit, lowerDigit);\r\n    props.result(props.c, upperDigit, lowerDigit);\r\n  }\r\n\r\n  const prevSteps = () => {\r\n    props.prevSteps(props.c, upperDigit, lowerDigit, props.results);\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Modal show={randomBtnModal} close={closeModal}>\r\n        <div className={classNames.randomDigitContainer}>\r\n          <h1>How many digit you want in top?</h1>\r\n          <div className={classNames.selections}>\r\n            {digitsU.map((c, i) => {\r\n              return (\r\n                <div\r\n                  key={c}\r\n                  className={`${classNames.selectOption} ${activeClassTop[i.toString()] ? classNames.active : null }`}\r\n                  onClick={(e) => {\r\n                    upDigit(e, i);\r\n                  }}\r\n                >\r\n                  {c}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className={classNames.randomDigitContainer}>\r\n          <h1>How many digit you want in Bottom?</h1>\r\n          <div className={classNames.selections}>\r\n            {digitsL.map((c, i) => {\r\n              return (\r\n                <div\r\n                  key={c}\r\n                  className={`${classNames.selectOption} ${activeClassBottom[i.toString()] ? classNames.active : null }`}\r\n                  onClick={(e) => {\r\n                    lowDigit(e, i);\r\n                  }}\r\n                >\r\n                  {c}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className={classNames.generate}>\r\n          <Button btnClick={setTopAndBelowItems}>\r\n            <span>Generate</span>\r\n            <i className=\"fas fa-check\"></i>\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n      <div className={classNames.container}>\r\n        <div className={classNames.inner}>\r\n          <button onClick={prevSteps} disabled={props.btnHide || props.nextBtn ? true : false}>\r\n            <i className=\"fas fa-backward\"></i>\r\n          </button>\r\n          <button onClick={nextSteps} disabled={props.btnHide || props.nextBtn ? true : false}>\r\n            <i className=\"fas fa-forward\"></i>\r\n          </button>\r\n          <button onClick={starting} disabled={!props.btnHide}>\r\n            <i className=\"fas fa-play\"></i>\r\n          </button>\r\n          <button onClick={ending} disabled={props.btnHide}>\r\n            <i className=\"fas fa-stop\"></i>\r\n          </button>\r\n          <button onClick={triggerModal} disabled={!props.btnHide}>\r\n            <i className=\"fas fa-random\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nconst mapStatetoProps = state => {\r\n  return{\r\n      tR: state.number.topRow,\r\n      bR: state.number.bottomRow,\r\n      c: state.number.counter,\r\n      nextBtn: state.number.nextBtnHide,\r\n      btnHide: state.number.btnHide,\r\n      fR: state.result.finalResult,\r\n      carries: state.multi.answer.carry,\r\n      results: state.multi.answer\r\n  }\r\n}\r\n\r\nconst mapDispatchtoProps = dispatch => {\r\n  return{\r\n      random: (d, fn) => dispatch(reduxFunctions.randomNumberGenerate(d, fn)),\r\n      randomOnStart: (t, b) => dispatch(reduxFunctions.randomNumberGenerateOnStart(t, b)),\r\n      generatedOnStart: (t, b) => dispatch(reduxFunctions.generatedOnStart(t, b)),\r\n      startMulti: (t, b) => dispatch(reduxFunctions.startMultiplication(t, b)),\r\n      endMulti: () => dispatch(reduxFunctions.endMultiplication()),\r\n      countSteps: (p, u, d, r) => dispatch(reduxFunctions.stepCounter(p, u, d, r)),\r\n      prevSteps: (c, u, d, r) => dispatch(reduxFunctions.prevCounter(c, u, d, r)),\r\n      carry: (p, c, u, d) => dispatch(reduxFunctions.carryAddition(p, c, u, d)),\r\n      result: (p, u, d, r) => dispatch(reduxFunctions.resultAddition(p, u, d, r))\r\n  }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Buttons);","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classNames from './ExplainationBoard.module.css';\r\n\r\nconst ExplainationBoard = (props) => {\r\n\r\n    useEffect(()=>{\r\n        const explainerContainer = document.getElementById('explainerContainer')\r\n        explainerContainer.scroll({\r\n            top: explainerContainer.scrollHeight,\r\n            behavior: 'smooth'\r\n        });\r\n    },[props.texts])\r\n\r\n    return (\r\n        <div className={classNames.container}>\r\n            <div className={classNames.inner} id=\"explainerContainer\">\r\n                <div className={classNames.text}>\r\n                    <h3 dangerouslySetInnerHTML={{ __html: props.title.show ? props.title.title : 'Generate random numbers to start' }}></h3>\r\n                    <div>\r\n                        {Object.values(props.texts).map((c, i)=>{\r\n                            return <p dangerouslySetInnerHTML={{__html: c}} key={i}></p>\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStatetoProps = state => {\r\n    return{\r\n        title: state.number.boardTitle,\r\n        texts: state.result.allTexts\r\n    }\r\n}\r\nexport default connect(mapStatetoProps)(ExplainationBoard);","import React from 'react';\r\nimport classNames from '../../containers/NumberBoard/Board.module.css';\r\n\r\nconst Row = () => {\r\n    return (\r\n        <div className={`${classNames.row}`}>\r\n            <div className={`${classNames.title} ${classNames.brt}`}>\r\n                <h4>Hundred Thousands</h4>\r\n            </div>\r\n            <div className={`${classNames.title} ${classNames.brt}`}>\r\n                <h4>Ten Thousands</h4>\r\n            </div>\r\n            <div className={`${classNames.title} ${classNames.brt}`}>\r\n                <h4>Thousands</h4>\r\n            </div>\r\n            <div className={`${classNames.title} ${classNames.brt}`}>\r\n                <h4>Hundreds</h4>\r\n            </div>\r\n            <div className={`${classNames.title} ${classNames.brt}`}>\r\n                <h4>Tens</h4>\r\n            </div>\r\n            <div className={`${classNames.title} ${classNames.brt}`}>\r\n                <h4>Ones</h4>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Row;","import React from 'react';\r\nimport classNames from '../../containers/NumberBoard/Board.module.css';\r\n\r\nconst Row = (props) => {\r\n    let classes;\r\n    switch (props.color) {\r\n        case 'c1':\r\n            classes = `${classNames.carry} ${classNames.c1} ${classNames.brc}`\r\n            break;\r\n        case 'c2':\r\n            classes = `${classNames.carry} ${classNames.c2} ${classNames.brc}`\r\n            break;\r\n        case 'c3':\r\n            classes = `${classNames.carry} ${classNames.c3} ${classNames.brc}`\r\n            break;\r\n    \r\n        default:\r\n            classes = `${classNames.carry} ${classNames.c1} ${classNames.brc}`\r\n            break;\r\n    }\r\n    return (\r\n        <>\r\n        <div className={classNames.row}>\r\n            <div className={classes} style={props.numbers.hundredThousands.focusAction ? {backgroundColor: '#ffffc0'} : null}>\r\n                <h2>{props.numbers.hundredThousands.value}</h2>\r\n            </div>\r\n            <div className={classes} style={props.numbers.tenThousands.focusAction ? {backgroundColor: '#ffffc0'} : null}>\r\n                <h2>{props.numbers.tenThousands.value}</h2>\r\n            </div>\r\n            <div className={classes} style={props.numbers.thousands.focusAction ? {backgroundColor: '#ffffc0'} : null}>\r\n                <h2>{props.numbers.thousands.value}</h2>\r\n            </div>\r\n            <div className={classes} style={props.numbers.hundreds.focusAction ? {backgroundColor: '#ffffc0'} : null}>\r\n                <h2>{props.numbers.hundreds.value}</h2>\r\n            </div>\r\n            <div className={classes} style={props.numbers.tens.focusAction ? {backgroundColor: '#ffffc0'} : null}>\r\n                <h2>{props.numbers.tens.value}</h2>\r\n            </div>\r\n            <div className={classes}>\r\n                <h2>{props.numbers.ones.value}</h2>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Row;","import React from 'react';\r\nimport classNames from '../../containers/NumberBoard/Board.module.css';\r\n\r\nconst Row = (props) => {\r\n    let classes;\r\n    switch (props.color) {\r\n        case 'r1':\r\n            classes = `${classNames.results} ${classNames.r1} ${classNames.brf}`\r\n            break;\r\n        case 'r2':\r\n            classes = `${classNames.results} ${classNames.r2} ${classNames.brs}`\r\n            break;\r\n        case 'r3':\r\n            classes = `${classNames.results} ${classNames.r3} ${classNames.brt}`\r\n            break;\r\n        case 'r4':\r\n            classes = `${classNames.results} ${classNames.r4} ${classNames.brl}`\r\n            break;\r\n    \r\n        default:\r\n            break;\r\n    }\r\n    return (\r\n        <div className={classNames.row}>\r\n            <div className={classes} style={props.numbers.hundredThousands.focusAction ? {backgroundColor: '#ffffc0'} : props.blank || props.blankH ? {backgroundColor: 'white'} : null}>\r\n                {props.fRC ? <span className={classNames.frCarry}>{props.fRC.hundredThousands.carry}</span>:null}\r\n                <h1>{props.numbers.hundredThousands.value}</h1>\r\n            </div>\r\n            <div className={classes} style={props.numbers.tenThousands.focusAction ? {backgroundColor: '#ffffc0'} : props.blank ? {backgroundColor: 'white'} : null}>\r\n                {props.fRC ? <span className={classNames.frCarry}>{props.fRC.tenThousands.carry}</span>:null}\r\n                <h1>{props.numbers.tenThousands.value}</h1>\r\n            </div>\r\n            <div className={classes} style={props.numbers.thousands.focusAction ? {backgroundColor: '#ffffc0'} : null}>\r\n                {props.fRC ? <span className={classNames.frCarry}>{props.fRC.thousands.carry}</span>:null}\r\n                <h1>{props.numbers.thousands.value}</h1>\r\n            </div>\r\n            <div className={classes} style={props.numbers.hundreds.focusAction ? {backgroundColor: '#ffffc0'} : null}>\r\n                {props.fRC ? <span className={classNames.frCarry}>{props.fRC.hundreds.carry}</span>:null}\r\n                <h1>{props.numbers.hundreds.value}</h1>\r\n            </div>\r\n            <div className={classes} style={props.numbers.tens.focusAction ? {backgroundColor: '#ffffc0'} : props.zero ? {backgroundColor: 'white', color: '#D9D9D9'} : null}>\r\n                {props.fRC ? <span className={classNames.frCarry}>{props.fRC.tens.carry}</span>:null}\r\n                <h1>{props.numbers.tens.value}</h1>\r\n            </div>\r\n            <div className={classes} style={props.numbers.ones.focusAction ? {backgroundColor: '#ffffc0'} : props.zero || props.zeroO ? {backgroundColor: 'white', color: '#D9D9D9'} : null}>\r\n                <h1>{props.numbers.ones.value}</h1>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Row;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from '../../components/BoardHeaderRow/Row';\r\nimport Carry from '../../components/BoardCarryRow/Row';\r\nimport Result from '../../components/BoardResultsRow/Row';\r\nimport classNames from './Board.module.css';\r\nimport * as reduxFunctions from '../../store/actions/index';\r\n\r\nconst Board = (props) => {\r\n\r\n    // const inputChange = (e, i, tb, changeFN)=>{\r\n    //     let maxLength = 1;\r\n    //     if (e.target.value.length > maxLength){\r\n    //         e.target.value = e.target.value.slice(0, maxLength);\r\n    //     }\r\n    //     let old = [...tb]\r\n    //     old[i] = e.target.value;\r\n    //     props.input(old, changeFN);\r\n    // }\r\n\r\n    // let nameInput;\r\n\r\n    // useEffect(()=>{\r\n    //     nameInput.focus();\r\n    // },[nameInput])\r\n\r\n    let rows;\r\n\r\n    switch (props.resultRow) {\r\n        case 1:\r\n            rows = <>\r\n                <Result numbers={props.r1} color='r1' blank fRC={props.r4} />\r\n            </>\r\n            break;\r\n        case 2:\r\n            rows = <>\r\n                <Result numbers={props.r1} color='r1' blank fRC={props.r4} />\r\n                <Result numbers={props.r2} color='r2' blankH zeroO />\r\n                <Result numbers={props.r4} color='r4'/>\r\n            </>\r\n            break;\r\n        case 3:\r\n            rows = <>\r\n                <Result numbers={props.r1} color='r1' blank fRC={props.r4} />\r\n                <Result numbers={props.r2} color='r2' blankH zeroO />\r\n                <Result numbers={props.r3} color='r3' zero/>\r\n                <Result numbers={props.r4} color='r4'/>\r\n            </>\r\n            break;\r\n    \r\n        default:\r\n            rows = null;\r\n            break;\r\n    }\r\n\r\n    const focusColor = (c1, c2) => {\r\n        const yellow = {backgroundColor: 'yellow'};\r\n        const red = {backgroundColor: '#fa7474'};\r\n        let color;\r\n        if(c1){\r\n            color = yellow;\r\n        }else if(c2){\r\n            color = red;\r\n        }else{\r\n            color = null;\r\n        }\r\n        return color;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classNames.container}>\r\n            <div className={classNames.inner}>\r\n                <Header />\r\n\r\n                <Carry numbers={props.tLofCarry} color='c1' />\r\n                <Carry numbers={props.mLofCarry} color='c2' />\r\n                <Carry numbers={props.bLofCarry} color='c3' />\r\n\r\n                <div className={classNames.row}>\r\n                    <div className={`${classNames.digits} ${classNames.brc}`}>\r\n                        <h1>{null}</h1>\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brc}`}>\r\n                        <h1>{null}</h1>\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brc}`}>\r\n                        <h1>{null}</h1>\r\n                    </div>\r\n                    <div\r\n                    className={`${classNames.digits} ${classNames.brc} ${classNames.pointer}`}\r\n                    onClick={() => {if(!props.inputDisable){props.inputFocus(0, 'inputFocusTop')}}}\r\n                    style={focusColor(props.focusInput.t.first, props.inputFocusTop[0])}\r\n                    >\r\n                        <h1>{props.tR[0]}</h1>\r\n                        {/* <input\r\n                        type='number'\r\n                        onClick={() => props.inputFocus(0, 'inputFocusTop')}\r\n                        value={props.tR[0]}\r\n                        onChange={(e)=>inputChange(e, 0, props.tR, 'topRow')} max=\"1\"\r\n                        style={focusColor(props.focusInput.t.first, props.inputFocusTop[0])}\r\n                        ref={(input) => { nameInput = input; }}\r\n                        disabled={props.inputDisable}\r\n                        /> */}\r\n                    </div>\r\n                    <div\r\n                    className={`${classNames.digits} ${classNames.brc} ${classNames.pointer}`}\r\n                    onClick={() => {if(!props.inputDisable){props.inputFocus(1, 'inputFocusTop')}}}\r\n                    style={focusColor(props.focusInput.t.second, props.inputFocusTop[1])}\r\n                    >\r\n                        <h1>{props.tR[1]}</h1>\r\n                        {/* <input\r\n                        type='number'\r\n                        onClick={() => props.inputFocus(1, 'inputFocusTop')}\r\n                        value={props.tR[1]}\r\n                        onChange={(e)=>inputChange(e, 1, props.tR, 'topRow')} max=\"1\"\r\n                        style={focusColor(props.focusInput.t.second, props.inputFocusTop[1])}\r\n                        disabled={props.inputDisable}\r\n                        /> */}\r\n                    </div>\r\n                    <div\r\n                    className={`${classNames.digits} ${classNames.brc} ${classNames.pointer}`}\r\n                    onClick={() => {if(!props.inputDisable){props.inputFocus(2, 'inputFocusTop')}}}\r\n                    style={focusColor(props.focusInput.t.third, props.inputFocusTop[2])}\r\n                    >\r\n                        <h1>{props.tR[2]}</h1>\r\n                        {/* <input\r\n                        type='number'\r\n                        onClick={() => props.inputFocus(2, 'inputFocusTop')}\r\n                        value={props.tR[2]}\r\n                        onChange={(e)=>inputChange(e, 2, props.tR, 'topRow')}\r\n                        max=\"1\"\r\n                        style={focusColor(props.focusInput.t.third, props.inputFocusTop[2])}\r\n                        disabled={props.inputDisable}\r\n                        /> */}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classNames.row} >\r\n                    <div className={`${classNames.digits} ${classNames.brd}`}>\r\n                        <h1 className={classNames.cross}>X</h1>\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brd}`}>\r\n                        <h1>{null}</h1>\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brd}`}>\r\n                        <h1>{null}</h1>\r\n                    </div>\r\n                    <div \r\n                    className={`${classNames.digits} ${classNames.brd} ${classNames.bI1} ${classNames.pointer}`}\r\n                    onClick={() => {if(!props.inputDisable){props.inputFocus(0, 'inputFocusBottom')}}}\r\n                    style={focusColor(props.focusInput.b.first, props.inputFocusBottom[0])}\r\n                    >\r\n                        <h1>{props.bR[0]}</h1>\r\n                        {/* <input\r\n                        type='number'\r\n                        onClick={() => props.inputFocus(0, 'inputFocusBottom')}\r\n                        value={props.bR[0]}\r\n                        onChange={(e)=>inputChange(e, 0, props.bR, 'bottomRow')} max=\"1\"\r\n                        style={focusColor(props.focusInput.b.first, props.inputFocusBottom[0])}\r\n                        disabled={props.inputDisable}\r\n                        className={classNames.bI1}\r\n                        /> */}\r\n                    </div>\r\n                    <div\r\n                    className={`${classNames.digits} ${classNames.brd} ${classNames.bI2} ${classNames.pointer}`}\r\n                    onClick={() => {if(!props.inputDisable){props.inputFocus(1, 'inputFocusBottom')}}}\r\n                    style={focusColor(props.focusInput.b.second, props.inputFocusBottom[1])}\r\n                    >\r\n                        <h1>{props.bR[1]}</h1>\r\n                        {/* <input\r\n                        type='number'\r\n                        onClick={() => props.inputFocus(1, 'inputFocusBottom')}\r\n                        value={props.bR[1]}\r\n                        onChange={(e)=>inputChange(e, 1, props.bR, 'bottomRow')} max=\"1\"\r\n                        style={focusColor(props.focusInput.b.second, props.inputFocusBottom[1])}\r\n                        disabled={props.inputDisable}\r\n                        className={classNames.bI2}\r\n                        /> */}\r\n                    </div>\r\n                    <div\r\n                    className={`${classNames.digits} ${classNames.brd} ${classNames.bI3} ${classNames.pointer}`}\r\n                    onClick={() => {if(!props.inputDisable){props.inputFocus(2, 'inputFocusBottom')}}}\r\n                    style={focusColor(props.focusInput.b.third, props.inputFocusBottom[2])}\r\n                    >\r\n                        <h1>{props.bR[2]}</h1>\r\n                        {/* <input\r\n                        type='number'\r\n                        onClick={() => props.inputFocus(2, 'inputFocusBottom')}\r\n                        value={props.bR[2]}\r\n                        onChange={(e)=>inputChange(e, 2, props.bR, 'bottomRow')} max=\"1\"\r\n                        style={focusColor(props.focusInput.b.third, props.inputFocusBottom[2])}\r\n                        disabled={props.inputDisable}\r\n                        className={classNames.bI3}\r\n                        /> */}\r\n                    </div>\r\n                </div>\r\n\r\n                \r\n                {rows}\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStatetoProps = state => {\r\n    return{\r\n        tR: state.number.topRow,\r\n        bR: state.number.bottomRow,\r\n        inputDisable: state.number.inputDisable,\r\n        tLofCarry : state.carry.topLine,\r\n        mLofCarry : state.carry.middleLine,\r\n        bLofCarry : state.carry.bottomLine,\r\n        r1 : state.result.topResult,\r\n        r2 : state.result.middleResult,\r\n        r3 : state.result.bottomResult,\r\n        r4 : state.result.finalResult,\r\n        focusInput: state.result.focusingInput,\r\n        resultRow : state.number.resutltsRow,\r\n        inputFocusTop : state.numpad.inputFocusTop,\r\n        inputFocusBottom : state.numpad.inputFocusBottom\r\n    }\r\n}\r\nconst mapDispatchtoProps = dispatch => {\r\n    return{\r\n        input: (newNum, fn) => dispatch(reduxFunctions.inputNumber(newNum, fn)),\r\n        inputFocus: (c, fn) => dispatch(reduxFunctions.inputFocus(c, fn))\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Board);","import React from 'react';\r\nimport classNames from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className={classNames.header}>\r\n            <div className={classNames.logo}>\r\n                <a href='!#'>\r\n                    <img src=\"https://la-tua-salute.ml/math/logo.svg\" alt=\"Logo\" />Multi Plus\r\n                </a>\r\n            </div>\r\n            <div className={classNames.ico}>\r\n                <i className=\"fas fa-bars\"></i>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classNames from './Keypad.module.css';\r\nimport * as reduxFunctions from '../../store/actions/index';\r\n\r\nconst Keypad = (props) => {\r\n    const getIndexPosition = () => {\r\n        let convertToArray = Object.values(props.iFT) \r\n        let index = convertToArray.indexOf(true);\r\n        let position = 'topRow';\r\n        if(index === -1){\r\n            convertToArray = Object.values(props.iFB);\r\n            index = convertToArray.indexOf(true);\r\n            position = 'bottomRow'\r\n            if(index === -1){\r\n                index = true\r\n            }\r\n        }\r\n        return {index, position};\r\n    }\r\n    const onKeyPress = (key) => {\r\n        const indexPosition = getIndexPosition();\r\n        if(indexPosition.index === true){\r\n            alert('Please target an input box where you wish to add digit!')\r\n        }else{\r\n            if(indexPosition.position === 'bottomRow'){\r\n                if(indexPosition.index+1 > 3){\r\n                    alert('Press the start button below')\r\n                }else{\r\n                    props.onPress(key, indexPosition.index, 'bottomRow')\r\n                    props.inputFocus(indexPosition.index+1, 'inputFocusBottom' )\r\n                }\r\n            }else{\r\n                props.onPress(key, indexPosition.index, 'topRow')\r\n                props.inputFocus(indexPosition.index+1, 'inputFocusTop')\r\n                if(indexPosition.index+1 === 3 && props.tR[0]){\r\n                    props.inputFocus(0, 'inputFocusBottom' )\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const multiply = () => {\r\n        if(!props.bR[0] || getIndexPosition().position === 'topRow') props.multiply();\r\n    }\r\n\r\n    const deleteDigit = () => {\r\n        const indexPosition = getIndexPosition();\r\n        props.deleteDigit(indexPosition.index, indexPosition.position);\r\n    }\r\n    return (\r\n        <div className={classNames.container}>\r\n            <div className={classNames.digits}>\r\n                <button className={classNames.digit} onClick={()=>{if(!props.inputDisable){onKeyPress(7)}}}>7</button>\r\n                <button className={classNames.digit} onClick={()=>{if(!props.inputDisable){onKeyPress(8)}}}>8</button>\r\n                <button className={classNames.digit} onClick={()=>{if(!props.inputDisable){onKeyPress(9)}}}>9</button>\r\n                <button className={classNames.digit} onClick={()=>{if(!props.inputDisable){onKeyPress(4)}}}>4</button>\r\n                <button className={classNames.digit} onClick={()=>{if(!props.inputDisable){onKeyPress(5)}}}>5</button>\r\n                <button className={classNames.digit} onClick={()=>{if(!props.inputDisable){onKeyPress(6)}}}>6</button>\r\n                <button className={classNames.digit} onClick={()=>{if(!props.inputDisable){onKeyPress(1)}}}>1</button>\r\n                <button className={classNames.digit} onClick={()=>{if(!props.inputDisable){onKeyPress(2)}}}>2</button>\r\n                <button className={classNames.digit} onClick={()=>{if(!props.inputDisable){onKeyPress(3)}}}>3</button>\r\n                <button className={classNames.digit} onClick={()=>{multiply()}}>\r\n                    <i className=\"fas fa-times\"></i>\r\n                </button>\r\n                <button className={classNames.digit} onClick={()=>{if(!props.inputDisable){onKeyPress(0)}}}>0</button>\r\n                <button className={classNames.digit} onClick={()=>deleteDigit()}>\r\n                    <i className=\"fas fa-trash-alt\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStatetoProps = state => {\r\n    return{\r\n        tR: state.number.topRow,\r\n        bR: state.number.bottomRow,\r\n        iFT : state.numpad.inputFocusTop,\r\n        iFB : state.numpad.inputFocusBottom,\r\n        inputDisable: state.number.inputDisable\r\n    }\r\n}\r\nconst mapDispatchtoProps = dispatch => {\r\n    return{\r\n        onPress: (key, index, changeFn) => dispatch(reduxFunctions.keypress(key, index, changeFn)),\r\n        inputFocus: (c, fn) => dispatch(reduxFunctions.inputFocus(c, fn)),\r\n        multiply: () => dispatch(reduxFunctions.multiply()),\r\n        deleteDigit: (index, position) => dispatch(reduxFunctions.deleteDigit(index, position)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Keypad);","import React, { useState } from 'react';\r\nimport Buttons from '../ActionButtons/Buttons';\r\nimport ExplainationBoard from '../ExplainationBoard/ExplainationBoard';\r\nimport Board from '../NumberBoard/Board';\r\nimport classNames from './Layout.module.css';\r\nimport Header from '../Header/Header';\r\nimport Keypad from '../Keypad/Keypad';\r\n\r\nconst Layout = () => {\r\n\r\n    const [arrow, setArrow] = useState(<i className=\"fas fa-arrow-circle-right\"></i>)\r\n    const [toggleKeypad, setToggleKeypad] = useState(false)\r\n\r\n    const keypadToggle = () => {\r\n        const numberPad = document.getElementById('numberPad');\r\n\r\n        if(toggleKeypad){\r\n            numberPad.classList.remove(`${classNames.number_pad_container_shrink}`)\r\n            numberPad.classList.add(`${classNames.number_pad_container_grow}`);\r\n            setArrow(<i className=\"fas fa-arrow-circle-right\"></i>)\r\n            setToggleKeypad(false)\r\n        }else{\r\n            numberPad.classList.remove(`${classNames.number_pad_container_grow}`);\r\n            numberPad.classList.add(`${classNames.number_pad_container_shrink}`)\r\n            setArrow(<i className=\"fas fa-arrow-circle-left\"></i>)\r\n            setToggleKeypad(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={classNames.container}>\r\n                <Header />\r\n                <div className={classNames.inner}>\r\n                    <div className={classNames.board_container}>\r\n                        <Board/>\r\n                    </div>\r\n                    <div className={classNames.explainer_container}>\r\n                        <ExplainationBoard/>\r\n                    </div>\r\n                    <div className={`${classNames.number_pad_container_grow} ${classNames.number_pad_container}`} id=\"numberPad\">\r\n                        <div className={classNames.keypadTrigger}>\r\n                            <button onClick={keypadToggle}>\r\n                                {arrow}\r\n                            </button>\r\n                        </div>\r\n                        <Keypad/>\r\n                    </div>\r\n                </div>\r\n                <Buttons/>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nexport default Layout;","import Layout from \"./containers/Layout/Layout\";\n\n\nfunction App() {\n  return (\n    <Layout />\n  );\n}\n\nexport default App;\n","import * as actionTypes from '../actions/actions';\r\nimport texts_1x1 from '../texts/text_1x1';\r\nimport texts_2x1 from '../texts/text_2x1';\r\nimport texts_2x2 from '../texts/text_2x2';\r\nimport texts_3x1 from '../texts/text_3x1';\r\nimport texts_3x2 from '../texts/text_3x2';\r\nimport texts_3x3 from '../texts/text_3x3';\r\n\r\nconst initialState = {\r\n    topResult:{\r\n        ones: {focusAction: false, value: null},\r\n        tens: {focusAction: false, value: null},\r\n        hundreds: {focusAction: false, value: null},\r\n        thousands: {focusAction: false, value: null},\r\n        tenThousands: {focusAction: false, value: null},\r\n        hundredThousands: {focusAction: false, value: null}\r\n    },\r\n    middleResult:{\r\n        ones: {focusAction: false, value: null},\r\n        tens: {focusAction: false, value: null},\r\n        hundreds: {focusAction: false, value: null},\r\n        thousands: {focusAction: false, value: null},\r\n        tenThousands: {focusAction: false, value: null},\r\n        hundredThousands: {focusAction: false, value: null}\r\n    },\r\n    bottomResult:{\r\n        ones: {focusAction: false, value: null},\r\n        tens: {focusAction: false, value: null},\r\n        hundreds: {focusAction: false, value: null},\r\n        thousands: {focusAction: false, value: null},\r\n        tenThousands: {focusAction: false, value: null},\r\n        hundredThousands: {focusAction: false, value: null}\r\n    },\r\n    finalResult:{\r\n        ones: {focusAction: false, value: null},\r\n        tens: {focusAction: false, value: null},\r\n        hundreds: {focusAction: false, value: null},\r\n        thousands: {focusAction: false, value: null},\r\n        tenThousands: {focusAction: false, value: null},\r\n        hundredThousands: {focusAction: false, value: null}\r\n    },\r\n    focusingInput: {\r\n        t:{\r\n            first: false,\r\n            second: false,\r\n            third: false\r\n        },\r\n        b:{\r\n            first: false,\r\n            second: false,\r\n            third: false\r\n        },\r\n    },\r\n    allTexts: {},\r\n    textCounter: 0\r\n};\r\n\r\nlet nto;\r\n\r\nconst result = (state = initialState, action)=>{\r\n    if(action.type === actionTypes.END){\r\n        return initialState;\r\n    }\r\n    let returnedObject = {};\r\n\r\n    let r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18;\r\n\r\n    let fc1, fc2, fc3, fc4, fc5;\r\n\r\n    let t1, t2, t3, b1, b2, b3, c1, c2, c4, c5, c7, c8;\r\n\r\n    let textsLines;\r\n\r\n    if(action.type === actionTypes.COUNTER){\r\n        r1 = action.resultDigits.result.rL1.rL11;\r\n        r2 = action.resultDigits.result.rL1.rL12;\r\n        r3 = action.resultDigits.result.rL1.rL13;\r\n        r4 = action.resultDigits.result.rL1.rL14;\r\n        r5 = action.resultDigits.result.rL2.rL21;\r\n        r6 = action.resultDigits.result.rL2.rL22;\r\n        r7 = action.resultDigits.result.rL2.rL23;\r\n        r8 = action.resultDigits.result.rL2.rL24;\r\n        r9 = action.resultDigits.result.rL3.rL31;\r\n        r10 = action.resultDigits.result.rL3.rL32;\r\n        r11 = action.resultDigits.result.rL3.rL33;\r\n        r12 = action.resultDigits.result.rL3.rL34;\r\n\r\n        r13 = action.resultDigits.finalResult.r.fr1;\r\n        r14 = action.resultDigits.finalResult.r.fr2;\r\n        r15 = action.resultDigits.finalResult.r.fr3;\r\n        r16 = action.resultDigits.finalResult.r.fr4;\r\n        r17 = action.resultDigits.finalResult.r.fr5;\r\n        r18 = action.resultDigits.finalResult.r.fr6;\r\n\r\n        fc1 = action.resultDigits.finalResult.c.fc1;\r\n        fc2 = action.resultDigits.finalResult.c.fc2;\r\n        fc3 = action.resultDigits.finalResult.c.fc3;\r\n        fc4 = action.resultDigits.finalResult.c.fc4;\r\n        fc5 = action.resultDigits.finalResult.c.fc5;\r\n\r\n        t1 = action.resultDigits.number.t1;\r\n        t2 = action.resultDigits.number.t2;\r\n        t3 = action.resultDigits.number.t3;\r\n        b1 = action.resultDigits.number.b1;\r\n        b2 = action.resultDigits.number.b2;\r\n        b3 = action.resultDigits.number.b3;\r\n\r\n        c1 = action.resultDigits.carry.cL1.cL11;\r\n        c2 = action.resultDigits.carry.cL1.cL12;\r\n        c4 = action.resultDigits.carry.cL2.cL21;\r\n        c5 = action.resultDigits.carry.cL2.cL22;\r\n        c7 = action.resultDigits.carry.cL3.cL31;\r\n        c8 = action.resultDigits.carry.cL3.cL32;\r\n\r\n        if(action.upperDigit === 1 && action.lowerDigit === 1){\r\n            textsLines = texts_1x1(t1, b1, r1, r2);\r\n        }else if(action.upperDigit === 2 && action.lowerDigit === 1){\r\n            textsLines = texts_2x1(t1, t2, b1, c1, r1, r2, r3);\r\n        }else if(action.upperDigit === 2 && action.lowerDigit === 2){\r\n            textsLines = texts_2x2(t1, t2, b1, b2, c1, r1, r2, r3, r5, r6, r7, r13, r14, fc1, fc2, fc3);\r\n        }else if(action.upperDigit === 3 && action.lowerDigit === 1){\r\n            textsLines = texts_3x1(t1, t2, t3, b1, c1, c2, r1, r2, r3, r4);\r\n        }else if(action.upperDigit === 3 && action.lowerDigit === 2){\r\n            textsLines = texts_3x2(t1, t2, t3, b1, b2, c1, c2, c4, c5, r1, r2, r3, r4, r5, r6, r7, r8, r13, r14, r15, r16, r17, fc1, fc2, fc3, fc4);\r\n        }else if(action.upperDigit === 3 && action.lowerDigit === 3){\r\n            textsLines = texts_3x3(t1, t2, t3, b1, b2, b3, c1, c2, c4, c5, c7, c8, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, fc1, fc2, fc3, fc4, fc5);\r\n        }\r\n\r\n        switch (action.position) {\r\n            case 0:\r\n                if(action.upperDigit === 1 && action.lowerDigit === 1){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            ones:{\r\n                                focusAction: true,\r\n                                value: r1,\r\n                            },\r\n                            tens:{\r\n                                focusAction: r2 ? true : false,\r\n                                value: r2 === 0 ? null : r2\r\n                            }\r\n                        }\r\n                    }\r\n                }else{\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            ones:{\r\n                                focusAction: true,\r\n                                value: r1\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            third: true\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b,\r\n                            third: true\r\n                        },\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    }\r\n                }\r\n            case 1:\r\n                const logic1  = action.upperDigit === 2 && action.lowerDigit === 1;\r\n                const logic2 = action.upperDigit === 2 && action.lowerDigit === 2;\r\n                if(logic1 || logic2){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            ones:{\r\n                                ...state.topResult.ones,\r\n                                focusAction: false\r\n                            },\r\n                            tens:{\r\n                                focusAction: true,\r\n                                value: r2\r\n                            },\r\n                            hundreds:{\r\n                                focusAction: r3 ? true : false,\r\n                                value: r3\r\n                            }\r\n                        }\r\n                    }\r\n                }else{\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            ones:{\r\n                                ...state.topResult.ones,\r\n                                focusAction: false\r\n                            },\r\n                            tens:{\r\n                                focusAction: true,\r\n                                value: r2\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            second: true,\r\n                            third: false\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b\r\n                        },\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    }\r\n                }\r\n            case 2:\r\n                return{\r\n                    ...state,\r\n                    topResult:{\r\n                        ...state.topResult,\r\n                        tens:{\r\n                            ...state.topResult.tens,\r\n                            focusAction: false\r\n                        },\r\n                        hundreds:{\r\n                            focusAction: true,\r\n                            value: r3\r\n                        },\r\n                        thousands:{\r\n                            focusAction: r4 ? true : false,\r\n                            value: r4,\r\n                        },\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    },\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            first: true,\r\n                            second: false\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b\r\n                        },\r\n                    }\r\n                }\r\n            case 3:\r\n                if(action.upperDigit === 2 && action.lowerDigit === 2){\r\n                    returnedObject = {\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            first: false,\r\n                            second: false\r\n                        }\r\n                    }\r\n                }else{\r\n                    returnedObject = {\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            first: false\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    topResult:{\r\n                        ...state.topResult,\r\n                        tens:{\r\n                            ...state.topResult.tens,\r\n                            focusAction: false\r\n                        },\r\n                        hundreds:{\r\n                            ...state.topResult.hundreds,\r\n                            focusAction: false\r\n                        },\r\n                        thousands:{\r\n                            ...state.topResult.thousands,\r\n                            focusAction: false\r\n                        }\r\n                    },\r\n                    middleResult:{\r\n                        ...state.middleResult,\r\n                        ones:{\r\n                            ...state.middleResult.ones,\r\n                            focusAction: true,\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    },\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...returnedObject\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b,\r\n                            third: false,\r\n                            second: true\r\n                        },\r\n                    }\r\n                }\r\n            case 4:\r\n                return{\r\n                    ...state,\r\n                    middleResult:{\r\n                        ...state.middleResult,\r\n                        ones:{\r\n                            ...state.middleResult.ones,\r\n                            focusAction: false\r\n                        },\r\n                        tens:{\r\n                            focusAction: true,\r\n                            value: r5\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    },\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            third: true\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b\r\n                        },\r\n                    }\r\n                }\r\n            case 5:\r\n                if(action.upperDigit === 2 && action.lowerDigit === 2){\r\n                    returnedObject = {\r\n                        middleResult:{\r\n                            ...state.middleResult,\r\n                            tens:{\r\n                                ...state.middleResult.tens,\r\n                                focusAction: false\r\n                            },\r\n                            hundreds:{\r\n                                focusAction: true,\r\n                                value: r6,\r\n                                carry:  null\r\n                            },\r\n                            thousands:{\r\n                                focusAction: r7 ? true:false,\r\n                                value: r7\r\n                            }\r\n                        }\r\n                    }\r\n                }else{\r\n                    returnedObject = {\r\n                        middleResult:{\r\n                            ...state.middleResult,\r\n                            tens:{\r\n                                ...state.middleResult.tens,\r\n                                focusAction: false\r\n                            },\r\n                            hundreds:{\r\n                                focusAction: true,\r\n                                value: r6\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            third: false,\r\n                            second: true\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b\r\n                        },\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    }\r\n                }\r\n            case 6:\r\n                return{\r\n                    ...state,\r\n                    middleResult:{\r\n                        ...state.middleResult,\r\n                        hundreds:{\r\n                            ...state.middleResult.hundreds,\r\n                            focusAction: false\r\n                        },\r\n                        thousands:{\r\n                            focusAction: true,\r\n                            value: r7\r\n                        },\r\n                        tenThousands:{\r\n                            focusAction: r8 ? true : false,\r\n                            value: r8,\r\n                            carry: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    },\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            second: false,\r\n                            first: true\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b\r\n                        },\r\n                    }\r\n                }\r\n            case 7:\r\n                return{\r\n                    ...state,\r\n                    middleResult:{\r\n                        ...state.middleResult,\r\n                        thousands:{\r\n                            ...state.middleResult.thousands,\r\n                            focusAction: false\r\n                        },\r\n                        tenThousands:{\r\n                            ...state.middleResult.tenThousands,\r\n                            focusAction: false\r\n                        }\r\n                    },\r\n                    bottomResult:{\r\n                        ...state.bottomResult,\r\n                        ones:{\r\n                            ...state.bottomResult.ones,\r\n                            focusAction: true,\r\n                            value: 0\r\n                        },\r\n                        tens:{\r\n                            ...state.bottomResult.tens,\r\n                            focusAction: true,\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    },\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            first: false\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b,\r\n                            second: false,\r\n                            first: true\r\n                        },\r\n                    }\r\n                }\r\n            case 8:\r\n                return{\r\n                    ...state,\r\n                    bottomResult:{\r\n                        ...state.bottomResult,\r\n                        ones:{\r\n                            ...state.bottomResult.ones,\r\n                            focusAction: false\r\n                        },\r\n                        tens:{\r\n                            ...state.bottomResult.tens,\r\n                            focusAction: false\r\n                        },\r\n                        hundreds:{\r\n                            focusAction: true,\r\n                            value: r9\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    },\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            third: true\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b\r\n                        },\r\n                    }\r\n                }\r\n            case 9:\r\n                return{\r\n                    ...state,\r\n                    bottomResult:{\r\n                        ...state.bottomResult,\r\n                        hundreds:{\r\n                            ...state.bottomResult.hundreds,\r\n                            focusAction: false,\r\n                        },\r\n                        thousands:{\r\n                            focusAction: true,\r\n                            value: r10\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    },\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            second: true,\r\n                            third: false\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b\r\n                        },\r\n                    }\r\n                }\r\n            case 10:\r\n                return{\r\n                    ...state,\r\n                    bottomResult:{\r\n                        ...state.bottomResult,\r\n                        thousands:{\r\n                            ...state.bottomResult.thousands,\r\n                            focusAction: false,\r\n                        },\r\n                        tenThousands:{\r\n                            focusAction: true,\r\n                            value: r11\r\n                        },\r\n                        hundredThousands:{\r\n                            focusAction: r12 ? true : false,\r\n                            value: r12\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    },\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            second: false,\r\n                            first: true\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b\r\n                        },\r\n                    }\r\n                }\r\n            case 11:\r\n                return{\r\n                    ...state,\r\n                    middleResult:{\r\n                        ...state.middleResult,\r\n                        hundreds:{\r\n                            ...state.middleResult.hundreds,\r\n                            focusAction: false\r\n                        },\r\n                        thousands:{\r\n                            ...state.middleResult.thousands,\r\n                            focusAction: false\r\n                        },\r\n                        tenThousands:{\r\n                            ...state.middleResult.tenThousands,\r\n                            focusAction: false\r\n                        }\r\n                    },\r\n                    bottomResult:{\r\n                        ...state.bottomResult,\r\n                        tenThousands:{\r\n                            ...state.bottomResult.tenThousands,\r\n                            focusAction: false\r\n                        },\r\n                        hundredThousands:{\r\n                            ...state.bottomResult.hundredThousands,\r\n                            focusAction: false\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    },\r\n                    focusingInput:{\r\n                        ...initialState.focusingInput\r\n                    }\r\n                }\r\n            case 12:\r\n                return{\r\n                    ...state,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        ones:{\r\n                            focusAction: true,\r\n                            value: r13\r\n                        },\r\n                        tens:{\r\n                            ...state.finalResult.tens,\r\n                            carry: fc1\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    }\r\n                }\r\n            case 13:\r\n                return{\r\n                    ...state,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        ones:{\r\n                            ...state.finalResult.ones,\r\n                            focusAction: false,\r\n                        },\r\n                        tens:{\r\n                            focusAction: true,\r\n                            value: r14,\r\n                            carry: null\r\n                        },\r\n                        hundreds:{\r\n                            ...state.finalResult.hundreds,\r\n                            carry: fc2\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    }\r\n                }\r\n            case 14:\r\n                return{\r\n                    ...state,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        tens:{\r\n                            ...state.finalResult.tens,\r\n                            focusAction: false,\r\n                        },\r\n                        hundreds:{\r\n                            focusAction: true,\r\n                            value: r15,\r\n                            carry: null\r\n                        },\r\n                        thousands:{\r\n                            ...state.finalResult.thousands,\r\n                            carry: fc3\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    }\r\n                }\r\n            case 15:\r\n                return{\r\n                    ...state,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        hundreds:{\r\n                            ...state.finalResult.hundreds,\r\n                            focusAction: false,\r\n                        },\r\n                        thousands:{\r\n                            focusAction: true,\r\n                            value: r16,\r\n                            carry: null\r\n                        },\r\n                        tenThousands:{\r\n                            ...state.finalResult.tenThousands,\r\n                            carry: fc4\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    }\r\n                }\r\n            case 16:\r\n                return{\r\n                    ...state,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        thousands:{\r\n                            ...state.finalResult.thousands,\r\n                            focusAction: false,\r\n                        },\r\n                        tenThousands:{\r\n                            focusAction: true,\r\n                            value: r17,\r\n                            carry: null\r\n                        },\r\n                        hundredThousands:{\r\n                            ...state.finalResult.hundredThousands,\r\n                            carry: fc5\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    }\r\n                }\r\n            case 17:\r\n                return{\r\n                    ...state,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        tenThousands:{\r\n                            ...state.finalResult.tenThousands,\r\n                            focusAction: false,\r\n                        },\r\n                        hundredThousands:{\r\n                            focusAction: r18 === 0? false: true,\r\n                            value: r18 === 0? null: r18,\r\n                            carry: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    }\r\n                }\r\n            case 18:\r\n                if(action.upperDigit === 1 && action.lowerDigit === 1){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            ones:{\r\n                                ...state.topResult.ones,\r\n                                focusAction: false\r\n                            },\r\n                            tens:{\r\n                                ...state.topResult.tens,\r\n                                focusAction: false\r\n                            }\r\n                        }\r\n                    }\r\n                }else if(action.upperDigit === 2 && action.lowerDigit === 1){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            tens:{\r\n                                ...state.topResult.tens,\r\n                                focusAction: false\r\n                            },\r\n                            hundreds:{\r\n                                ...state.topResult.hundreds,\r\n                                focusAction: false,\r\n                            }\r\n                        }\r\n                    }\r\n                }else if(action.upperDigit === 3 && action.lowerDigit === 1){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            hundreds:{\r\n                                ...state.topResult.hundreds,\r\n                                focusAction: false\r\n                            },\r\n                            thousands:{\r\n                                ...state.topResult.thousands,\r\n                                focusAction: false,\r\n                            }\r\n                        }\r\n                    }\r\n                }else if(action.upperDigit === 3 && action.lowerDigit === 3){\r\n                    returnedObject = {\r\n                        finalResult:{\r\n                            ...state.finalResult,\r\n                            tenThousands:{\r\n                                ...state.finalResult.tenThousands,\r\n                                carry: null\r\n                            },\r\n                            hundredThousands:{\r\n                                ...state.finalResult.hundredThousands,\r\n                                focusAction: false\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        ones: {\r\n                            ...state.finalResult.ones,\r\n                            focusAction: false,\r\n                            carry: null\r\n                        },\r\n                        tens: {\r\n                            ...state.finalResult.tens,\r\n                            focusAction: false,\r\n                            carry: null\r\n                        },\r\n                        hundreds: {\r\n                            ...state.finalResult.hundreds,\r\n                            focusAction: false,\r\n                            carry: null\r\n                        },\r\n                        thousands: {\r\n                            ...state.finalResult.thousands,\r\n                            focusAction: false,\r\n                            carry: null\r\n                        },\r\n                        tenThousands: {\r\n                            ...state.finalResult.tenThousands,\r\n                            focusAction: false,\r\n                            carry: null\r\n                        },\r\n                        hundredThousands: {\r\n                            ...state.finalResult.hundredThousands,\r\n                            focusAction: false,\r\n                            carry: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    },\r\n                    focusingInput:{\r\n                        ...initialState.focusingInput\r\n                    }\r\n                }\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n    if(action.type === actionTypes.COUNTERPREV){\r\n        const logic11 = action.upperDigit === 1 && action.lowerDigit === 1;\r\n        const logic21 = action.upperDigit === 2 && action.lowerDigit === 1;\r\n        const logic22 = action.upperDigit === 2 && action.lowerDigit === 2;\r\n        const logic31 = action.upperDigit === 3 && action.lowerDigit === 1;\r\n        const logic32 = action.upperDigit === 3 && action.lowerDigit === 2;\r\n        const logic33 = action.upperDigit === 3 && action.lowerDigit === 3;\r\n\r\n        fc1 = action.resultDigits.finalResult.c.fc1;\r\n        fc2 = action.resultDigits.finalResult.c.fc2;\r\n        fc3 = action.resultDigits.finalResult.c.fc3;\r\n        fc4 = action.resultDigits.finalResult.c.fc4;\r\n        fc5 = action.resultDigits.finalResult.c.fc5;\r\n\r\n        const newTextsObjectCreate = (texts) =>{\r\n\r\n            let valuesTextsArr, keysTextsArr, removedTextsArr;\r\n            let newTextsObj = {};\r\n\r\n            valuesTextsArr = Object.values(texts);\r\n            valuesTextsArr.pop();\r\n            removedTextsArr = [...valuesTextsArr];\r\n            keysTextsArr = Object.keys(texts);\r\n            for (let i = 0; i < removedTextsArr.length; i++) {\r\n                newTextsObj[keysTextsArr[i]] = removedTextsArr[i];\r\n            }\r\n\r\n            return newTextsObj;\r\n        }\r\n\r\n        switch (action.position) {\r\n            case 1:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                if(logic33 || logic31 || logic32 || logic21 || logic22){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            ones:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                third: false\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b,\r\n                                third: false\r\n                            },\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 2:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                if(logic33 || logic31 || logic32){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            ones:{\r\n                                ...state.topResult.ones,\r\n                                focusAction: true\r\n                            },\r\n                            tens:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                second: false,\r\n                                third: true\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b\r\n                            },\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 3:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                if(logic33 || logic32){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            tens:{\r\n                                ...state.topResult.tens,\r\n                                focusAction: true,\r\n                            },\r\n                            hundreds:{\r\n                                ...state.topResult.hundreds,\r\n                                focusAction: false,\r\n                                value: null\r\n                            },\r\n                            thousands:{\r\n                                ...state.topResult.thousands,\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                second: true,\r\n                                first: false\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b\r\n                            },\r\n                        }\r\n                    }\r\n                }else if(logic22){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            ones:{\r\n                                ...state.topResult.ones,\r\n                                focusAction: true\r\n                            },\r\n                            tens:{\r\n                                ...state.topResult.tens,\r\n                                focusAction: false,\r\n                                value: null\r\n                            },\r\n                            hundreds:{\r\n                                ...state.topResult.hundreds,\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                second: false,\r\n                                third: true\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b\r\n                            },\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 4:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                if(logic33 || logic32){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            hundreds:{\r\n                                ...state.topResult.hundreds,\r\n                                focusAction: true\r\n                            },\r\n                            thousands:{\r\n                                ...state.topResult.thousands,\r\n                                focusAction: state.topResult.thousands? true : false\r\n                            }\r\n                        },\r\n                        middleResult:{\r\n                            ...state.middleResult,\r\n                            ones:{\r\n                                ...state.middleResult.ones,\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                first: true,\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b,\r\n                                third: true,\r\n                                second: false\r\n                            },\r\n                        }\r\n                    }\r\n                }else if(logic22){\r\n                    returnedObject = {\r\n                        middleResult:{\r\n                            ...state.middleResult,\r\n                            ones:{\r\n                                ...state.middleResult.ones,\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            tens:{\r\n                                ...state.topResult.tens,\r\n                                focusAction: true\r\n                            },\r\n                            hundreds:{\r\n                                ...state.topResult.hundreds,\r\n                                focusAction: true\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                second: true,\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b,\r\n                                third: true,\r\n                                second: false\r\n                            },\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 5:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                if(logic33 || logic32){\r\n                    returnedObject = {\r\n                        middleResult:{\r\n                            ...state.middleResult,\r\n                            ones:{\r\n                                ...state.middleResult.ones,\r\n                                focusAction: true\r\n                            },\r\n                            tens:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                third: false\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b\r\n                            },\r\n                        }\r\n                    }\r\n                }else if(logic22){\r\n                    returnedObject = {\r\n                        middleResult:{\r\n                            ...state.middleResult,\r\n                            ones:{\r\n                                ...state.middleResult.ones,\r\n                                focusAction: true\r\n                            },\r\n                            tens:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                third: false,\r\n                                first: false\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b\r\n                            },\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 6:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                if(logic33 || logic32){\r\n                    returnedObject = {\r\n                        middleResult:{\r\n                            ...state.middleResult,\r\n                            tens:{\r\n                                ...state.middleResult.tens,\r\n                                focusAction: true\r\n                            },\r\n                            hundreds:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                third: true,\r\n                                second: false\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b\r\n                            },\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 7:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                return{\r\n                    ...state,\r\n                    middleResult:{\r\n                        ...state.middleResult,\r\n                        hundreds:{\r\n                            ...state.middleResult.hundreds,\r\n                            focusAction: true\r\n                        },\r\n                        thousands:{\r\n                            focusAction: false,\r\n                            value: null\r\n                        },\r\n                        tenThousands:{\r\n                            focusAction: false,\r\n                            value: null,\r\n                            carry: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter - 1,\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            second: true,\r\n                            first: false\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b\r\n                        },\r\n                    },\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 8:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                return{\r\n                    ...state,\r\n                    middleResult:{\r\n                        ...state.middleResult,\r\n                        thousands:{\r\n                            ...state.middleResult.thousands,\r\n                            focusAction: true\r\n                        },\r\n                        tenThousands:{\r\n                            ...state.middleResult.tenThousands,\r\n                            focusAction: state.middleResult.tenThousands.value? true : false\r\n                        }\r\n                    },\r\n                    bottomResult:{\r\n                        ...state.bottomResult,\r\n                        ones:{\r\n                            ...state.bottomResult.ones,\r\n                            focusAction: false,\r\n                            value: null\r\n                        },\r\n                        tens:{\r\n                            ...state.bottomResult.tens,\r\n                            focusAction: false,\r\n                            value: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter - 1,\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            first: true\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b,\r\n                            second: true,\r\n                            first: false\r\n                        },\r\n                    },\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 9:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                return{\r\n                    ...state,\r\n                    bottomResult:{\r\n                        ...state.bottomResult,\r\n                        ones:{\r\n                            ...state.bottomResult.ones,\r\n                            focusAction: true\r\n                        },\r\n                        tens:{\r\n                            ...state.bottomResult.tens,\r\n                            focusAction: true\r\n                        },\r\n                        hundreds:{\r\n                            focusAction: false,\r\n                            value: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter - 1,\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            third: false\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b\r\n                        },\r\n                    },\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 10:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                return{\r\n                    ...state,\r\n                    bottomResult:{\r\n                        ...state.bottomResult,\r\n                        hundreds:{\r\n                            ...state.bottomResult.hundreds,\r\n                            focusAction: true,\r\n                        },\r\n                        thousands:{\r\n                            focusAction: false,\r\n                            value: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter - 1,\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            second: false,\r\n                            third: true\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b\r\n                        },\r\n                    },\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 11:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                if(logic33){\r\n                    returnedObject = {\r\n                        bottomResult:{\r\n                            ...state.bottomResult,\r\n                            thousands:{\r\n                                ...state.bottomResult.thousands,\r\n                                focusAction: true,\r\n                            },\r\n                            tenThousands:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            },\r\n                            hundredThousands:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                second: true,\r\n                                first: false\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b\r\n                            },\r\n                        }\r\n                    }\r\n                }else if(logic22){\r\n                    returnedObject = {\r\n                        middleResult:{\r\n                            ...state.middleResult,\r\n                            tens:{\r\n                                ...state.middleResult.tens,\r\n                                focusAction: true\r\n                            },\r\n                            hundreds:{\r\n                                focusAction: false,\r\n                                value: null,\r\n                                carry:  null\r\n                            },\r\n                            thousands:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                first: false,\r\n                                second: false,\r\n                                third: true\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b\r\n                            },\r\n                        }\r\n                    }\r\n                }else if(logic32){\r\n                    returnedObject = {\r\n                        middleResult:{\r\n                            ...state.middleResult,\r\n                            hundreds:{\r\n                                ...state.middleResult.thousands,\r\n                                focusAction: true,\r\n                            },\r\n                            thousands:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            },\r\n                            tenThousands:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                second: true,\r\n                                first: false\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b\r\n                            },\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 12:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                if(logic33){\r\n                    returnedObject = {\r\n                        bottomResult:{\r\n                            ...state.bottomResult,\r\n                            tenThousands:{\r\n                                ...state.bottomResult.tenThousands,\r\n                                focusAction: true\r\n                            },\r\n                            hundredThousands:{\r\n                                ...state.bottomResult.hundredThousands,\r\n                                focusAction: state.bottomResult.hundredThousands.value ? true : false\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                first: true\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b,\r\n                                first: true\r\n                            },\r\n                        }\r\n                    }\r\n                }else if(logic22){\r\n                    returnedObject = {\r\n                        middleResult:{\r\n                            ...state.middleResult,\r\n                            hundreds:{\r\n                                ...state.middleResult.hundreds,\r\n                                focusAction: true\r\n                            },\r\n                            thousands:{\r\n                                ...state.middleResult.thousands,\r\n                                focusAction: state.middleResult.thousands.value ? true : false\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                second: true\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b,\r\n                                second: true\r\n                            },\r\n                        }\r\n                    }\r\n                }else if(logic32){\r\n                    returnedObject = {\r\n                        middleResult:{\r\n                            ...state.middleResult,\r\n                            thousands:{\r\n                                ...state.middleResult.thousands,\r\n                                focusAction: true\r\n                            },\r\n                            tenThousands:{\r\n                                ...state.middleResult.tenThousands,\r\n                                focusAction: state.middleResult.tenThousands.value ? true : false\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                first: true\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b,\r\n                                second: true\r\n                            },\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 13:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                return{\r\n                    ...state,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        ones:{\r\n                            focusAction: false,\r\n                            value: null\r\n                        },\r\n                        tens:{\r\n                            ...state.finalResult.tens,\r\n                            carry: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 14:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                return{\r\n                    ...state,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        ones:{\r\n                            ...state.finalResult.ones,\r\n                            focusAction: true,\r\n                        },\r\n                        tens:{\r\n                            focusAction: false,\r\n                            value: null,\r\n                            carry: fc1\r\n                        },\r\n                        hundreds:{\r\n                            ...state.finalResult.hundreds,\r\n                            carry: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 15:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                return{\r\n                    ...state,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        tens:{\r\n                            ...state.finalResult.tens,\r\n                            focusAction: true,\r\n                        },\r\n                        hundreds:{\r\n                            focusAction: false,\r\n                            value: null,\r\n                            carry: fc2\r\n                        },\r\n                        thousands:{\r\n                            ...state.finalResult.thousands,\r\n                            carry: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 16:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                return{\r\n                    ...state,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        hundreds:{\r\n                            ...state.finalResult.hundreds,\r\n                            focusAction: true,\r\n                        },\r\n                        thousands:{\r\n                            focusAction: false,\r\n                            value: null,\r\n                            carry: fc3\r\n                        },\r\n                        tenThousands:{\r\n                            ...state.finalResult.tenThousands,\r\n                            carry: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 17:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                return{\r\n                    ...state,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        thousands:{\r\n                            ...state.finalResult.thousands,\r\n                            focusAction: true,\r\n                        },\r\n                        tenThousands:{\r\n                            ...state.finalResult.tenThousands,\r\n                            focusAction: false,\r\n                            value: null,\r\n                            carry: fc4\r\n                        },\r\n                        hundredThousands:{\r\n                            ...state.finalResult.hundredThousands,\r\n                            carry: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 18:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n\r\n                if(logic11){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            ones:{\r\n                                focusAction: false,\r\n                                value: null,\r\n                            },\r\n                            tens:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...initialState.focusingInput\r\n                        }\r\n                    }\r\n                }else if(logic21){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            ones:{\r\n                                ...state.topResult.ones,\r\n                                focusAction: true\r\n                            },\r\n                            tens:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            },\r\n                            hundreds:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                second: false,\r\n                                third: true\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b\r\n                            }\r\n                        }\r\n                    }\r\n                }else if(logic22){\r\n                    returnedObject = {\r\n                        finalResult:{\r\n                            ...state.finalResult,\r\n                            hundreds:{\r\n                                ...state.finalResult.hundreds,\r\n                                focusAction: true,\r\n                            },\r\n                            thousands:{\r\n                                focusAction: false,\r\n                                value: null,\r\n                                carry: fc3\r\n                            },\r\n                            tenThousands:{\r\n                                ...state.finalResult.tenThousands,\r\n                                carry: null\r\n                            }\r\n                        }\r\n                    }\r\n                }else if(logic31){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            tens:{\r\n                                ...state.topResult.tens,\r\n                                focusAction: true\r\n                            },\r\n                            hundreds:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            },\r\n                            thousands:{\r\n                                focusAction: false,\r\n                                value: null,\r\n                            },\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                first: false,\r\n                                second: true\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b\r\n                            },\r\n                        }\r\n                    }\r\n                }else if(logic32){\r\n                    returnedObject = {\r\n                        finalResult:{\r\n                            ...state.finalResult,\r\n                            thousands:{\r\n                                ...state.finalResult.thousands,\r\n                                focusAction: true,\r\n                            },\r\n                            tenThousands:{\r\n                                focusAction: false,\r\n                                value: null,\r\n                                carry: fc4\r\n                            },\r\n                            hundredThousands:{\r\n                                ...state.finalResult.hundredThousands,\r\n                                carry: null\r\n                            }\r\n                        }\r\n                    }\r\n                }else if(logic33){\r\n                    returnedObject = {\r\n                        finalResult:{\r\n                            ...state.finalResult,\r\n                            tenThousands:{\r\n                                ...state.finalResult.tenThousands,\r\n                                focusAction: true,\r\n                            },\r\n                            hundredThousands:{\r\n                                focusAction: false,\r\n                                value: null,\r\n                                carry: fc5\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            default:\r\n                return state\r\n        }\r\n    }else{\r\n        return state\r\n    }\r\n};\r\n\r\nexport default result;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from '../actions/actions';\r\n\r\nconst initState = {\r\n    topRow: ['','',''],\r\n    bottomRow: ['','',''],\r\n    boardTitle: {\r\n        title: '',\r\n        show: false\r\n    },\r\n    counter: 0,\r\n    nextBtnHide: false,\r\n    resutltsRow: 5,\r\n    inputDisable: false,\r\n    btnHide: true,\r\n    trd: 3,\r\n    brd: 3\r\n}\r\n\r\nconst reducer = (state = initState, actions) => {\r\n    if(state.counter === 19){\r\n        return{\r\n            ...state,\r\n            counter: 0,\r\n            nextBtnHide: true\r\n        }\r\n    }\r\n\r\n    if(actions.type === actionTypes.COUNTERRESULT){\r\n        if(actions.upperDigit === 1 && actions.lowerDigit === 1){\r\n            if(state.counter === 1){\r\n                return{\r\n                    ...state,\r\n                    counter: 18,\r\n                }\r\n            }\r\n        }\r\n        if(actions.upperDigit === 2 && actions.lowerDigit === 1){\r\n            if(state.counter === 2){\r\n                return{\r\n                    ...state,\r\n                    counter: 18,\r\n                }\r\n            }\r\n        }\r\n        if(actions.upperDigit === 2 && actions.lowerDigit === 2){\r\n            switch (state.counter) {\r\n                case 2:\r\n                    return{\r\n                        ...state,\r\n                        counter: 3,\r\n                    }\r\n                case 6:\r\n                    return{\r\n                        ...state,\r\n                        counter: 11,\r\n                    }\r\n                case 16:\r\n                    return{\r\n                        ...state,\r\n                        counter: 18,\r\n                    }\r\n            \r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        if(actions.upperDigit === 3 && actions.lowerDigit === 1){\r\n            if(state.counter === 3){\r\n                return{\r\n                    ...state,\r\n                    counter: 18,\r\n                }\r\n            }\r\n        }\r\n        if(actions.upperDigit === 3 && actions.lowerDigit === 2){\r\n            if(state.counter === 7){\r\n                return{\r\n                    ...state,\r\n                    counter: 11,\r\n                }\r\n            }else if(state.counter === 17){\r\n                return{\r\n                    ...state,\r\n                    counter: 18,\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if(actions.type === actionTypes.COUNTERPREV){\r\n        if(actions.upperDigit === 1 && actions.lowerDigit === 1){\r\n            if(state.counter === 18){\r\n                return{\r\n                    ...state,\r\n                    counter: 0,\r\n                }\r\n            }\r\n        }\r\n        if(actions.upperDigit === 2 && actions.lowerDigit === 1){\r\n            if(state.counter === 18){\r\n                return{\r\n                    ...state,\r\n                    counter: 1,\r\n                }\r\n            }\r\n        }\r\n        if(actions.upperDigit === 2 && actions.lowerDigit === 2){\r\n            switch (state.counter) {\r\n                case 3:\r\n                    return{\r\n                        ...state,\r\n                        counter: 1,\r\n                    }\r\n                case 11:\r\n                    return{\r\n                        ...state,\r\n                        counter: 5,\r\n                    }\r\n                case 18:\r\n                    return{\r\n                        ...state,\r\n                        counter: 15,\r\n                    }\r\n            \r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        if(actions.upperDigit === 3 && actions.lowerDigit === 1){\r\n            if(state.counter === 18){\r\n                return{\r\n                    ...state,\r\n                    counter: 2,\r\n                }\r\n            }\r\n        }\r\n        if(actions.upperDigit === 3 && actions.lowerDigit === 2){\r\n            if(state.counter === 11){\r\n                return{\r\n                    ...state,\r\n                    counter: 6,\r\n                }\r\n            }else if(state.counter === 18){\r\n                return{\r\n                    ...state,\r\n                    counter: 16,\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const randomNumberGenerate = (digit) => {\r\n\r\n        let randomNumArray;\r\n        const randomNum1 = Math.floor(Math.random() * (9)) + 1;\r\n        const randomNum2 = Math.floor(Math.random() * (9)) + 1;\r\n        const randomNum3 = Math.floor(Math.random() * (9)) + 1;\r\n        const randomNumString1 = randomNum1.toString();\r\n        const randomNumString2 = randomNum2.toString();\r\n        const randomNumString3 = randomNum3.toString();\r\n\r\n        switch (digit) {\r\n            case 3:\r\n                randomNumArray = [randomNumString1, randomNumString2, randomNumString3];\r\n                break;\r\n            case 2:\r\n                randomNumArray = ['', randomNumString1, randomNumString2];\r\n                break;\r\n            case 1:\r\n                randomNumArray = ['', '', randomNumString1];\r\n                break;\r\n\r\n            default:\r\n                randomNumArray = [randomNumString1, randomNumString2, randomNumString3];\r\n                break;\r\n        }\r\n        \r\n        return randomNumArray\r\n    }\r\n\r\n    const startingObject = (top, bottom) => {\r\n        const t = top.join('')\r\n        const b = bottom.join('')\r\n        \r\n        return{\r\n            boardTitle: {\r\n                title: `We will multiply <span>${top[0]}${top[1]}${top[2]}</span> x <span>${bottom[0]}${bottom[1]}${bottom[2]}</span>. The answer is <span>${t * b}</span>, but that doesn’t matter. We don’t care about the answer here; we care only about how to get it. <span>Click Next</span>`,\r\n                show: true\r\n            },\r\n            nextBtnHide: false,\r\n            resutltsRow: b.length,\r\n            inputDisable: true,\r\n            btnHide: false\r\n        }\r\n    }\r\n\r\n    const getLength = (r) => {\r\n        const d = [];\r\n        r.forEach((c)=>{\r\n            if(Number(c)) d.push(c)\r\n        });\r\n        return d.length;\r\n    }\r\n\r\n    const getPosition = (p) => {\r\n        if(p === 'topRow'){\r\n            return state.topRow;\r\n        }else if(p === 'bottomRow'){\r\n            return state.bottomRow;\r\n        }\r\n    }\r\n\r\n    switch (actions.type) {\r\n        case actionTypes.KEYPRESS:\r\n            let newArrayOnPress, keys, p;\r\n            p = getPosition(actions.position);\r\n            keys = p.keys();\r\n            newArrayOnPress = p.map((el)=>{\r\n                for(const key of keys){\r\n                    if(key === actions.index){\r\n                        return actions.key\r\n                    }else{\r\n                        return el\r\n                    }\r\n                }\r\n                return el\r\n            })\r\n            return{\r\n                ...state,\r\n                [actions.position]: newArrayOnPress\r\n            }\r\n        case actionTypes.DELETEDIGIT:\r\n            let newArrayOnDelete, keysD, positionOfDigit;\r\n            positionOfDigit = getPosition(actions.position);\r\n            keysD = positionOfDigit.keys();\r\n            newArrayOnDelete = positionOfDigit.map((el)=>{\r\n                for(const key of keysD){\r\n                    if(key === actions.index){\r\n                        return ''\r\n                    }else{\r\n                        return el\r\n                    }\r\n                }\r\n                return el\r\n            })\r\n            return{\r\n                ...state,\r\n                [actions.position]: newArrayOnDelete\r\n            }\r\n        case actionTypes.RANDOM_NUMBER:\r\n            let randomNumArray = randomNumberGenerate(actions.digitCount);\r\n            return{\r\n                ...state,\r\n                [actions.rowType]: randomNumArray\r\n            }\r\n        case actionTypes.INPUT_NUMBER:\r\n            return{\r\n                ...state,\r\n                [actions.rowPosition]: actions.newNumbers\r\n            }\r\n        case actionTypes.START:\r\n            const start = startingObject(state.topRow, state.bottomRow)\r\n            return{\r\n                ...state,\r\n                ...start,\r\n            }\r\n        case actionTypes.GENERATEONSTART:\r\n            let topRowNew, bottomRowNew;\r\n            if(getLength(state.topRow) > 0){\r\n                topRowNew = randomNumberGenerate(getLength(state.topRow))\r\n            }else{\r\n                topRowNew = randomNumberGenerate(state.trd)\r\n            }\r\n            if(getLength(state.bottomRow) > 0){\r\n                bottomRowNew = randomNumberGenerate(getLength(state.bottomRow))\r\n            }else{\r\n                bottomRowNew = randomNumberGenerate(state.brd)\r\n            }\r\n            if(getLength(state.bottomRow) === 0 && getLength(state.topRow) > getLength(state.bottomRow)){\r\n                topRowNew = randomNumberGenerate(3)\r\n                bottomRowNew = randomNumberGenerate(3)\r\n            }\r\n            const startOnGen = startingObject(topRowNew, bottomRowNew)\r\n            return{\r\n                ...state,\r\n                topRow: topRowNew,\r\n                bottomRow: bottomRowNew,\r\n                ...startOnGen\r\n            }\r\n        case actionTypes.END:\r\n            return{\r\n                ...state,\r\n                topRow: ['','',''],\r\n                bottomRow: ['','',''],\r\n                boardTitle: {\r\n                    ...state.boardTitle,\r\n                    show: false\r\n                },\r\n                counter: 0,\r\n                resutltsRow: 5,\r\n                inputDisable: false,\r\n                btnHide: true,\r\n                trd: getLength(state.topRow),\r\n                brd: getLength(state.bottomRow)\r\n            }\r\n        case actionTypes.COUNTER:\r\n            return{\r\n                ...state,\r\n                counter: state.counter + 1,\r\n            }\r\n        case actionTypes.COUNTERPREV:\r\n            if(state.counter === 0){\r\n                return{\r\n                    ...state,\r\n                    topRow: ['','',''],\r\n                    bottomRow: ['','',''],\r\n                    boardTitle: {\r\n                        ...state.boardTitle,\r\n                        show: false\r\n                    },\r\n                    counter: 0,\r\n                    resutltsRow: 5,\r\n                    inputDisable: false,\r\n                    btnHide: true\r\n                }\r\n            }else{\r\n                return{\r\n                    ...state,\r\n                    counter: state.counter - 1,\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actions';\r\n\r\nconst initialState = {\r\n    topLine:{\r\n        ones: {focusAction: false, value: null},\r\n        tens: {focusAction: false, value: null},\r\n        hundreds: {focusAction: false, value: null},\r\n        thousands: {focusAction: false, value: null},\r\n        tenThousands: {focusAction: false, value: null},\r\n        hundredThousands: {focusAction: false, value: null}\r\n    },\r\n    middleLine:{\r\n        ones: {focusAction: false, value: null},\r\n        tens: {focusAction: false, value: null},\r\n        hundreds: {focusAction: false, value: null},\r\n        thousands: {focusAction: false, value: null},\r\n        tenThousands: {focusAction: false, value: null},\r\n        hundredThousands: {focusAction: false, value: null}\r\n    },\r\n    bottomLine:{\r\n        ones: {focusAction: false, value: null},\r\n        tens: {focusAction: false, value: null},\r\n        hundreds: {focusAction: false, value: null},\r\n        thousands: {focusAction: false, value: null},\r\n        tenThousands: {focusAction: false, value: null},\r\n        hundredThousands: {focusAction: false, value: null}\r\n    }\r\n};\r\n\r\nconst carry = (state = initialState, action)=>{\r\n    if(action.type === actionTypes.END){\r\n        return initialState;\r\n    }\r\n    let returnedObject = initialState;\r\n    const stepsFn = (obj) => {\r\n        return {\r\n            ...initialState,\r\n            [obj.line] : {\r\n                ...initialState[obj.line],\r\n                [obj.focusPos] : {\r\n                    focusAction: obj.carryNumb?true:false,\r\n                    value: obj.carryNumb\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if(action.type === actionTypes.COUNTERCARRY){\r\n\r\n        switch (action.position) {\r\n            case 0:\r\n                if(action.upperDigit === 1 && action.lowerDigit === 1){\r\n                    returnedObject = initialState;\r\n                }else{\r\n                    returnedObject = stepsFn({\r\n                        line: 'bottomLine',\r\n                        focusPos: 'tens',\r\n                        carryNumb: action.carryNumbers.cL1.cL11\r\n                    });\r\n                }\r\n                return returnedObject;\r\n            case 1:\r\n                const logic1  = action.upperDigit === 2 && action.lowerDigit === 1;\r\n                const logic2 = action.upperDigit === 2 && action.lowerDigit === 2;\r\n                if(logic1 || logic2){\r\n                    returnedObject = initialState;\r\n                }else{\r\n                    returnedObject = stepsFn({\r\n                        line: 'bottomLine',\r\n                        focusPos: 'hundreds',\r\n                        carryNumb: action.carryNumbers.cL1.cL12\r\n                    })\r\n                }\r\n                return returnedObject;\r\n            case 2:\r\n                return initialState\r\n            case 4:\r\n                return stepsFn({\r\n                    line: 'middleLine',\r\n                    focusPos: 'hundreds',\r\n                    carryNumb: action.carryNumbers.cL2.cL21\r\n                })\r\n            case 5:\r\n                if(action.upperDigit === 2 && action.lowerDigit === 2){\r\n                    returnedObject = initialState;\r\n                }else{\r\n                    returnedObject = stepsFn({\r\n                        line: 'middleLine',\r\n                        focusPos: 'thousands',\r\n                        carryNumb: action.carryNumbers.cL2.cL22\r\n                    })\r\n                }\r\n                return returnedObject\r\n            case 6:\r\n                return initialState\r\n            case 8:\r\n                return stepsFn({\r\n                    line: 'topLine',\r\n                    focusPos: 'thousands',\r\n                    carryNumb: action.carryNumbers.cL3.cL31\r\n                })\r\n            case 9:\r\n                return stepsFn({\r\n                    line: 'topLine',\r\n                    focusPos: 'tenThousands',\r\n                    carryNumb: action.carryNumbers.cL3.cL32\r\n                })\r\n            case 10:\r\n                return initialState\r\n        \r\n            default:\r\n                return state\r\n        }\r\n\r\n    }\r\n    \r\n    if(action.type === actionTypes.COUNTERPREV){\r\n        const logic11 = action.upperDigit === 1 && action.lowerDigit === 1;\r\n        const logic21 = action.upperDigit === 2 && action.lowerDigit === 1;\r\n        const logic22 = action.upperDigit === 2 && action.lowerDigit === 2;\r\n        const logic31 = action.upperDigit === 3 && action.lowerDigit === 1;\r\n        const logic32 = action.upperDigit === 3 && action.lowerDigit === 2;\r\n        const logic33 = action.upperDigit === 3 && action.lowerDigit === 3;\r\n\r\n        let c1, c2, c3, c4, c5, c6;\r\n\r\n        c1 = action.resultDigits.carry.cL1.cL11;\r\n        c2 = action.resultDigits.carry.cL1.cL12;\r\n        c3 = action.resultDigits.carry.cL2.cL21;\r\n        c4 = action.resultDigits.carry.cL2.cL22;\r\n        c5 = action.resultDigits.carry.cL3.cL31;\r\n        c6 = action.resultDigits.carry.cL3.cL32;\r\n\r\n        switch (action.position){\r\n            case 1:\r\n                return initialState\r\n            case 2:\r\n                if(logic11){\r\n                    returnedObject = initialState;\r\n                }else if(logic33 || logic32 || logic31){\r\n                    returnedObject = stepsFn({\r\n                        line: 'bottomLine',\r\n                        focusPos: 'tens',\r\n                        carryNumb: c1\r\n                    });\r\n                }\r\n                return returnedObject;\r\n            case 3:\r\n                if(logic21 || logic22){\r\n                    returnedObject = initialState;\r\n                }else if(logic33 || logic32 || logic31){\r\n                    returnedObject = stepsFn({\r\n                        line: 'bottomLine',\r\n                        focusPos: 'hundreds',\r\n                        carryNumb: c2\r\n                    })\r\n                }\r\n                return returnedObject;\r\n            case 5:\r\n                return initialState\r\n            case 6:\r\n                return stepsFn({\r\n                    line: 'middleLine',\r\n                    focusPos: 'hundreds',\r\n                    carryNumb: c3\r\n                })\r\n            case 7:\r\n                if(logic22){\r\n                    returnedObject = initialState;\r\n                }else if(logic33){\r\n                    returnedObject = stepsFn({\r\n                        line: 'middleLine',\r\n                        focusPos: 'thousands',\r\n                        carryNumb: c4\r\n                    })\r\n                }\r\n                return returnedObject\r\n            case 9:\r\n                return initialState\r\n            case 10:\r\n                if(logic33){\r\n                    return stepsFn({\r\n                        line: 'topLine',\r\n                        focusPos: 'thousands',\r\n                        carryNumb: c5\r\n                    })\r\n                }else if(logic32){\r\n                    return stepsFn({\r\n                        line: 'middleLine',\r\n                        focusPos: 'hundreds',\r\n                        carryNumb: c3\r\n                    })\r\n                }\r\n                return returnedObject\r\n            case 11:\r\n                if(logic33){\r\n                    return stepsFn({\r\n                        line: 'topLine',\r\n                        focusPos: 'tenThousands',\r\n                        carryNumb: c6\r\n                    })\r\n                }else if(logic32){\r\n                    return stepsFn({\r\n                        line: 'middleLine',\r\n                        focusPos: 'thousands',\r\n                        carryNumb: c4\r\n                    })\r\n                }\r\n                return returnedObject\r\n            default:\r\n                return state\r\n        }\r\n    }else{\r\n        return state\r\n    }\r\n\r\n};\r\n\r\nexport default carry;","const texts_1x1 = (t1, b1, r1, r2) => {\r\n\r\n    return [\r\n        {\r\n            text: `${b1} x ${t1} <br> = ${r2}${r1}`\r\n        },\r\n        {\r\n            text: `2----`\r\n        }\r\n    ]\r\n}\r\n\r\nexport default texts_1x1;","let emptySpaceText = 'Nothing';\r\n\r\nconst texts_2x1 = (t1, t2, b1, cr1, r1, r2, r3) => {\r\n\r\n    let c1;\r\n\r\n    c1 = cr1 ? cr1 : emptySpaceText;\r\n\r\n    return [\r\n        {\r\n            text: `Carries are ${c1}`\r\n        },\r\n        {\r\n            text: `2------------------`\r\n        },\r\n        {\r\n            text: `3------------------`\r\n        }\r\n    ]\r\n}\r\n\r\nexport default texts_2x1;","let emptySpaceText = 'Nothing';\r\n\r\nconst texts_2x2 = (t1, t2, b1, b2, cr1, cr4, r1, r2, r3, r5, r6, r7, r13, r14, r15, r16, fcr1, fcr2, fcr3) => {\r\n\r\n    let c1, c4, fc1, fc2, fc3;\r\n\r\n    c1 = cr1 ? cr1 : emptySpaceText;\r\n    c4 = cr4 ? cr4 : emptySpaceText;\r\n\r\n    fc1 = fcr1 ? fcr1 : emptySpaceText;\r\n    fc2 = fcr2 ? fcr2 : emptySpaceText;\r\n    fc3 = fcr3 ? fcr3 : emptySpaceText;\r\n\r\n    return [\r\n        {\r\n            text: `Carries are ${c1}, ${c4}, ${fc1}, ${fc2}, ${fc3}`\r\n        },\r\n        {\r\n            text: `2------------------`\r\n        },\r\n        {\r\n            text: `3------------------`\r\n        },\r\n        {\r\n            text: `4------------------`\r\n        },\r\n        {\r\n            text: `5------------------`\r\n        },\r\n        {\r\n            text: `6------------------`\r\n        },\r\n        {\r\n            text: `7------------------`\r\n        },\r\n        {\r\n            text: `8------------------`\r\n        },\r\n        {\r\n            text: `9------------------`\r\n        },\r\n        {\r\n            text: `10------------------`\r\n        },\r\n        {\r\n            text: `11------------------`\r\n        },\r\n        {\r\n            text: `12------------------`\r\n        }\r\n    ]\r\n}\r\n\r\nexport default texts_2x2;","let emptySpaceText = 'Nothing';\r\n\r\nconst texts_3x1 = (t1, t2, t3, b1, cr1, cr2, r1, r2, r3, r4) => {\r\n\r\n    let c1, c2;\r\n\r\n    c1 = cr1 ? cr1 : emptySpaceText;\r\n    c2 = cr2 ? cr2 : emptySpaceText;\r\n\r\n    return [\r\n        {\r\n            text: `Carries are ${c1}, ${c2}`\r\n        },\r\n        {\r\n            text: `2------------------`\r\n        },\r\n        {\r\n            text: `3------------------`\r\n        },\r\n        {\r\n            text: `4------------------`\r\n        },\r\n        {\r\n            text: `5------------------`\r\n        },\r\n        {\r\n            text: `6------------------`\r\n        },\r\n        {\r\n            text: `7------------------`\r\n        },\r\n        {\r\n            text: `8------------------`\r\n        },\r\n        {\r\n            text: `9------------------`\r\n        },\r\n        {\r\n            text: `10------------------`\r\n        },\r\n        {\r\n            text: `11------------------`\r\n        },\r\n        {\r\n            text: `12------------------`\r\n        }\r\n    ]\r\n}\r\n\r\nexport default texts_3x1;","let emptySpaceText = 'Nothing';\r\n\r\nconst texts_3x2 = (t1, t2, t3, b1, b2, cr1, cr2, cr4, cr5, r1, r2, r3, r4, r5, r6, r7, r8, r13, r14, r15, r16, r17, fcr1, fcr2, fcr3, fcr4) => {\r\n\r\n    let c1, c2, c4, c5, fc1, fc2, fc3, fc4;\r\n\r\n    c1 = cr1 ? cr1 : emptySpaceText;\r\n    c2 = cr2 ? cr2 : emptySpaceText;\r\n    c4 = cr4 ? cr4 : emptySpaceText;\r\n    c5 = cr5 ? cr5 : emptySpaceText;\r\n\r\n    fc1 = fcr1 ? fcr1 : emptySpaceText;\r\n    fc2 = fcr2 ? fcr2 : emptySpaceText;\r\n    fc3 = fcr3 ? fcr3 : emptySpaceText;\r\n    fc4 = fcr4 ? fcr4 : emptySpaceText;\r\n\r\n    return [\r\n        {\r\n            text: `Carries ${c1} ${c2} ${c4} ${c5} ${fc1} ${fc2} ${fc3} ${fc4}`\r\n        },\r\n        {\r\n            text: `2------------------`\r\n        },\r\n        {\r\n            text: `3------------------`\r\n        },\r\n        {\r\n            text: `4------------------`\r\n        },\r\n        {\r\n            text: `5------------------`\r\n        },\r\n        {\r\n            text: `6------------------`\r\n        },\r\n        {\r\n            text: `7------------------`\r\n        },\r\n        {\r\n            text: `8------------------`\r\n        },\r\n        {\r\n            text: `9------------------`\r\n        },\r\n        {\r\n            text: `10------------------`\r\n        },\r\n        {\r\n            text: `11------------------`\r\n        },\r\n        {\r\n            text: `12------------------`\r\n        },\r\n        {\r\n            text: `13------------------`\r\n        },\r\n        {\r\n            text: `14------------------`\r\n        },\r\n        {\r\n            text: `15------------------`\r\n        },\r\n        {\r\n            text: `16------------------`\r\n        },\r\n        {\r\n            text: `17------------------`\r\n        },\r\n        {\r\n            text: `18------------------`\r\n        },\r\n        {\r\n            text: `19-------------END`\r\n        }\r\n    ]\r\n}\r\n\r\nexport default texts_3x2;","let emptySpaceText = 'Nothing';\r\n\r\nconst texts_3x3 = (t1, t2, t3, b1, b2, b3, cr1, cr2, cr4, cr5, cr7, cr8, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, fcr1, fcr2, fcr3, fcr4, fcr5) => {\r\n\r\n    let c1, c2, c4, c5, c7, c8, fc1, fc2, fc3, fc4, fc5;\r\n\r\n    c1 = cr1 ? cr1 : emptySpaceText;\r\n    c2 = cr2 ? cr2 : emptySpaceText;\r\n    c4 = cr4 ? cr4 : emptySpaceText;\r\n    c5 = cr5 ? cr5 : emptySpaceText;\r\n    c7 = cr7 ? cr7 : emptySpaceText;\r\n    c8 = cr8 ? cr8 : emptySpaceText;\r\n\r\n    fc1 = fcr1 ? fcr1 : emptySpaceText;\r\n    fc2 = fcr2 ? fcr2 : emptySpaceText;\r\n    fc3 = fcr3 ? fcr3 : emptySpaceText;\r\n    fc4 = fcr4 ? fcr4 : emptySpaceText;\r\n    fc5 = fcr5 ? fcr5 : emptySpaceText;\r\n\r\n    return [\r\n        {\r\n            text: `Carries ${c1}, ${c2}, ${c4}, ${c5}, ${c7}, ${c8}, ${fc1}, ${fc2}, ${fc3}, ${fc4}, ${fc5}`\r\n        },\r\n        {\r\n            text: `2-Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.`\r\n        },\r\n        {\r\n            text: `3Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.`\r\n        },\r\n        {\r\n            text: `4Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.`\r\n        },\r\n        {\r\n            text: `5Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.`\r\n        },\r\n        {\r\n            text: `6Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.`\r\n        },\r\n        {\r\n            text: `7Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.`\r\n        },\r\n        {\r\n            text: `8Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.`\r\n        },\r\n        {\r\n            text: `9Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.`\r\n        },\r\n        {\r\n            text: `10Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.`\r\n        },\r\n        {\r\n            text: `11------------------`\r\n        },\r\n        {\r\n            text: `12------------------`\r\n        },\r\n        {\r\n            text: `13------------------`\r\n        },\r\n        {\r\n            text: `14------------------`\r\n        },\r\n        {\r\n            text: `15------------------`\r\n        },\r\n        {\r\n            text: `16------------------`\r\n        },\r\n        {\r\n            text: `17------------------`\r\n        },\r\n        {\r\n            text: `18------------------`\r\n        },\r\n        {\r\n            text: `19-------------END`\r\n        },\r\n    ]\r\n}\r\n\r\nexport default texts_3x3;","const carryNumFn = (prev, p1, p2) => {\r\n    let carryNumber;\r\n    let carryNum;\r\n    const cNumFn = (carryNumber) =>{\r\n        if(carryNumber.toString().length > 1){\r\n            carryNum = Number(carryNumber.toString().slice(0,1))\r\n        }else{\r\n            carryNum = null;\r\n        }\r\n        return carryNum;\r\n    }\r\n    if(prev){\r\n        carryNumber = (p1 * p2) + prev;\r\n        carryNum = cNumFn(carryNumber);\r\n    }else{\r\n        carryNumber = p1 * p2;\r\n        carryNum = cNumFn(carryNumber);\r\n    }\r\n    return carryNum;\r\n}\r\n\r\nexport default carryNumFn;","const resultNumFn = (prev, p1, p2) => {\r\n    let resultNumber;\r\n    let resultNum;\r\n    let result;\r\n    const rNumFn = (resultNumber) =>{\r\n        if(resultNumber.toString().length > 1){\r\n            resultNum = Number(resultNumber.toString().slice(1));\r\n        }else{\r\n            resultNum = resultNumber;\r\n        }\r\n        return resultNum;\r\n    }\r\n    if(prev){\r\n        resultNumber = (p1 * p2) + prev;\r\n        result = rNumFn(resultNumber);\r\n    }else{\r\n        resultNumber = p1 * p2;\r\n        result = rNumFn(resultNumber);\r\n    }\r\n    return result;\r\n}\r\nexport default resultNumFn;","const finalResultFn = (carry, n1, n2, n3) =>{\r\n    let resultNumber;\r\n    let resultNum;\r\n    let carryingNum;\r\n    const rNumFn = (resultNumber) =>{\r\n        if(resultNumber.toString().length > 1){\r\n            resultNum = Number(resultNumber.toString().slice(1));\r\n            carryingNum = Number(resultNumber.toString().slice(0,1));\r\n        }else{\r\n            resultNum = resultNumber;\r\n        }\r\n    }\r\n    if(carry){\r\n        resultNumber = n1 + n2 + n3 + carry;\r\n        rNumFn(resultNumber);\r\n    }else{\r\n        resultNumber = n1 + n2 + n3;\r\n        rNumFn(resultNumber);\r\n    }\r\n    return {resultNum,carryingNum};\r\n}\r\n\r\nexport default finalResultFn;","import * as actionTypes from '../actions/actions';\r\nimport carryNumFn from './Utility/carry';\r\nimport resultNumFn from './Utility/result';\r\nimport finalResultFn from './Utility/finalResult';\r\n\r\nconst initialState = {\r\n    answer : {}\r\n};\r\n\r\nconst multiplication = (state = initialState, action)=>{\r\n    if(action.type === actionTypes.START || action.type === actionTypes.GENERATEDONSTART){\r\n        \r\n        const t1 = Number(action.topRow[2]);\r\n        const t2 = Number(action.topRow[1]);\r\n        const t3 = Number(action.topRow[0]);\r\n        const b1 = Number(action.bottomRow[2]);\r\n        const b2 = Number(action.bottomRow[1]);\r\n        const b3 = Number(action.bottomRow[0]);\r\n\r\n        const c1 = carryNumFn(null, t1, b1);\r\n        const c2 = carryNumFn(c1, t2, b1);\r\n        const c3 = carryNumFn(c2, t3, b1);\r\n        const c4 = carryNumFn(null, t1, b2);\r\n        const c5 = carryNumFn(c4, t2, b2);\r\n        const c6 = carryNumFn(c5, t3, b2);\r\n        const c7 = carryNumFn(null, t1, b3);\r\n        const c8 = carryNumFn(c7, t2, b3);\r\n        const c9 = carryNumFn(c8, t3, b3);\r\n\r\n        const r1 = resultNumFn(null, t1, b1);\r\n        const r2 = resultNumFn(c1, t2, b1);\r\n        const r3 = resultNumFn(c2, t3, b1);\r\n        const r4 = c3;\r\n        const r5 = resultNumFn(null, t1, b2);\r\n        const r6 = resultNumFn(c4, t2, b2);\r\n        const r7 = resultNumFn(c5, t3, b2);\r\n        const r8 = c6;\r\n        const r9 = resultNumFn(null, t1, b3);\r\n        const r10 = resultNumFn(c7, t2, b3);\r\n        const r11 = resultNumFn(c8, t3, b3);\r\n        const r12 = c9;\r\n\r\n        const fR1 = finalResultFn(null, r1, 0, 0);\r\n        const fR2 = finalResultFn(fR1.carryingNum, r2, r5, 0);\r\n        const fR3 = finalResultFn(fR2.carryingNum, r3, r6, r9);\r\n        const fR4 = finalResultFn(fR3.carryingNum, r4, r7, r10);\r\n        const fR5 = finalResultFn(fR4.carryingNum, 0, r8, r11);\r\n        const fR6 = finalResultFn(fR5.carryingNum, 0, 0, r12);\r\n\r\n        return {\r\n            ...state,\r\n            answer:{\r\n                ...state.answer,\r\n                number : {\r\n                    t1: t1,\r\n                    t2: t2,\r\n                    t3: t3,\r\n                    b1: b1,\r\n                    b2: b2,\r\n                    b3: b3\r\n                },\r\n                carry : {\r\n                    cL1 : {\r\n                        cL11: c1,\r\n                        cL12: c2,\r\n                        cL13: c3\r\n                    },\r\n                    cL2 : {\r\n                        cL21: c4,\r\n                        cL22: c5,\r\n                        cL23: c6\r\n                    },\r\n                    cL3 : {\r\n                        cL31: c7,\r\n                        cL32: c8,\r\n                        cL33: c9\r\n                    }\r\n                },\r\n                result : {\r\n                    rL1 : {\r\n                        rL11: r1,\r\n                        rL12: r2,\r\n                        rL13: r3,\r\n                        rL14: r4,\r\n                    },\r\n                    rL2 : {\r\n                        rL21: r5,\r\n                        rL22: r6,\r\n                        rL23: r7,\r\n                        rL24: r8,\r\n                    },\r\n                    rL3 : {\r\n                        rL31: r9,\r\n                        rL32: r10,\r\n                        rL33: r11,\r\n                        rL34: r12,\r\n                    }\r\n                },\r\n                finalResult:{\r\n                    r:{\r\n                        fr1: fR1.resultNum,\r\n                        fr2: fR2.resultNum,\r\n                        fr3: fR3.resultNum,\r\n                        fr4: fR4.resultNum,\r\n                        fr5: fR5.resultNum,\r\n                        fr6: fR6.resultNum,\r\n                    },\r\n                    c:{\r\n                        fc1: fR1.carryingNum,\r\n                        fc2: fR2.carryingNum,\r\n                        fc3: fR3.carryingNum,\r\n                        fc4: fR4.carryingNum,\r\n                        fc5: fR5.carryingNum\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }else{\r\n        return state\r\n    }\r\n};\r\n\r\nexport default multiplication;","import * as actionTypes from '../actions/actions';\r\n\r\nconst initialState = {\r\n    inputFocusTop:{\r\n        0: true,\r\n        1: false,\r\n        2: false\r\n    },\r\n    inputFocusBottom:{\r\n        0: false,\r\n        1: false,\r\n        2: false\r\n    }\r\n};\r\nconst falsyObject = {\r\n    inputFocusTop:{\r\n        0: false,\r\n        1: false,\r\n        2: false\r\n    },\r\n    inputFocusBottom:{\r\n        0: false,\r\n        1: false,\r\n        2: false\r\n    }\r\n}\r\nconst numberPad = (state = initialState, action)=>{\r\n    if(action.type === actionTypes.START || action.type === actionTypes.GENERATEDONSTART){\r\n        return {\r\n            ...falsyObject\r\n        }\r\n    }\r\n    switch (action.type) {\r\n        case actionTypes.INPUTFOCUS:\r\n            return {\r\n                ...falsyObject,\r\n                [action.position]:{\r\n                    ...falsyObject[action.position],\r\n                    [action.current] : true\r\n                }\r\n            }\r\n        case actionTypes.KEYPRESSMULTI:\r\n            return {\r\n                ...falsyObject,\r\n                inputFocusBottom:{\r\n                    ...falsyObject.inputFocusBottom,\r\n                    0: true\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    };\r\n};\r\n\r\nexport default numberPad;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {combineReducers, createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\n\nimport numbers from './store/reducers/numbers';\nimport carrys from './store/reducers/carry';\nimport results from './store/reducers/results';\nimport multiplication from './store/reducers/multiplication';\nimport numberPad from './store/reducers/numberPad';\n\nconst rootReducer = combineReducers({\n  number : numbers,\n  carry : carrys,\n  result : results,\n  multi: multiplication,\n  numpad: numberPad\n})\n\n\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}