{"version":3,"sources":["containers/ExplainationBoard/ExplainationBoard.module.css","components/Button/Button.module.css","containers/ActionButtons/Buttons.module.css","containers/NumberBoard/Board.module.css","components/Button/Button.js","store/actions/actions.js","containers/ActionButtons/Buttons.js","store/actions/numberFn.js","containers/ExplainationBoard/ExplainationBoard.js","components/BoardHeaderRow/Row.js","components/BoardCarryRow/Row.js","components/BoardResultsRow/Row.js","containers/NumberBoard/Board.js","containers/Layout/Layout.js","App.js","reportWebVitals.js","store/reducers/numbers.js","store/reducers/carry.js","store/reducers/Utility/result.js","store/reducers/results.js","index.js","containers/Layout/Layout.module.css"],"names":["module","exports","Button","props","className","classNames","btn","onClick","btnClick","children","RANDOM_NUMBER","INPUT_NUMBER","START","END","COUNTER","connect","state","tR","number","topRow","bR","bottomRow","c","counter","nextBtn","nextBtnHide","fR","result","finalResult","dispatch","random","d","fn","type","actionTypes","digitCount","rowType","startMulti","endMulti","countSteps","carry","p","t","b","f","position","useState","btnHide","setBtnHide","allInputs","document","querySelectorAll","container","inputCheck","forEach","e","disabled","alert","title","boardTitle","texts","allTexts","inner","text","dangerouslySetInnerHTML","__html","show","Object","values","map","i","Row","row","mobile","brt","classes","color","c1","brc","c2","c3","style","numbers","hundredThousands","focusAction","backgroundColor","value","tenThousands","thousands","hundreds","tens","ones","results","r1","r2","r3","brp","r4","blank","blankH","fRC","frCarry","zero","zeroO","tLofCarry","topLine","mLofCarry","middleLine","bLofCarry","bottomLine","topResult","middleResult","bottomResult","focusInput","focusingInput","input","newNum","newNumbers","rowPosition","inputChange","tb","changeFN","target","length","slice","old","digits","id","onChange","max","first","second","third","brd","Layout","buttons","resultSection","explaination","board","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","reducer","actions","randomNumArray","randomNum1","Math","floor","randomNum2","randomNum3","randomNumString1","toString","randomNumString2","randomNumString3","join","initialState","action","carryNumFn","prev","p1","p2","carryNumber","carryNum","cNumFn","Number","stepsFn","obj","line","focusPos","carryNumb","resultNumFn","resultNumber","resultNum","carryingNum","rNumFn","resultNumb","n1","n2","n3","finalResultNum","finalResultFn","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","rootReducer","combineReducers","carrys","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.66602bac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ExplainationBoard_container__3g7PE\",\"inner\":\"ExplainationBoard_inner__F6iLu\",\"text\":\"ExplainationBoard_text__2yJMS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__2mB2p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Buttons_container__1cSAn\",\"randomDigitContainer\":\"Buttons_randomDigitContainer__jWqI6\",\"selections\":\"Buttons_selections__3rfjF\",\"selectOption\":\"Buttons_selectOption__1hLs4\",\"active\":\"Buttons_active__3P5aW\",\"generate\":\"Buttons_generate__3ilUl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Board_container__2I5Ib\",\"inner\":\"Board_inner__2ui33\",\"row\":\"Board_row__18vsI\",\"brt\":\"Board_brt__xPrsW\",\"brc\":\"Board_brc__3n5cg\",\"brd\":\"Board_brd__3DKRt\",\"brp\":\"Board_brp__35wCz\",\"title\":\"Board_title__19QT0\",\"carry\":\"Board_carry__228Lj\",\"c1\":\"Board_c1__2Pkos\",\"c2\":\"Board_c2__Ku30P\",\"c3\":\"Board_c3__1lw3n\",\"digits\":\"Board_digits__2eP5W\",\"results\":\"Board_results__2jIgY\",\"r1\":\"Board_r1__1M1AW\",\"r2\":\"Board_r2__IUv_C\",\"r3\":\"Board_r3__3b8xK\",\"r4\":\"Board_r4__3y_96\",\"frCarry\":\"Board_frCarry__3N2r0\",\"mobile\":\"Board_mobile__2K3xC\"};","import React from 'react';\r\nimport classNames from './Button.module.css';\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <div className={classNames.btn}>\r\n            <button onClick={props.btnClick}> {props.children} </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Button;","export const RANDOM_NUMBER = 'RANDOM_NUMBER';\r\nexport const INPUT_NUMBER = 'INPUT_NUMBER';\r\nexport const START = 'START';\r\nexport const END = 'END';\r\nexport const COUNTER = 'COUNTER';\r\nexport const COUNTERCARRY = 'COUNTERCARRY';\r\nexport const COUNTERRESULT = 'COUNTERRESULT';","import React, { useState } from \"react\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport classNames from \"./Buttons.module.css\";\r\nimport {connect} from 'react-redux';\r\nimport * as reduxFunctions from '../../store/actions/index';\r\n\r\nconst Buttons = (props) => {\r\n  const [btnHide, setBtnHide] = useState(true);\r\n  const allInputs = document.querySelectorAll('#inputs');\r\n\r\n  const starting = () => {\r\n    let inputCheck = true;\r\n    props.tR.forEach(e => {\r\n      if(e === ''){\r\n        inputCheck = false;\r\n      }\r\n    });\r\n    props.bR.forEach(e => {\r\n      if(e === ''){\r\n        inputCheck = false;\r\n      }\r\n    });\r\n\r\n    if(inputCheck){\r\n      allInputs.forEach(c=>{\r\n        c.disabled = true;\r\n      })\r\n      setBtnHide(false);\r\n      props.startMulti();\r\n    }else{\r\n      alert('Please fill out all the inputs')\r\n    }\r\n  }\r\n\r\n\r\n  const ending = () => {\r\n    allInputs.forEach(c=>{\r\n      c.disabled = false;\r\n    })\r\n    setBtnHide(true);\r\n    props.endMulti();\r\n  }\r\n\r\n  const setTopAndBelowItems = () => {\r\n    props.random(3, 'topRow');\r\n    props.random(3, 'bottomRow');\r\n  };\r\n\r\n  const nextSteps = () => {\r\n    props.countSteps();\r\n    props.carry(props.c, props.tR, props.bR);\r\n    props.result(props.c, props.tR, props.bR);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={classNames.container}>\r\n        {btnHide ? <>\r\n        <Button btnClick={setTopAndBelowItems}>Random</Button>\r\n        <Button btnClick={starting}>Start</Button>\r\n        </>\r\n        : <>\r\n        <Button btnClick={ending}>End</Button>\r\n        {!props.nextBtn? <Button btnClick={nextSteps}>Next</Button> : null}\r\n        </>\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nconst mapStatetoProps = state => {\r\n  return{\r\n      tR: state.number.topRow,\r\n      bR: state.number.bottomRow,\r\n      c: state.number.counter,\r\n      nextBtn: state.number.nextBtnHide,\r\n      fR: state.result.finalResult\r\n  }\r\n}\r\n\r\nconst mapDispatchtoProps = dispatch => {\r\n  return{\r\n      random: (d, fn) => dispatch(reduxFunctions.randomNumberGenerate(d, fn)),\r\n      startMulti: () => dispatch(reduxFunctions.startMultiplication()),\r\n      endMulti: () => dispatch(reduxFunctions.endMultiplication()),\r\n      countSteps: () => dispatch(reduxFunctions.stepCounter()),\r\n      carry: (p, t, b, f) => dispatch(reduxFunctions.carryAddition(p, t, b, f)),\r\n      result: (p, t, b) => dispatch(reduxFunctions.resultAddition(p, t, b))\r\n  }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Buttons);","import * as actionTypes from './actions';\r\n\r\nexport const randomNumberGenerate = (digitCounter, changerFn) => {\r\n    return{\r\n        type: actionTypes.RANDOM_NUMBER,\r\n        digitCount: digitCounter,\r\n        rowType: changerFn\r\n    }\r\n}\r\nexport const inputNumber = (updatedNumbers, changerFn) => {\r\n    return{\r\n        type: actionTypes.INPUT_NUMBER,\r\n        newNumbers: updatedNumbers,\r\n        rowPosition: changerFn\r\n    }\r\n}\r\nexport const startMultiplication = () => {\r\n    return{\r\n        type: actionTypes.START\r\n    }\r\n}\r\nexport const endMultiplication = () => {\r\n    return{\r\n        type: actionTypes.END\r\n    }\r\n}\r\nexport const stepCounter = () => {\r\n    return{\r\n        type: actionTypes.COUNTER\r\n    }\r\n}\r\nexport const carryAddition = (position, topRow, bottomRow, finalResult) => {\r\n    return{\r\n        type: actionTypes.COUNTERCARRY,\r\n        position: position,\r\n        topRow: topRow,\r\n        bottomRow: bottomRow,\r\n        finalResult: finalResult\r\n    }\r\n}\r\nexport const resultAddition = (position, topRow, bottomRow) => {\r\n    return{\r\n        type: actionTypes.COUNTERRESULT,\r\n        position: position,\r\n        topRow: topRow,\r\n        bottomRow: bottomRow\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classNames from './ExplainationBoard.module.css';\r\n\r\nconst ExplainationBoard = (props) => {\r\n    return (\r\n        <div className={classNames.container}>\r\n            <div className={classNames.inner}>\r\n                <div className={classNames.text}>\r\n                    <h3 dangerouslySetInnerHTML={{ __html: props.title.show ? props.title.title : 'Generate random numbers to start' }}></h3>\r\n                    <div>\r\n                        {Object.values(props.texts).map((c, i)=>{\r\n                            return <p key={i}>{c}</p>\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStatetoProps = state => {\r\n    return{\r\n        title: state.number.boardTitle,\r\n        texts: state.result.allTexts\r\n    }\r\n}\r\nexport default connect(mapStatetoProps)(ExplainationBoard);","import React from 'react';\r\nimport classNames from '../../containers/NumberBoard/Board.module.css';\r\n\r\nconst Row = () => {\r\n    return (\r\n        <div className={`${classNames.row} ${classNames.mobile}`}>\r\n            <div className={`${classNames.title} ${classNames.brt}`}>\r\n                <h4>Hundred Thousands</h4>\r\n            </div>\r\n            <div className={`${classNames.title} ${classNames.brt}`}>\r\n                <h4>Ten Thousands</h4>\r\n            </div>\r\n            <div className={`${classNames.title} ${classNames.brt}`}>\r\n                <h4>Thousands</h4>\r\n            </div>\r\n            <div className={`${classNames.title} ${classNames.brt}`}>\r\n                <h4>Hundreds</h4>\r\n            </div>\r\n            <div className={`${classNames.title} ${classNames.brt}`}>\r\n                <h4>Tens</h4>\r\n            </div>\r\n            <div className={`${classNames.title} ${classNames.brt}`}>\r\n                <h4>Ones</h4>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Row;","import React from 'react';\r\nimport classNames from '../../containers/NumberBoard/Board.module.css';\r\n\r\nconst Row = (props) => {\r\n    let classes;\r\n    switch (props.color) {\r\n        case 'c1':\r\n            classes = `${classNames.carry} ${classNames.c1} ${classNames.brc}`\r\n            break;\r\n        case 'c2':\r\n            classes = `${classNames.carry} ${classNames.c2} ${classNames.brc}`\r\n            break;\r\n        case 'c3':\r\n            classes = `${classNames.carry} ${classNames.c3} ${classNames.brc}`\r\n            break;\r\n    \r\n        default:\r\n            classes = `${classNames.carry} ${classNames.c1} ${classNames.brc}`\r\n            break;\r\n    }\r\n    return (\r\n        <>\r\n        <div className={classNames.row}>\r\n            <div className={classes} style={props.numbers.hundredThousands.focusAction ? {backgroundColor: '#ffffc0'} : null}>\r\n                <h2>{props.numbers.hundredThousands.value}</h2>\r\n            </div>\r\n            <div className={classes} style={props.numbers.tenThousands.focusAction ? {backgroundColor: '#ffffc0'} : null}>\r\n                <h2>{props.numbers.tenThousands.value}</h2>\r\n            </div>\r\n            <div className={classes} style={props.numbers.thousands.focusAction ? {backgroundColor: '#ffffc0'} : null}>\r\n                <h2>{props.numbers.thousands.value}</h2>\r\n            </div>\r\n            <div className={classes} style={props.numbers.hundreds.focusAction ? {backgroundColor: '#ffffc0'} : null}>\r\n                <h2>{props.numbers.hundreds.value}</h2>\r\n            </div>\r\n            <div className={classes} style={props.numbers.tens.focusAction ? {backgroundColor: '#ffffc0'} : null}>\r\n                <h2>{props.numbers.tens.value}</h2>\r\n            </div>\r\n            <div className={classes}>\r\n                <h2>{props.numbers.ones.value}</h2>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Row;","import React from 'react';\r\nimport classNames from '../../containers/NumberBoard/Board.module.css';\r\n\r\nconst Row = (props) => {\r\n    let classes;\r\n    switch (props.color) {\r\n        case 'r1':\r\n            classes = `${classNames.results} ${classNames.r1} ${classNames.brc}`\r\n            break;\r\n        case 'r2':\r\n            classes = `${classNames.results} ${classNames.r2} ${classNames.brc}`\r\n            break;\r\n        case 'r3':\r\n            classes = `${classNames.results} ${classNames.r3} ${classNames.brp}`\r\n            break;\r\n        case 'r4':\r\n            classes = `${classNames.results} ${classNames.r4} ${classNames.brc}`\r\n            break;\r\n    \r\n        default:\r\n            break;\r\n    }\r\n    return (\r\n        <div className={classNames.row}>\r\n            <div className={classes} style={props.numbers.hundredThousands.focusAction ? {backgroundColor: '#ffffc0'} : props.blank || props.blankH ? {backgroundColor: 'white'} : null}>\r\n                {props.fRC ? <span className={classNames.frCarry}>{props.fRC.tenThousands.carry}</span>:null}\r\n                <h1>{props.numbers.hundredThousands.value}</h1>\r\n            </div>\r\n            <div className={classes} style={props.numbers.tenThousands.focusAction ? {backgroundColor: '#ffffc0'} : props.blank ? {backgroundColor: 'white'} : null}>\r\n                {props.fRC ? <span className={classNames.frCarry}>{props.fRC.thousands.carry}</span>:null}\r\n                <h1>{props.numbers.tenThousands.value}</h1>\r\n            </div>\r\n            <div className={classes} style={props.numbers.thousands.focusAction ? {backgroundColor: '#ffffc0'} : null}>\r\n                {props.fRC ? <span className={classNames.frCarry}>{props.fRC.hundreds.carry}</span>:null}\r\n                <h1>{props.numbers.thousands.value}</h1>\r\n            </div>\r\n            <div className={classes} style={props.numbers.hundreds.focusAction ? {backgroundColor: '#ffffc0'} : null}>\r\n                {props.fRC ? <span className={classNames.frCarry}>{props.fRC.tens.carry}</span>:null}\r\n                <h1>{props.numbers.hundreds.value}</h1>\r\n            </div>\r\n            <div className={classes} style={props.numbers.tens.focusAction ? {backgroundColor: '#ffffc0'} : props.zero ? {backgroundColor: 'white', color: '#D9D9D9'} : null}>\r\n                {props.fRC ? <span className={classNames.frCarry}>{props.fRC.ones.carry}</span>:null}\r\n                <h1>{props.numbers.tens.value}</h1>\r\n            </div>\r\n            <div className={classes} style={props.numbers.ones.focusAction ? {backgroundColor: '#ffffc0'} : props.zero || props.zeroO ? {backgroundColor: 'white', color: '#D9D9D9'} : null}>\r\n                <h1>{props.numbers.ones.value}</h1>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Row;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from '../../components/BoardHeaderRow/Row';\r\nimport Carry from '../../components/BoardCarryRow/Row';\r\nimport Result from '../../components/BoardResultsRow/Row';\r\nimport classNames from './Board.module.css';\r\nimport * as reduxFunctions from '../../store/actions/index';\r\n\r\nconst Board = (props) => {\r\n\r\n    const inputChange = (e, i, tb, changeFN)=>{\r\n        let maxLength = 1;\r\n        if (e.target.value.length > maxLength){\r\n            e.target.value = e.target.value.slice(0, maxLength);\r\n        }\r\n        let old = [...tb]\r\n        old[i] = e.target.value;\r\n        props.input(old, changeFN);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classNames.container}>\r\n            <div className={classNames.inner}>\r\n                <Header />\r\n\r\n                <Carry numbers={props.tLofCarry} color='c1' />\r\n                <Carry numbers={props.mLofCarry} color='c2' />\r\n                <Carry numbers={props.bLofCarry} color='c3' />\r\n\r\n                <div className={classNames.row}>\r\n                    <div className={`${classNames.digits} ${classNames.brc}`}>\r\n                        <h1>{null}</h1>\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brc}`}>\r\n                        <h1>{null}</h1>\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brc}`}>\r\n                        <h1>{null}</h1>\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brc}`}>\r\n                        <input\r\n                        id='inputs'\r\n                        type='number'\r\n                        value={props.tR[0]}\r\n                        onChange={(e)=>inputChange(e, 0, props.tR, 'topRow')} max=\"1\"\r\n                        style={props.focusInput.t.first ? {backgroundColor: 'yellow'} : null}\r\n                        />\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brc}`}>\r\n                        <input\r\n                        id='inputs'\r\n                        type='number'\r\n                        value={props.tR[1]}\r\n                        onChange={(e)=>inputChange(e, 1, props.tR, 'topRow')} max=\"1\"\r\n                        style={props.focusInput.t.second ? {backgroundColor: 'yellow'} : null}\r\n                        />\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brc}`}>\r\n                        <input\r\n                        id='inputs'\r\n                        type='number'\r\n                        value={props.tR[2]}\r\n                        onChange={(e)=>inputChange(e, 2, props.tR, 'topRow')}\r\n                        max=\"1\"\r\n                        style={props.focusInput.t.third ? {backgroundColor: 'yellow'} : null}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classNames.row}>\r\n                    <div className={`${classNames.digits} ${classNames.brd}`}>\r\n                        <h1>{null}</h1>\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brd}`}>\r\n                        <h1>{null}</h1>\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brd}`}>\r\n                        <h1>X</h1>\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brd}`}>\r\n                        <input\r\n                        id='inputs'\r\n                        type='number'\r\n                        value={props.bR[0]}\r\n                        onChange={(e)=>inputChange(e, 0, props.bR, 'bottomRow')} max=\"1\"\r\n                        style={props.focusInput.b.first ? {backgroundColor: 'yellow', color:'#0070C0'} : {color:'#0070C0'}}\r\n                        />\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brd}`}>\r\n                        <input\r\n                        id='inputs'\r\n                        type='number'\r\n                        value={props.bR[1]}\r\n                        onChange={(e)=>inputChange(e, 1, props.bR, 'bottomRow')} max=\"1\"\r\n                        style={props.focusInput.b.second ? {backgroundColor: 'yellow', color:'#00B050'} : {color:'#00B050'}}\r\n                        />\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brd}`}>\r\n                        <input\r\n                        id='inputs'\r\n                        type='number'\r\n                        value={props.bR[2]}\r\n                        onChange={(e)=>inputChange(e, 2, props.bR, 'bottomRow')} max=\"1\"\r\n                        style={props.focusInput.b.third ? {backgroundColor: 'yellow', color:'#7030A0'} : {color:'#7030A0'}}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Result numbers={props.r1} color='r1' blank fRC={props.r4} />\r\n                <Result numbers={props.r2} color='r2' blankH zeroO />\r\n                <Result numbers={props.r3} color='r3' zero/>\r\n                <Result numbers={props.r4} color='r4'/>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStatetoProps = state => {\r\n    return{\r\n        tR: state.number.topRow,\r\n        bR: state.number.bottomRow,\r\n        tLofCarry : state.carry.topLine,\r\n        mLofCarry : state.carry.middleLine,\r\n        bLofCarry : state.carry.bottomLine,\r\n        r1 : state.result.topResult,\r\n        r2 : state.result.middleResult,\r\n        r3 : state.result.bottomResult,\r\n        r4 : state.result.finalResult,\r\n        focusInput: state.result.focusingInput\r\n    }\r\n}\r\nconst mapDispatchtoProps = dispatch => {\r\n    return{\r\n        input: (newNum, fn) => dispatch(reduxFunctions.inputNumber(newNum, fn))\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Board);","import React from 'react';\r\nimport Buttons from '../ActionButtons/Buttons';\r\nimport ExplainationBoard from '../ExplainationBoard/ExplainationBoard';\r\nimport Board from '../NumberBoard/Board';\r\nimport classNames from './Layout.module.css';\r\n\r\nconst Layout = () => {\r\n    return (\r\n        <>\r\n            <div className={classNames.container}>\r\n                <div className={classNames.buttons}>\r\n                    <Buttons />\r\n                </div>\r\n                <div className={classNames.resultSection}>\r\n                    <div className={classNames.explaination}>\r\n                        <ExplainationBoard />\r\n                    </div>\r\n                    <div className={classNames.board}>\r\n                        <Board />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nexport default Layout;","import Layout from \"./containers/Layout/Layout\";\n\n\nfunction App() {\n  return (\n    <Layout />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from '../actions/actions';\r\n\r\nconst initState = {\r\n    topRow: ['1','1','1'],\r\n    bottomRow: ['1','1','1'],\r\n    boardTitle: {\r\n        title: '',\r\n        show: false\r\n    },\r\n    counter: 0,\r\n    nextBtnHide: false\r\n}\r\n\r\nconst reducer = (state = initState, actions) => {\r\n    if(state.counter === 19){\r\n        return{\r\n            ...state,\r\n            counter: 0,\r\n            nextBtnHide: true\r\n        }\r\n    }\r\n\r\n    switch (actions.type) {\r\n        case actionTypes.RANDOM_NUMBER:\r\n            let randomNumArray;\r\n            const randomNum1 = Math.floor(Math.random() * (9)) + 1;\r\n            const randomNum2 = Math.floor(Math.random() * (9)) + 1;\r\n            const randomNum3 = Math.floor(Math.random() * (9)) + 1;\r\n            const randomNumString1 = randomNum1.toString();\r\n            const randomNumString2 = randomNum2.toString();\r\n            const randomNumString3 = randomNum3.toString();\r\n            switch (actions.digitCount) {\r\n            case 3:\r\n                randomNumArray = [randomNumString1, randomNumString2, randomNumString3];\r\n                break;\r\n            case 2:\r\n                randomNumArray = ['', randomNumString1, randomNumString2];\r\n                break;\r\n            case 1:\r\n                randomNumArray = ['', '', randomNumString1];\r\n                break;\r\n\r\n            default:\r\n                randomNumArray = [randomNumString1, randomNumString2, randomNumString3];\r\n                break;\r\n            }\r\n            return{\r\n                ...state,\r\n                [actions.rowType]: randomNumArray\r\n            }\r\n        case actionTypes.INPUT_NUMBER:\r\n            return{\r\n                ...state,\r\n                [actions.rowPosition]: actions.newNumbers\r\n            }\r\n        case actionTypes.START:\r\n            const t = state.topRow.join('')\r\n            const b = state.bottomRow.join('')\r\n            return{\r\n                ...state,\r\n                boardTitle: {\r\n                    title: `We will multiply <span>${state.topRow[0]}${state.topRow[1]}${state.topRow[2]}</span> x <span>${state.bottomRow[0]}${state.bottomRow[1]}${state.bottomRow[2]}</span>. The answer is <span>${t * b}</span>, but that doesn’t matter. We don’t care about the answer here; we care only about how to get it. <span>Click Next</span>`,\r\n                    show: true\r\n                },\r\n                nextBtnHide: false\r\n            }\r\n        case actionTypes.END:\r\n            return{\r\n                ...state,\r\n                topRow: ['1','1','1'],\r\n                bottomRow: ['1','1','1'],\r\n                boardTitle: {\r\n                    ...state.boardTitle,\r\n                    show: false\r\n                },\r\n                counter: 0\r\n            }\r\n        case actionTypes.COUNTER:\r\n            return{\r\n                ...state,\r\n                counter: state.counter + 1,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actions';\r\n\r\nconst initialState = {\r\n    topLine:{\r\n        ones: {focusAction: false, value: null},\r\n        tens: {focusAction: false, value: null},\r\n        hundreds: {focusAction: false, value: null},\r\n        thousands: {focusAction: false, value: null},\r\n        tenThousands: {focusAction: false, value: null},\r\n        hundredThousands: {focusAction: false, value: null}\r\n    },\r\n    middleLine:{\r\n        ones: {focusAction: false, value: null},\r\n        tens: {focusAction: false, value: null},\r\n        hundreds: {focusAction: false, value: null},\r\n        thousands: {focusAction: false, value: null},\r\n        tenThousands: {focusAction: false, value: null},\r\n        hundredThousands: {focusAction: false, value: null}\r\n    },\r\n    bottomLine:{\r\n        ones: {focusAction: false, value: null},\r\n        tens: {focusAction: false, value: null},\r\n        hundreds: {focusAction: false, value: null},\r\n        thousands: {focusAction: false, value: null},\r\n        tenThousands: {focusAction: false, value: null},\r\n        hundredThousands: {focusAction: false, value: null}\r\n    }\r\n};\r\n\r\nconst carry = (state = initialState, action)=>{\r\n    if(action.type === actionTypes.END){\r\n        return initialState;\r\n    }\r\n    let carryNumb;\r\n    const carryNumFn = (prev, p1, p2) => {\r\n        let carryNumber;\r\n        let carryNum;\r\n        const cNumFn = (carryNumber) =>{\r\n            if(carryNumber.toString().length > 1){\r\n                carryNum = carryNumber.toString().slice(0,1)\r\n            }else{\r\n                carryNum = null;\r\n            }\r\n            return carryNum;\r\n        }\r\n        if(prev){\r\n            carryNumber = (Number(action.topRow[p1]) * Number(action.bottomRow[p2])) + Number(prev);\r\n            carryNum = cNumFn(carryNumber);\r\n        }else{\r\n            carryNumber = Number(action.topRow[p1]) * Number(action.bottomRow[p2]);\r\n            carryNum = cNumFn(carryNumber);\r\n        }\r\n        return carryNum;\r\n    }\r\n    const stepsFn = (obj) => {\r\n        return {\r\n            ...initialState,\r\n            [obj.line] : {\r\n                ...initialState[obj.line],\r\n                [obj.focusPos] : {\r\n                    focusAction: obj.carryNumb?true:false,\r\n                    value: obj.carryNumb\r\n                }\r\n            }\r\n        }\r\n    }\r\n    switch (action.position) {\r\n        case 0:\r\n            carryNumb = carryNumFn(null,2,2);\r\n            return stepsFn({\r\n                line: 'bottomLine',\r\n                focusPos: 'tens',\r\n                carryNumb: carryNumb\r\n            })\r\n\r\n        case 1:\r\n            carryNumb = carryNumFn(state.bottomLine.tens.value,1,2);\r\n            return stepsFn({\r\n                line: 'bottomLine',\r\n                focusPos: 'hundreds',\r\n                carryNumb: carryNumb\r\n            })\r\n        case 2:\r\n            return initialState\r\n        case 4:\r\n            carryNumb = carryNumFn(null, 2,1);\r\n            return stepsFn({\r\n                line: 'middleLine',\r\n                focusPos: 'hundreds',\r\n                carryNumb: carryNumb\r\n            })\r\n        case 5:\r\n            carryNumb = carryNumFn(state.middleLine.hundreds.value, 1,1);\r\n            return stepsFn({\r\n                line: 'middleLine',\r\n                focusPos: 'thousands',\r\n                carryNumb: carryNumb\r\n            })\r\n        case 6:\r\n            return initialState\r\n        case 8:\r\n            carryNumb = carryNumFn(null, 2,0);\r\n            return stepsFn({\r\n                line: 'topLine',\r\n                focusPos: 'thousands',\r\n                carryNumb: carryNumb\r\n            })\r\n        case 9:\r\n            carryNumb = carryNumFn(state.topLine.thousands.value, 1,0);\r\n            return stepsFn({\r\n                line: 'topLine',\r\n                focusPos: 'tenThousands',\r\n                carryNumb: carryNumb\r\n            })\r\n        case 10:\r\n            return initialState\r\n    \r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default carry;","const resultNumFn = (prev, p1, p2) => {\r\n    let resultNumber;\r\n    let resultNum;\r\n    let carryingNum;\r\n    const rNumFn = (resultNumber) =>{\r\n        if(resultNumber.toString().length > 1){\r\n            resultNum = resultNumber.toString().slice(1);\r\n            carryingNum = resultNumber.toString().slice(0,1);\r\n        }else{\r\n            resultNum = resultNumber;\r\n        }\r\n        return resultNum;\r\n    }\r\n    if(prev){\r\n        resultNumber = (Number(p1) * Number(p2)) + Number(prev);\r\n        resultNum = rNumFn(resultNumber);\r\n    }else{\r\n        resultNumber = Number(p1) * Number(p2);\r\n        resultNum = rNumFn(resultNumber);\r\n    }\r\n    return {resultNum,carryingNum};\r\n}\r\n\r\nexport default resultNumFn;","import * as actionTypes from '../actions/actions';\r\nimport resultNumFn from './Utility/result';\r\n\r\nconst initialState = {\r\n    topResult:{\r\n        ones: {focusAction: false, value: null, carry: null},\r\n        tens: {focusAction: false, value: null, carry: null},\r\n        hundreds: {focusAction: false, value: null, carry: null},\r\n        thousands: {focusAction: false, value: null, carry: null},\r\n        tenThousands: {focusAction: false, value: null, carry: null},\r\n        hundredThousands: {focusAction: false, value: null, carry: null}\r\n    },\r\n    middleResult:{\r\n        ones: {focusAction: false, value: null, carry: null},\r\n        tens: {focusAction: false, value: null, carry: null},\r\n        hundreds: {focusAction: false, value: null, carry: null},\r\n        thousands: {focusAction: false, value: null, carry: null},\r\n        tenThousands: {focusAction: false, value: null, carry: null},\r\n        hundredThousands: {focusAction: false, value: null, carry: null}\r\n    },\r\n    bottomResult:{\r\n        ones: {focusAction: false, value: null, carry: null},\r\n        tens: {focusAction: false, value: null, carry: null},\r\n        hundreds: {focusAction: false, value: null, carry: null},\r\n        thousands: {focusAction: false, value: null, carry: null},\r\n        tenThousands: {focusAction: false, value: null, carry: null},\r\n        hundredThousands: {focusAction: false, value: null, carry: null}\r\n    },\r\n    finalResult:{\r\n        ones: {focusAction: false, value: null, carry: null},\r\n        tens: {focusAction: false, value: null, carry: null},\r\n        hundreds: {focusAction: false, value: null, carry: null},\r\n        thousands: {focusAction: false, value: null, carry: null},\r\n        tenThousands: {focusAction: false, value: null, carry: null},\r\n        hundredThousands: {focusAction: false, value: null, carry: null}\r\n    },\r\n    focusingInput: {\r\n        t:{\r\n            first: false,\r\n            second: false,\r\n            third: false\r\n        },\r\n        b:{\r\n            first: false,\r\n            second: false,\r\n            third: false\r\n        },\r\n    },\r\n    allTexts: {}\r\n};\r\n\r\nconst result = (state = initialState, action)=>{\r\n    if(action.type === actionTypes.END){\r\n        return initialState;\r\n    }\r\n    let resultNumb;\r\n    var n1, n2, n3;\r\n    let finalResultNum;\r\n    const finalResultFn = (carry, n1, n2, n3) =>{\r\n        let resultNumber;\r\n        let resultNum;\r\n        let carryingNum;\r\n        const rNumFn = (resultNumber) =>{\r\n            if(resultNumber.toString().length > 1){\r\n                resultNum = resultNumber.toString().slice(1);\r\n                carryingNum = resultNumber.toString().slice(0,1);\r\n            }else{\r\n                resultNum = resultNumber;\r\n            }\r\n            return resultNum;\r\n        }\r\n        if(carry){\r\n            resultNumber = Number(n1) + Number(n2) + Number(n3) + Number(carry);\r\n            resultNum = rNumFn(resultNumber);\r\n        }else{\r\n            resultNumber = Number(n1) + Number(n2) + Number(n3);\r\n            resultNum = rNumFn(resultNumber);\r\n        }\r\n        return {resultNum,carryingNum};\r\n    }\r\n    switch (action.position) {\r\n        case 0:\r\n            resultNumb = resultNumFn(null, action.topRow[2], action.bottomRow[2])\r\n            return{\r\n                ...state,\r\n                topResult:{\r\n                    ...state.topResult,\r\n                    ones:{\r\n                        focusAction: true,\r\n                        value: resultNumb.resultNum,\r\n                        carry: resultNumb.carryingNum\r\n                    }\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    0: `${action.topRow[2]}x${action.bottomRow[2]}=${action.topRow[2] * action.bottomRow[2]} and result ${resultNumb.resultNum}, carry ${resultNumb.carryingNum ? resultNumb.carryingNum : 'nothing'}`\r\n                },\r\n                focusingInput: {\r\n                    ...state.focusingInput,\r\n                    t:{\r\n                        ...state.focusingInput.t,\r\n                        third: true\r\n                    },\r\n                    b:{\r\n                        ...state.focusingInput.b,\r\n                        third: true\r\n                    },\r\n                }\r\n            }\r\n        case 1:\r\n            resultNumb = resultNumFn(state.topResult.ones.carry, action.topRow[1], action.bottomRow[2])\r\n            return{\r\n                ...state,\r\n                topResult:{\r\n                    ...state.topResult,\r\n                    ones:{\r\n                        ...state.topResult.ones,\r\n                        focusAction: false\r\n                    },\r\n                    tens:{\r\n                        focusAction: true,\r\n                        value: resultNumb.resultNum,\r\n                        carry: resultNumb.carryingNum\r\n                    }\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    1: `${action.topRow[1]}x${action.bottomRow[2]}=${action.topRow[1] * action.bottomRow[2]} and result ${resultNumb.resultNum}, carry ${resultNumb.carryingNum ? resultNumb.carryingNum : 'nothing'}`\r\n                },\r\n                focusingInput: {\r\n                    ...state.focusingInput,\r\n                    t:{\r\n                        ...state.focusingInput.t,\r\n                        second: true,\r\n                        third: false\r\n                    },\r\n                    b:{\r\n                        ...state.focusingInput.b\r\n                    },\r\n                }\r\n            }\r\n        case 2:\r\n            resultNumb = resultNumFn(state.topResult.tens.carry, action.topRow[0], action.bottomRow[2])\r\n            return{\r\n                ...state,\r\n                topResult:{\r\n                    ...state.topResult,\r\n                    tens:{\r\n                        ...state.topResult.tens,\r\n                        focusAction: false\r\n                    },\r\n                    hundreds:{\r\n                        focusAction: true,\r\n                        value: resultNumb.resultNum,\r\n                        carry: null\r\n                    },\r\n                    thousands:{\r\n                        focusAction: resultNumb.carryingNum?true:false,\r\n                        value: resultNumb.carryingNum,\r\n                        carry: null\r\n                    },\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    2: `${action.topRow[0]}x${action.bottomRow[2]}=${action.topRow[0] * action.bottomRow[2]} and result ${resultNumb.resultNum}, carry ${resultNumb.carryingNum ? resultNumb.carryingNum : 'nothing'}`\r\n                },\r\n                focusingInput: {\r\n                    ...state.focusingInput,\r\n                    t:{\r\n                        ...state.focusingInput.t,\r\n                        first: true,\r\n                        second: false\r\n                    },\r\n                    b:{\r\n                        ...state.focusingInput.b\r\n                    },\r\n                }\r\n            }\r\n        case 3:\r\n            return{\r\n                ...state,\r\n                topResult:{\r\n                    ...state.topResult,\r\n                    hundreds:{\r\n                        ...state.topResult.hundreds,\r\n                        focusAction: false\r\n                    },\r\n                    thousands:{\r\n                        ...state.topResult.thousands,\r\n                        focusAction: false\r\n                    }\r\n                },\r\n                middleResult:{\r\n                    ...state.middleResult,\r\n                    ones:{\r\n                        ...state.middleResult.ones,\r\n                        focusAction: true,\r\n                        value: 0\r\n                    }\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    3: `Reason for adding 0`\r\n                },\r\n                focusingInput: {\r\n                    ...state.focusingInput,\r\n                    t:{\r\n                        ...state.focusingInput.t,\r\n                        first: false\r\n                    },\r\n                    b:{\r\n                        ...state.focusingInput.b,\r\n                        third: false,\r\n                        second: true\r\n                    },\r\n                }\r\n            }\r\n        case 4:\r\n            resultNumb = resultNumFn(null, action.topRow[2], action.bottomRow[1])\r\n            return{\r\n                ...state,\r\n                middleResult:{\r\n                    ...state.middleResult,\r\n                    ones:{\r\n                        ...state.middleResult.ones,\r\n                        focusAction: false\r\n                    },\r\n                    tens:{\r\n                        focusAction: true,\r\n                        value: resultNumb.resultNum,\r\n                        carry: resultNumb.carryingNum \r\n                    }\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    4: `${action.topRow[2]}x${action.bottomRow[1]}=${action.topRow[2] * action.bottomRow[1]} and result ${resultNumb.resultNum}, carry ${resultNumb.carryingNum ? resultNumb.carryingNum : 'nothing'}`\r\n                },\r\n                focusingInput: {\r\n                    ...state.focusingInput,\r\n                    t:{\r\n                        ...state.focusingInput.t,\r\n                        third: true\r\n                    },\r\n                    b:{\r\n                        ...state.focusingInput.b\r\n                    },\r\n                }\r\n            }\r\n        case 5:\r\n            resultNumb = resultNumFn(state.middleResult.tens.carry, action.topRow[1], action.bottomRow[1])\r\n            return{\r\n                ...state,\r\n                middleResult:{\r\n                    ...state.middleResult,\r\n                    tens:{\r\n                        ...state.middleResult.tens,\r\n                        focusAction: false\r\n                    },\r\n                    hundreds:{\r\n                        focusAction: true,\r\n                        value: resultNumb.resultNum,\r\n                        carry: resultNumb.carryingNum \r\n                    }\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    5: `${action.topRow[1]}x${action.bottomRow[1]}=${action.topRow[1] * action.bottomRow[1]} and result ${resultNumb.resultNum}, carry ${resultNumb.carryingNum ? resultNumb.carryingNum : 'nothing'}`\r\n                },\r\n                focusingInput: {\r\n                    ...state.focusingInput,\r\n                    t:{\r\n                        ...state.focusingInput.t,\r\n                        third: false,\r\n                        second: true\r\n                    },\r\n                    b:{\r\n                        ...state.focusingInput.b\r\n                    },\r\n                }\r\n            }\r\n        case 6:\r\n            resultNumb = resultNumFn(state.middleResult.hundreds.carry, action.topRow[0], action.bottomRow[1])\r\n            return{\r\n                ...state,\r\n                middleResult:{\r\n                    ...state.middleResult,\r\n                    hundreds:{\r\n                        ...state.middleResult.hundreds,\r\n                        focusAction: false\r\n                    },\r\n                    thousands:{\r\n                        focusAction: true,\r\n                        value: resultNumb.resultNum,\r\n                        carry: null\r\n                    },\r\n                    tenThousands:{\r\n                        focusAction: resultNumb.carryingNum?true:false,\r\n                        value: resultNumb.carryingNum,\r\n                        carry: null\r\n                    }\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    6: `${action.topRow[0]}x${action.bottomRow[1]}=${action.topRow[0] * action.bottomRow[1]} and result ${resultNumb.resultNum}, carry ${resultNumb.carryingNum ? resultNumb.carryingNum : 'nothing'}`\r\n                },\r\n                focusingInput: {\r\n                    ...state.focusingInput,\r\n                    t:{\r\n                        ...state.focusingInput.t,\r\n                        second: false,\r\n                        first: true\r\n                    },\r\n                    b:{\r\n                        ...state.focusingInput.b\r\n                    },\r\n                }\r\n            }\r\n        case 7:\r\n            return{\r\n                ...state,\r\n                middleResult:{\r\n                    ...state.middleResult,\r\n                    thousands:{\r\n                        ...state.middleResult.thousands,\r\n                        focusAction: false\r\n                    },\r\n                    tenThousands:{\r\n                        ...state.middleResult.tenThousands,\r\n                        focusAction: false\r\n                    }\r\n                },\r\n                bottomResult:{\r\n                    ...state.bottomResult,\r\n                    ones:{\r\n                        ...state.bottomResult.ones,\r\n                        focusAction: true,\r\n                        value: 0\r\n                    },\r\n                    tens:{\r\n                        ...state.bottomResult.tens,\r\n                        focusAction: true,\r\n                        value: 0\r\n                    }\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    7: `Reason for adding two 0`\r\n                },\r\n                focusingInput: {\r\n                    ...state.focusingInput,\r\n                    t:{\r\n                        ...state.focusingInput.t,\r\n                        first: false\r\n                    },\r\n                    b:{\r\n                        ...state.focusingInput.b,\r\n                        second: false,\r\n                        first: true\r\n                    },\r\n                }\r\n            }\r\n        case 8:\r\n            resultNumb = resultNumFn(null, action.topRow[2], action.bottomRow[0])\r\n            return{\r\n                ...state,\r\n                bottomResult:{\r\n                    ...state.bottomResult,\r\n                    ones:{\r\n                        ...state.bottomResult.ones,\r\n                        focusAction: false\r\n                    },\r\n                    tens:{\r\n                        ...state.bottomResult.tens,\r\n                        focusAction: false\r\n                    },\r\n                    hundreds:{\r\n                        focusAction: true,\r\n                        value: resultNumb.resultNum,\r\n                        carry: resultNumb.carryingNum\r\n                    }\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    8: `${action.topRow[2]}x${action.bottomRow[0]}=${action.topRow[2] * action.bottomRow[0]} and result ${resultNumb.resultNum}, carry ${resultNumb.carryingNum ? resultNumb.carryingNum : 'nothing'}`\r\n                },\r\n                focusingInput: {\r\n                    ...state.focusingInput,\r\n                    t:{\r\n                        ...state.focusingInput.t,\r\n                        third: true\r\n                    },\r\n                    b:{\r\n                        ...state.focusingInput.b\r\n                    },\r\n                }\r\n            }\r\n        case 9:\r\n            resultNumb = resultNumFn(state.bottomResult.hundreds.carry, action.topRow[1], action.bottomRow[0])\r\n            return{\r\n                ...state,\r\n                bottomResult:{\r\n                    ...state.bottomResult,\r\n                    hundreds:{\r\n                        ...state.bottomResult.hundreds,\r\n                        focusAction: false,\r\n                    },\r\n                    thousands:{\r\n                        focusAction: true,\r\n                        value: resultNumb.resultNum,\r\n                        carry: resultNumb.carryingNum\r\n                    }\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    9: `${action.topRow[1]}x${action.bottomRow[0]}=${action.topRow[1] * action.bottomRow[0]} and result ${resultNumb.resultNum}, carry ${resultNumb.carryingNum ? resultNumb.carryingNum : 'nothing'}`\r\n                },\r\n                focusingInput: {\r\n                    ...state.focusingInput,\r\n                    t:{\r\n                        ...state.focusingInput.t,\r\n                        second: true,\r\n                        third: false\r\n                    },\r\n                    b:{\r\n                        ...state.focusingInput.b\r\n                    },\r\n                }\r\n            }\r\n        case 10:\r\n            resultNumb = resultNumFn(state.bottomResult.thousands.carry, action.topRow[0], action.bottomRow[0])\r\n            return{\r\n                ...state,\r\n                bottomResult:{\r\n                    ...state.bottomResult,\r\n                    thousands:{\r\n                        ...state.bottomResult.thousands,\r\n                        focusAction: false,\r\n                    },\r\n                    tenThousands:{\r\n                        focusAction: true,\r\n                        value: resultNumb.resultNum,\r\n                        carry: null\r\n                    },\r\n                    hundredThousands:{\r\n                        focusAction: resultNumb.carryingNum?true:false,\r\n                        value: resultNumb.carryingNum,\r\n                        carry: null\r\n                    }\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    10: `${action.topRow[0]}x${action.bottomRow[0]}=${action.topRow[0] * action.bottomRow[0]} and result ${resultNumb.resultNum}, carry ${resultNumb.carryingNum ? resultNumb.carryingNum : 'nothing'}`\r\n                },\r\n                focusingInput: {\r\n                    ...state.focusingInput,\r\n                    t:{\r\n                        ...state.focusingInput.t,\r\n                        second: false,\r\n                        first: true\r\n                    },\r\n                    b:{\r\n                        ...state.focusingInput.b\r\n                    },\r\n                }\r\n            }\r\n        case 11:\r\n            return{\r\n                ...state,\r\n                bottomResult:{\r\n                    ...state.bottomResult,\r\n                    tenThousands:{\r\n                        ...state.bottomResult.tenThousands,\r\n                        focusAction: false\r\n                    },\r\n                    hundredThousands:{\r\n                        ...state.bottomResult.hundredThousands,\r\n                        focusAction: false\r\n                    }\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    11: `Multiplication end! Addition start.`\r\n                },\r\n                focusingInput: {\r\n                    ...state.focusingInput,\r\n                    t:{\r\n                        ...state.focusingInput.t,\r\n                        first: false\r\n                    },\r\n                    b:{\r\n                        ...state.focusingInput.b,\r\n                        first: false\r\n                    },\r\n                }\r\n            }\r\n        case 12:\r\n            n1= state.topResult.ones.value;\r\n            n2= state.middleResult.ones.value;\r\n            n3= state.bottomResult.ones.value;\r\n            finalResultNum = finalResultFn(null, n1?n1:0, n2?n2:0, n3?n3:0)\r\n            return{\r\n                ...state,\r\n                finalResult:{\r\n                    ...state.finalResult,\r\n                    ones:{\r\n                        focusAction: true,\r\n                        value: finalResultNum.resultNum,\r\n                        carry: finalResultNum.carryingNum,\r\n                    }\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    12: `${n1?n1:0}+${n2?n2:0}+${n3?n3:0}=${Number(n1?n1:0)+Number(n2?n2:0)+Number(n3?n3:0)} and result ${finalResultNum.resultNum}, carry ${finalResultNum.carryingNum ? finalResultNum.carryingNum : 'nothing'}`\r\n                }\r\n            }\r\n        case 13:\r\n            n1= state.topResult.tens.value;\r\n            n2= state.middleResult.tens.value;\r\n            n3= state.bottomResult.tens.value;\r\n            finalResultNum = finalResultFn(state.finalResult.ones.carry, n1?n1:0, n2?n2:0, n3?n3:0)\r\n            return{\r\n                ...state,\r\n                finalResult:{\r\n                    ...state.finalResult,\r\n                    ones:{\r\n                        ...state.finalResult.ones,\r\n                        focusAction: false,\r\n                    },\r\n                    tens:{\r\n                        focusAction: true,\r\n                        value: finalResultNum.resultNum,\r\n                        carry: finalResultNum.carryingNum\r\n                    }\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    13: `${n1?n1:0}+${n2?n2:0}+${n3?n3:0}=${Number(n1?n1:0)+Number(n2?n2:0)+Number(n3?n3:0)} and result ${finalResultNum.resultNum}, carry ${finalResultNum.carryingNum ? finalResultNum.carryingNum : 'nothing'}`\r\n                }\r\n            }\r\n        case 14:\r\n            n1= state.topResult.hundreds.value;\r\n            n2= state.middleResult.hundreds.value;\r\n            n3= state.bottomResult.hundreds.value;\r\n            finalResultNum = finalResultFn(state.finalResult.tens.carry, n1?n1:0, n2?n2:0, n3?n3:0)\r\n            return{\r\n                ...state,\r\n                finalResult:{\r\n                    ...state.finalResult,\r\n                    ones:{\r\n                        ...state.finalResult.ones,\r\n                        carry: null\r\n                    },\r\n                    tens:{\r\n                        ...state.finalResult.tens,\r\n                        focusAction: false,\r\n                    },\r\n                    hundreds:{\r\n                        focusAction: true,\r\n                        value: finalResultNum.resultNum,\r\n                        carry: finalResultNum.carryingNum\r\n                    }\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    14: `${n1?n1:0}+${n2?n2:0}+${n3?n3:0}=${Number(n1?n1:0)+Number(n2?n2:0)+Number(n3?n3:0)} and result ${finalResultNum.resultNum}, carry ${finalResultNum.carryingNum ? finalResultNum.carryingNum : 'nothing'}`\r\n                }\r\n            }\r\n        case 15:\r\n            n1= state.topResult.thousands.value;\r\n            n2= state.middleResult.thousands.value;\r\n            n3= state.bottomResult.thousands.value;\r\n            finalResultNum = finalResultFn(state.finalResult.hundreds.carry, n1?n1:0, n2?n2:0, n3?n3:0)\r\n            return{\r\n                ...state,\r\n                finalResult:{\r\n                    ...state.finalResult,\r\n                    tens:{\r\n                        ...state.finalResult.tens,\r\n                        carry: null\r\n                    },\r\n                    hundreds:{\r\n                        ...state.finalResult.hundreds,\r\n                        focusAction: false,\r\n                    },\r\n                    thousands:{\r\n                        focusAction: true,\r\n                        value: finalResultNum.resultNum,\r\n                        carry: finalResultNum.carryingNum\r\n                    }\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    15: `${n1?n1:0}+${n2?n2:0}+${n3?n3:0}=${Number(n1?n1:0)+Number(n2?n2:0)+Number(n3?n3:0)} and result ${finalResultNum.resultNum}, carry ${finalResultNum.carryingNum ? finalResultNum.carryingNum : 'nothing'}`\r\n                }\r\n            }\r\n        case 16:\r\n            n1= state.topResult.tenThousands.value;\r\n            n2= state.middleResult.tenThousands.value;\r\n            n3= state.bottomResult.tenThousands.value;\r\n            finalResultNum = finalResultFn(state.finalResult.thousands.carry, n1?n1:0, n2?n2:0, n3?n3:0)\r\n            return{\r\n                ...state,\r\n                finalResult:{\r\n                    ...state.finalResult,\r\n                    hundreds:{\r\n                        ...state.finalResult.hundreds,\r\n                        carry: null\r\n                    },\r\n                    thousands:{\r\n                        ...state.finalResult.thousands,\r\n                        focusAction: false,\r\n                    },\r\n                    tenThousands:{\r\n                        focusAction: true,\r\n                        value: finalResultNum.resultNum,\r\n                        carry: finalResultNum.carryingNum\r\n                    }\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    16: `${n1?n1:0}+${n2?n2:0}+${n3?n3:0}=${Number(n1?n1:0)+Number(n2?n2:0)+Number(n3?n3:0)} and result ${finalResultNum.resultNum}, carry ${finalResultNum.carryingNum ? finalResultNum.carryingNum : 'nothing'}`\r\n                }\r\n            }\r\n        case 17:\r\n            n1= state.topResult.hundredThousands.value;\r\n            n2= state.middleResult.hundredThousands.value;\r\n            n3= state.bottomResult.hundredThousands.value;\r\n            finalResultNum = finalResultFn(state.finalResult.tenThousands.carry, n1?n1:0, n2?n2:0, n3?n3:0)\r\n            return{\r\n                ...state,\r\n                finalResult:{\r\n                    ...state.finalResult,\r\n                    thousands:{\r\n                        ...state.finalResult.thousands,\r\n                        carry: null\r\n                    },\r\n                    tenThousands:{\r\n                        ...state.finalResult.tenThousands,\r\n                        focusAction: false,\r\n                    },\r\n                    hundredThousands:{\r\n                        focusAction: finalResultNum.resultNum === 0? false: true,\r\n                        value: finalResultNum.resultNum === 0? null: finalResultNum.resultNum,\r\n                        carry: null\r\n                    }\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    17: `${n1?n1:0}+${n2?n2:0}+${n3?n3:0}=${Number(n1?n1:0)+Number(n2?n2:0)+Number(n3?n3:0)} and result ${finalResultNum.resultNum}, carry ${finalResultNum.carryingNum ? finalResultNum.carryingNum : 'nothing'}`\r\n                }\r\n            }\r\n        case 18:\r\n            return{\r\n                ...state,\r\n                finalResult:{\r\n                    ...state.finalResult,\r\n                    tenThousands:{\r\n                        ...state.finalResult.tenThousands,\r\n                        carry: null\r\n                    },\r\n                    hundredThousands:{\r\n                        ...state.finalResult.hundredThousands,\r\n                        focusAction: false\r\n                    }\r\n                },\r\n                allTexts: {\r\n                    ...state.allTexts,\r\n                    18: `The End`\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default result;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {combineReducers, createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\n\nimport numbers from './store/reducers/numbers';\nimport carrys from './store/reducers/carry';\nimport results from './store/reducers/results';\n\nconst rootReducer = combineReducers({\n  number : numbers,\n  carry : carrys,\n  result : results\n})\n\n\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Layout_container__3v8bI\",\"buttons\":\"Layout_buttons__3V5QG\",\"resultSection\":\"Layout_resultSection__3fgKI\",\"board\":\"Layout_board__2pm6b\",\"explaination\":\"Layout_explaination__12tXX\"};"],"sourceRoot":""}