{"version":3,"sources":["containers/ExplainationBoard/ExplainationBoard.module.css","containers/Header/Header.module.css","containers/ActionButtons/Buttons.module.css","containers/NumberBoard/Board.module.css","store/actions/actions.js","containers/ActionButtons/Buttons.js","store/actions/numberFn.js","containers/ExplainationBoard/ExplainationBoard.js","components/BoardHeaderRow/Row.js","components/BoardCarryRow/Row.js","components/BoardResultsRow/Row.js","containers/NumberBoard/Board.js","containers/Header/Header.js","containers/Keypad/Keypad.js","containers/Layout/Layout.js","App.js","store/reducers/results.js","reportWebVitals.js","store/reducers/numbers.js","store/reducers/carry.js","store/texts/text_1x1.js","store/texts/text_2x1.js","store/texts/text_2x2.js","store/texts/text_3x1.js","store/texts/text_3x2.js","store/texts/text_3x3.js","store/reducers/Utility/carry.js","store/reducers/Utility/result.js","store/reducers/Utility/finalResult.js","store/reducers/multiplication.js","store/reducers/numberPad.js","index.js","containers/Keypad/Keypad.module.css","containers/Layout/Layout.module.css"],"names":["module","exports","START","GENERATEONSTART","GENERATEDONSTART","END","COUNTER","COUNTERPREV","COUNTERCARRY","COUNTERRESULT","INPUTFOCUS","KEYPRESS","KEYPRESSMULTI","DELETEDIGIT","LASTFOCUS","connect","state","tR","number","topRow","bR","bottomRow","c","counter","nextBtn","nextBtnHide","btnHide","fR","result","finalResult","carries","multi","answer","carry","results","dispatch","randomOnStart","t","b","type","actionTypes","generatedOnStart","startMulti","endMulti","countSteps","p","u","d","r","position","upperDigit","lowerDigit","resultDigits","prevSteps","carryNumbers","props","useState","setUpperDigit","setLowerDigit","generatedOnStartTrigger","setGeneratedOnStartTrigger","useEffect","className","classNames","container","inner","onClick","disabled","tL","join","length","bL","alert","title","boardTitle","texts","allTexts","explainerContainer","document","getElementById","scroll","top","scrollHeight","behavior","id","text","dangerouslySetInnerHTML","__html","show","Object","values","map","i","Row","row","brt","classes","color","c1","brc","c2","c3","style","numbers","hundredThousands","focusAction","backgroundColor","value","tenThousands","thousands","hundreds","tens","ones","r1","brf","r2","brs","r3","r4","brl","zeroColor","window","innerHeight","blank","blankH","fRC","frCarry","zero","zeroO","tLofCarry","topLine","mLofCarry","middleLine","bLofCarry","bottomLine","topResult","middleResult","bottomResult","focusInput","focusingInput","resultRow","resutltsRow","inputFocusTop","numpad","inputFocusBottom","rows","focusColor","digits","pointer","first","second","third","brd","cross","bI1","bI2","bI3","Header","header","logo","href","src","alt","ico","iFT","iFB","inputDisable","onPress","key","index","changeFn","reduxFunctions","inputFocus","fn","current","multiply","deleteDigit","lastFocus","getIndexPosition","convertToArray","indexOf","onKeyPress","indexPosition","digit","Layout","arrow","setArrow","toggleKeypad","setToggleKeypad","classList","add","number_pad_container_grow","board_container","explainer_container","number_pad_container","keypadTrigger","numberPad","remove","number_pad_container_shrink","mvlogo","mvmenu","App","nto","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","trd","reducer","actions","getLength","forEach","Number","push","getPosition","randomNumberGenerate","randomNumArray","randomNum1","Math","floor","random","randomNum2","randomNum3","randomNumString1","toString","randomNumString2","randomNumString3","startingObject","bottom","endingObject","newArrayOnPress","keys","el","newArrayOnDelete","keysD","positionOfDigit","start","topRowNew","bottomRowNew","startOnGen","initialState","action","returnedObject","stepsFn","obj","line","focusPos","carryNumb","cL1","cL11","logic1","logic2","cL12","cL2","cL21","cL22","cL3","cL31","cL32","c4","c5","c6","logic11","logic21","logic22","logic31","logic32","logic33","texts_1x1","t1","b1","texts_2x1","t2","cr1","emptySpaceText","texts_2x2","b2","cr4","r5","r6","r7","r13","r14","r15","r16","fcr1","fcr2","fcr3","fc1","fc2","fc3","texts_3x1","t3","cr2","texts_3x2","cr5","r8","r17","fcr4","fc4","texts_3x3","b3","cr7","cr8","r9","r10","r11","r12","r18","fcr5","c7","c8","fc5","textCounter","textsLines","rL1","rL11","rL12","rL13","rL14","rL2","rL21","rL22","rL23","rL24","rL3","rL31","rL32","rL33","rL34","fr1","fr2","fr3","fr4","fr5","fr6","newTextsObjectCreate","valuesTextsArr","keysTextsArr","removedTextsArr","newTextsObj","pop","carryNumFn","prev","p1","p2","cNumFn","carryNumber","slice","resultNumFn","rNumFn","resultNumber","finalResultFn","n1","n2","n3","resultNum","carryingNum","multiplication","c9","fR1","fR2","fR3","fR4","fR5","fR6","cL13","cL23","cL33","0","1","2","falsyObject","rootReducer","combineReducers","carrys","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.753ca576.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ExplainationBoard_container__3g7PE\",\"inner\":\"ExplainationBoard_inner__F6iLu\",\"text\":\"ExplainationBoard_text__2yJMS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2u7Yr\",\"ico\":\"Header_ico__1UaI6\",\"logo\":\"Header_logo__2adzS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Buttons_container__1cSAn\",\"inner\":\"Buttons_inner__1OAFK\",\"randomDigitContainer\":\"Buttons_randomDigitContainer__jWqI6\",\"selections\":\"Buttons_selections__3rfjF\",\"selectOption\":\"Buttons_selectOption__1hLs4\",\"active\":\"Buttons_active__3P5aW\",\"generate\":\"Buttons_generate__3ilUl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Board_container__2I5Ib\",\"inner\":\"Board_inner__2ui33\",\"row\":\"Board_row__18vsI\",\"brt\":\"Board_brt__xPrsW\",\"brc\":\"Board_brc__3n5cg\",\"brd\":\"Board_brd__3DKRt\",\"brp\":\"Board_brp__35wCz\",\"brf\":\"Board_brf__1vJ_z\",\"brs\":\"Board_brs__3A5Vz\",\"brl\":\"Board_brl__2ardM\",\"title\":\"Board_title__19QT0\",\"carry\":\"Board_carry__228Lj\",\"c1\":\"Board_c1__2Pkos\",\"c2\":\"Board_c2__Ku30P\",\"c3\":\"Board_c3__1lw3n\",\"digits\":\"Board_digits__2eP5W\",\"pointer\":\"Board_pointer__8BeKJ\",\"cross\":\"Board_cross__3-IIs\",\"results\":\"Board_results__2jIgY\",\"r1\":\"Board_r1__1M1AW\",\"r2\":\"Board_r2__IUv_C\",\"r3\":\"Board_r3__3b8xK\",\"r4\":\"Board_r4__3y_96\",\"frCarry\":\"Board_frCarry__3N2r0\",\"bI1\":\"Board_bI1__27k8N\",\"bI2\":\"Board_bI2__2PNT_\",\"bI3\":\"Board_bI3__3DQF7\"};","// export const RANDOM_NUMBER = 'RANDOM_NUMBER';\r\n// export const INPUT_NUMBER = 'INPUT_NUMBER';\r\nexport const START = 'START';\r\nexport const GENERATEONSTART = 'GENERATEONSTART';\r\nexport const GENERATEDONSTART = 'GENERATEDONSTART';\r\nexport const END = 'END';\r\nexport const COUNTER = 'COUNTER';\r\nexport const COUNTERPREV = 'COUNTERPREV';\r\nexport const COUNTERCARRY = 'COUNTERCARRY';\r\nexport const COUNTERRESULT = 'COUNTERRESULT';\r\n\r\nexport const INPUTFOCUS = 'INPUTFOCUS';\r\nexport const KEYPRESS = 'KEYPRESS';\r\nexport const KEYPRESSMULTI = 'KEYPRESSMULTI';\r\nexport const DELETEDIGIT = 'DELETEDIGIT';\r\nexport const LASTFOCUS = 'LASTFOCUS';","import React, { useEffect, useState } from \"react\";\r\n// import Button from \"../../components/Button/Button\";\r\n// import Modal from '../../components/Modal/Modal';\r\nimport classNames from \"./Buttons.module.css\";\r\nimport {connect} from 'react-redux';\r\nimport * as reduxFunctions from '../../store/actions/index';\r\n\r\nconst Buttons = (props) => {\r\n  ///////////////////////////////////////////\r\n  // Random number generator functionalities\r\n  ///////////////////////////////////////////\r\n\r\n  // const digitsU = [\"1\", \"2\", \"3\"];\r\n  // const [digitsL, setDigitsL] = useState([\"1\", \"2\", \"3\"]);\r\n  // const [activeClassTop, setActiveClassTop] = useState({\r\n  //   0:false,\r\n  //   1:false,\r\n  //   2:true\r\n  // })\r\n\r\n  // const [activeClassBottom, setActiveClassBottom] = useState({\r\n  //   0:false,\r\n  //   1:false,\r\n  //   2:true\r\n  // })\r\n\r\n  // const [randomBtnModal, setRandomBtnModal] = useState(false);\r\n  // const triggerModal = () => {\r\n  //   setRandomBtnModal(true);\r\n  // };\r\n  // const closeModal = () => {\r\n  //   setRandomBtnModal(false);\r\n  // };\r\n  // const falsyObject = {\r\n  //   0:false,\r\n  //   1:false,\r\n  //   2:false\r\n  // }\r\n\r\n  // const upDigit = (e, i) => {\r\n  //   setUpperDigit(Number(e.target.innerText));\r\n  //   setActiveClassTop({\r\n  //     ...falsyObject,\r\n  //     [i.toString()] : true\r\n  //   })\r\n  //   switch (i) {\r\n  //     case 0:\r\n  //       setDigitsL(['1'])\r\n  //       setLowerDigit(1)\r\n  //       setActiveClassBottom({\r\n  //         ...falsyObject,\r\n  //         0: true\r\n  //       })\r\n  //       break;\r\n  //     case 1:\r\n  //       setDigitsL(['1', '2'])\r\n  //       setLowerDigit(2)\r\n  //       setActiveClassBottom({\r\n  //         ...falsyObject,\r\n  //         1: true\r\n  //       })\r\n  //       break;\r\n  //     case 2:\r\n  //       setDigitsL(['1', '2', '3'])\r\n  //       break;\r\n  //     default:\r\n  //       break;\r\n  //   }\r\n  // };\r\n\r\n  // const lowDigit = (e, i) => {\r\n  //   setLowerDigit(Number(e.target.innerText));\r\n  //   setActiveClassBottom({\r\n  //     ...falsyObject,\r\n  //     [i.toString()] : true\r\n  //   })\r\n  // };\r\n\r\n  // const setTopAndBelowItems = () => {\r\n  //   setRandomBtnModal(false);\r\n  //   setGenerateOnStart(false);\r\n  //   props.random(upperDigit, 'topRow');\r\n  //   props.random(lowerDigit, 'bottomRow');\r\n  // };\r\n\r\n  ///////////////////////////////////////////\r\n  // Random number generator functionalities\r\n  ///////////////////////////////////////////\r\n\r\n  const [upperDigit, setUpperDigit] = useState(3);\r\n  const [lowerDigit, setLowerDigit] = useState(3);\r\n  // const [generateOnStart, setGenerateOnStart] = useState(false);\r\n  const [generatedOnStartTrigger, setGeneratedOnStartTrigger] = useState(false);\r\n\r\n  const tR = props.tR;\r\n  const bR = props.bR;\r\n\r\n  const {generatedOnStart} = props;\r\n\r\n  useEffect(()=>{\r\n    if(generatedOnStartTrigger){\r\n      generatedOnStart(tR, bR);\r\n    }\r\n  },[tR, bR, generatedOnStart, generatedOnStartTrigger])\r\n\r\n  const starting = () => {\r\n    const tL = props.tR.join('').length;\r\n    const bL = props.bR.join('').length;\r\n    if(tL < bL){\r\n      alert('You can\\'t add lower digits in the top than the bottom' )\r\n    }else{\r\n      if(!props.bR[2]){\r\n        props.randomOnStart();\r\n        setGeneratedOnStartTrigger(true);\r\n        // setGenerateOnStart(false);\r\n      }else{\r\n        setUpperDigit(tL);\r\n        setLowerDigit(bL);\r\n        props.startMulti(props.tR, props.bR);\r\n        // setGenerateOnStart(true);\r\n        setGeneratedOnStartTrigger(false);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  const ending = () => {\r\n    props.endMulti();\r\n    setGeneratedOnStartTrigger(false);\r\n  }\r\n\r\n  const nextSteps = () => {\r\n    props.countSteps(props.c, upperDigit, lowerDigit, props.results);\r\n    props.carry(props.c, props.carries, upperDigit, lowerDigit);\r\n    props.result(props.c, upperDigit, lowerDigit);\r\n  }\r\n\r\n  const prevSteps = () => {\r\n    props.prevSteps(props.c, upperDigit, lowerDigit, props.results);\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {/* <Modal show={randomBtnModal} close={closeModal}>\r\n        <div className={classNames.randomDigitContainer}>\r\n          <h1>How many digit you want in top?</h1>\r\n          <div className={classNames.selections}>\r\n            {digitsU.map((c, i) => {\r\n              return (\r\n                <div\r\n                  key={c}\r\n                  className={`${classNames.selectOption} ${activeClassTop[i.toString()] ? classNames.active : null }`}\r\n                  onClick={(e) => {\r\n                    upDigit(e, i);\r\n                  }}\r\n                >\r\n                  {c}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className={classNames.randomDigitContainer}>\r\n          <h1>How many digit you want in Bottom?</h1>\r\n          <div className={classNames.selections}>\r\n            {digitsL.map((c, i) => {\r\n              return (\r\n                <div\r\n                  key={c}\r\n                  className={`${classNames.selectOption} ${activeClassBottom[i.toString()] ? classNames.active : null }`}\r\n                  onClick={(e) => {\r\n                    lowDigit(e, i);\r\n                  }}\r\n                >\r\n                  {c}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className={classNames.generate}>\r\n          <Button btnClick={setTopAndBelowItems}>\r\n            <span>Generate</span>\r\n            <i className=\"fas fa-check\"></i>\r\n          </Button>\r\n        </div>\r\n      </Modal> */}\r\n      <div className={classNames.container}>\r\n        <div className={classNames.inner}>\r\n          <button onClick={prevSteps} disabled={props.btnHide || props.nextBtn ? true : false}>\r\n            <i className=\"fas fa-backward\"></i>\r\n          </button>\r\n          <button onClick={nextSteps} disabled={props.btnHide || props.nextBtn ? true : false}>\r\n            <i className=\"fas fa-forward\"></i>\r\n          </button>\r\n          <button onClick={starting} disabled={!props.btnHide}>\r\n            <i className=\"fas fa-play\"></i>\r\n          </button>\r\n          <button onClick={ending} disabled={props.btnHide}>\r\n            <i className=\"fas fa-stop\"></i>\r\n          </button>\r\n          {/* <button onClick={triggerModal} disabled={!props.btnHide}>\r\n            <i className=\"fas fa-random\"></i>\r\n          </button> */}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nconst mapStatetoProps = state => {\r\n  return{\r\n      tR: state.number.topRow,\r\n      bR: state.number.bottomRow,\r\n      c: state.number.counter,\r\n      nextBtn: state.number.nextBtnHide,\r\n      btnHide: state.number.btnHide,\r\n      fR: state.result.finalResult,\r\n      carries: state.multi.answer.carry,\r\n      results: state.multi.answer\r\n  }\r\n}\r\n\r\nconst mapDispatchtoProps = dispatch => {\r\n  return{\r\n      // random: (d, fn) => dispatch(reduxFunctions.randomNumberGenerate(d, fn)),\r\n      randomOnStart: (t, b) => dispatch(reduxFunctions.randomNumberGenerateOnStart(t, b)),\r\n      generatedOnStart: (t, b) => dispatch(reduxFunctions.generatedOnStart(t, b)),\r\n      startMulti: (t, b) => dispatch(reduxFunctions.startMultiplication(t, b)),\r\n      endMulti: () => dispatch(reduxFunctions.endMultiplication()),\r\n      countSteps: (p, u, d, r) => dispatch(reduxFunctions.stepCounter(p, u, d, r)),\r\n      prevSteps: (c, u, d, r) => dispatch(reduxFunctions.prevCounter(c, u, d, r)),\r\n      carry: (p, c, u, d) => dispatch(reduxFunctions.carryAddition(p, c, u, d)),\r\n      result: (p, u, d, r) => dispatch(reduxFunctions.resultAddition(p, u, d, r))\r\n  }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Buttons);","import * as actionTypes from './actions';\r\n\r\n// export const randomNumberGenerate = (digitCounter, changerFn) => {\r\n//     return{\r\n//         type: actionTypes.RANDOM_NUMBER,\r\n//         digitCount: digitCounter,\r\n//         rowType: changerFn\r\n//     }\r\n// }\r\nexport const randomNumberGenerateOnStart = (topRow, bottomRow) => {\r\n    return{\r\n        type: actionTypes.GENERATEONSTART,\r\n        topRow: topRow,\r\n        bottomRow: bottomRow\r\n    }\r\n}\r\nexport const generatedOnStart = (topRow, bottomRow) => {\r\n    return{\r\n        type: actionTypes.GENERATEDONSTART,\r\n        topRow: topRow,\r\n        bottomRow: bottomRow\r\n    }\r\n}\r\n// export const inputNumber = (updatedNumbers, changerFn) => {\r\n//     return{\r\n//         type: actionTypes.INPUT_NUMBER,\r\n//         newNumbers: updatedNumbers,\r\n//         rowPosition: changerFn\r\n//     }\r\n// }\r\nexport const startMultiplication = (topRow, bottomRow) => {\r\n    return{\r\n        type: actionTypes.START,\r\n        topRow: topRow,\r\n        bottomRow: bottomRow\r\n    }\r\n}\r\nexport const endMultiplication = () => {\r\n    return{\r\n        type: actionTypes.END\r\n    }\r\n}\r\nexport const stepCounter = (position, upperDigit, lowerDigit, resultDigits) => {\r\n    return{\r\n        type: actionTypes.COUNTER,\r\n        position: position,\r\n        upperDigit: upperDigit,\r\n        lowerDigit: lowerDigit,\r\n        resultDigits: resultDigits\r\n    }\r\n}\r\nexport const prevCounter = (position, upperDigit, lowerDigit, resultDigits) => {\r\n    return{\r\n        type: actionTypes.COUNTERPREV,\r\n        upperDigit: upperDigit,\r\n        lowerDigit: lowerDigit,\r\n        position: position,\r\n        resultDigits: resultDigits\r\n    }\r\n}\r\nexport const carryAddition = (position, carryNumbers, upperDigit, lowerDigit) => {\r\n    return{\r\n        type: actionTypes.COUNTERCARRY,\r\n        position: position,\r\n        carryNumbers: carryNumbers,\r\n        upperDigit: upperDigit,\r\n        lowerDigit: lowerDigit\r\n    }\r\n}\r\nexport const resultAddition = (position, upperDigit, lowerDigit) => {\r\n    return{\r\n        type: actionTypes.COUNTERRESULT,\r\n        position: position,\r\n        upperDigit: upperDigit,\r\n        lowerDigit: lowerDigit\r\n    }\r\n}\r\n\r\nexport const inputFocus = (current, changeFn) => {\r\n    return{\r\n        type: actionTypes.INPUTFOCUS,\r\n        current: current,\r\n        position: changeFn\r\n    }\r\n}\r\n\r\nexport const keypress = (key, index, changeFn) => {\r\n    return{\r\n        type: actionTypes.KEYPRESS,\r\n        key: key,\r\n        index: index,\r\n        position: changeFn\r\n    }\r\n}\r\nexport const multiply = () => {\r\n    return{\r\n        type: actionTypes.KEYPRESSMULTI\r\n    }\r\n}\r\nexport const lastFocus = () => {\r\n    return{\r\n        type: actionTypes.LASTFOCUS\r\n    }\r\n}\r\nexport const deleteDigit = (index, position) => {\r\n    return{\r\n        type: actionTypes.DELETEDIGIT,\r\n        index: index,\r\n        position: position\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classNames from './ExplainationBoard.module.css';\r\n\r\nconst ExplainationBoard = (props) => {\r\n\r\n    useEffect(()=>{\r\n        const explainerContainer = document.getElementById('explainerContainer')\r\n        explainerContainer.scroll({\r\n            top: explainerContainer.scrollHeight,\r\n            behavior: 'smooth'\r\n        });\r\n    },[props.texts])\r\n\r\n    return (\r\n        <div className={classNames.container}>\r\n            <div className={classNames.inner} id=\"explainerContainer\">\r\n                <div className={classNames.text}>\r\n                    <h3 dangerouslySetInnerHTML={{ __html: props.title.show ? props.title.title : 'Generate random numbers to start' }}></h3>\r\n                    <div>\r\n                        {Object.values(props.texts).map((c, i)=>{\r\n                            return <p dangerouslySetInnerHTML={{__html: c}} key={i}></p>\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStatetoProps = state => {\r\n    return{\r\n        title: state.number.boardTitle,\r\n        texts: state.result.allTexts\r\n    }\r\n}\r\nexport default connect(mapStatetoProps)(ExplainationBoard);","import React from 'react';\r\nimport classNames from '../../containers/NumberBoard/Board.module.css';\r\n\r\nconst Row = () => {\r\n    return (\r\n        <div className={`${classNames.row}`}>\r\n            <div className={`${classNames.title} ${classNames.brt}`}>\r\n                <h4>Hundred Thousands</h4>\r\n            </div>\r\n            <div className={`${classNames.title} ${classNames.brt}`}>\r\n                <h4>Ten Thousands</h4>\r\n            </div>\r\n            <div className={`${classNames.title} ${classNames.brt}`}>\r\n                <h4>Thousands</h4>\r\n            </div>\r\n            <div className={`${classNames.title} ${classNames.brt}`}>\r\n                <h4>Hundreds</h4>\r\n            </div>\r\n            <div className={`${classNames.title} ${classNames.brt}`}>\r\n                <h4>Tens</h4>\r\n            </div>\r\n            <div className={`${classNames.title} ${classNames.brt}`}>\r\n                <h4>Ones</h4>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Row;","import React from 'react';\r\nimport classNames from '../../containers/NumberBoard/Board.module.css';\r\n\r\nconst Row = (props) => {\r\n    let classes;\r\n    switch (props.color) {\r\n        case 'c1':\r\n            classes = `${classNames.carry} ${classNames.c1} ${classNames.brc}`\r\n            break;\r\n        case 'c2':\r\n            classes = `${classNames.carry} ${classNames.c2} ${classNames.brc}`\r\n            break;\r\n        case 'c3':\r\n            classes = `${classNames.carry} ${classNames.c3} ${classNames.brc}`\r\n            break;\r\n    \r\n        default:\r\n            classes = `${classNames.carry} ${classNames.c1} ${classNames.brc}`\r\n            break;\r\n    }\r\n    return (\r\n        <>\r\n        <div className={classNames.row}>\r\n            <div className={classes} style={props.numbers.hundredThousands.focusAction ? {backgroundColor: '#ffffc0'} : null}>\r\n                <h2>{props.numbers.hundredThousands.value}</h2>\r\n            </div>\r\n            <div className={classes} style={props.numbers.tenThousands.focusAction ? {backgroundColor: '#ffffc0'} : null}>\r\n                <h2>{props.numbers.tenThousands.value}</h2>\r\n            </div>\r\n            <div className={classes} style={props.numbers.thousands.focusAction ? {backgroundColor: '#ffffc0'} : null}>\r\n                <h2>{props.numbers.thousands.value}</h2>\r\n            </div>\r\n            <div className={classes} style={props.numbers.hundreds.focusAction ? {backgroundColor: '#ffffc0'} : null}>\r\n                <h2>{props.numbers.hundreds.value}</h2>\r\n            </div>\r\n            <div className={classes} style={props.numbers.tens.focusAction ? {backgroundColor: '#ffffc0'} : null}>\r\n                <h2>{props.numbers.tens.value}</h2>\r\n            </div>\r\n            <div className={classes}>\r\n                <h2>{props.numbers.ones.value}</h2>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Row;","import React from 'react';\r\nimport classNames from '../../containers/NumberBoard/Board.module.css';\r\n\r\nconst Row = (props) => {\r\n    let classes;\r\n    switch (props.color) {\r\n        case 'r1':\r\n            classes = `${classNames.results} ${classNames.r1} ${classNames.brf}`\r\n            break;\r\n        case 'r2':\r\n            classes = `${classNames.results} ${classNames.r2} ${classNames.brs}`\r\n            break;\r\n        case 'r3':\r\n            classes = `${classNames.results} ${classNames.r3} ${classNames.brt}`\r\n            break;\r\n        case 'r4':\r\n            classes = `${classNames.results} ${classNames.r4} ${classNames.brl}`\r\n            break;\r\n    \r\n        default:\r\n            break;\r\n    }\r\n    let zeroColor = '#D9D9D9';\r\n    if(window.innerHeight < 420){\r\n        zeroColor = 'black'\r\n    }\r\n    return (\r\n        <div className={classNames.row}>\r\n            <div className={classes} style={props.numbers.hundredThousands.focusAction ? {backgroundColor: '#ffffc0'} : props.blank || props.blankH ? {backgroundColor: 'transparent'} : null}>\r\n                {props.fRC ? <span className={classNames.frCarry}>{props.fRC.hundredThousands.carry}</span>:null}\r\n                <h1>{props.numbers.hundredThousands.value}</h1>\r\n            </div>\r\n            <div className={classes} style={props.numbers.tenThousands.focusAction ? {backgroundColor: '#ffffc0'} : props.blank ? {backgroundColor: 'transparent'} : null}>\r\n                {props.fRC ? <span className={classNames.frCarry}>{props.fRC.tenThousands.carry}</span>:null}\r\n                <h1>{props.numbers.tenThousands.value}</h1>\r\n            </div>\r\n            <div className={classes} style={props.numbers.thousands.focusAction ? {backgroundColor: '#ffffc0'} : null}>\r\n                {props.fRC ? <span className={classNames.frCarry}>{props.fRC.thousands.carry}</span>:null}\r\n                <h1>{props.numbers.thousands.value}</h1>\r\n            </div>\r\n            <div className={classes} style={props.numbers.hundreds.focusAction ? {backgroundColor: '#ffffc0'} : null}>\r\n                {props.fRC ? <span className={classNames.frCarry}>{props.fRC.hundreds.carry}</span>:null}\r\n                <h1>{props.numbers.hundreds.value}</h1>\r\n            </div>\r\n            <div className={classes} style={props.numbers.tens.focusAction ? {backgroundColor: '#ffffc0'} : props.zero ? {backgroundColor: 'transparent', color: zeroColor} : null}>\r\n                {props.fRC ? <span className={classNames.frCarry}>{props.fRC.tens.carry}</span>:null}\r\n                <h1>{props.numbers.tens.value}</h1>\r\n            </div>\r\n            <div className={classes} style={props.numbers.ones.focusAction ? {backgroundColor: '#ffffc0'} : props.zero || props.zeroO ? {backgroundColor: 'transparent', color: zeroColor} : null}>\r\n                <h1>{props.numbers.ones.value}</h1>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Row;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from '../../components/BoardHeaderRow/Row';\r\nimport Carry from '../../components/BoardCarryRow/Row';\r\nimport Result from '../../components/BoardResultsRow/Row';\r\nimport classNames from './Board.module.css';\r\n// import * as reduxFunctions from '../../store/actions/index';\r\n\r\nconst Board = (props) => {\r\n\r\n    // const inputChange = (e, i, tb, changeFN)=>{\r\n    //     let maxLength = 1;\r\n    //     if (e.target.value.length > maxLength){\r\n    //         e.target.value = e.target.value.slice(0, maxLength);\r\n    //     }\r\n    //     let old = [...tb]\r\n    //     old[i] = e.target.value;\r\n    //     props.input(old, changeFN);\r\n    // }\r\n\r\n    // let nameInput;\r\n\r\n    // useEffect(()=>{\r\n    //     nameInput.focus();\r\n    // },[nameInput])\r\n\r\n    let rows;\r\n\r\n    switch (props.resultRow) {\r\n        case 1:\r\n            rows = <>\r\n                <Result numbers={props.r1} color='r1' blank fRC={props.r4} />\r\n            </>\r\n            break;\r\n        case 2:\r\n            rows = <>\r\n                <Result numbers={props.r1} color='r1' blank fRC={props.r4} />\r\n                <Result numbers={props.r2} color='r2' blankH zeroO />\r\n                <Result numbers={props.r4} color='r4'/>\r\n            </>\r\n            break;\r\n        case 3:\r\n            rows = <>\r\n                <Result numbers={props.r1} color='r1' blank fRC={props.r4} />\r\n                <Result numbers={props.r2} color='r2' blankH zeroO />\r\n                <Result numbers={props.r3} color='r3' zero/>\r\n                <Result numbers={props.r4} color='r4'/>\r\n            </>\r\n            break;\r\n    \r\n        default:\r\n            rows = null;\r\n            break;\r\n    }\r\n\r\n    const focusColor = (c1, c2) => {\r\n        const yellow = {backgroundColor: 'yellow'};\r\n        const red = {backgroundColor: '#fa7474'};\r\n        let color;\r\n        if(c1){\r\n            color = yellow;\r\n        }else if(c2){\r\n            color = red;\r\n        }else{\r\n            color = null;\r\n        }\r\n        return color;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classNames.container}>\r\n            <div className={classNames.inner}>\r\n                <Header />\r\n\r\n                <Carry numbers={props.tLofCarry} color='c1' />\r\n                <Carry numbers={props.mLofCarry} color='c2' />\r\n                <Carry numbers={props.bLofCarry} color='c3' />\r\n\r\n                <div className={classNames.row}>\r\n                    <div className={`${classNames.digits} ${classNames.brc}`}>\r\n                        <h1>{null}</h1>\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brc}`}>\r\n                        <h1>{null}</h1>\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brc}`}>\r\n                        <h1>{null}</h1>\r\n                    </div>\r\n                    <div\r\n                    className={`${classNames.digits} ${classNames.brc} ${classNames.pointer}`}\r\n                    // onClick={() => {if(!props.inputDisable){props.inputFocus(0, 'inputFocusTop')}}}\r\n                    style={focusColor(props.focusInput.t.first, props.inputFocusTop[0])}\r\n                    >\r\n                        <h1>{props.tR[0]}</h1>\r\n                        {/* <input\r\n                        type='number'\r\n                        onClick={() => props.inputFocus(0, 'inputFocusTop')}\r\n                        value={props.tR[0]}\r\n                        onChange={(e)=>inputChange(e, 0, props.tR, 'topRow')} max=\"1\"\r\n                        style={focusColor(props.focusInput.t.first, props.inputFocusTop[0])}\r\n                        ref={(input) => { nameInput = input; }}\r\n                        disabled={props.inputDisable}\r\n                        /> */}\r\n                    </div>\r\n                    <div\r\n                    className={`${classNames.digits} ${classNames.brc} ${classNames.pointer}`}\r\n                    // onClick={() => {if(!props.inputDisable){props.inputFocus(1, 'inputFocusTop')}}}\r\n                    style={focusColor(props.focusInput.t.second, props.inputFocusTop[1])}\r\n                    >\r\n                        <h1>{props.tR[1]}</h1>\r\n                        {/* <input\r\n                        type='number'\r\n                        onClick={() => props.inputFocus(1, 'inputFocusTop')}\r\n                        value={props.tR[1]}\r\n                        onChange={(e)=>inputChange(e, 1, props.tR, 'topRow')} max=\"1\"\r\n                        style={focusColor(props.focusInput.t.second, props.inputFocusTop[1])}\r\n                        disabled={props.inputDisable}\r\n                        /> */}\r\n                    </div>\r\n                    <div\r\n                    className={`${classNames.digits} ${classNames.brc} ${classNames.pointer}`}\r\n                    // onClick={() => {if(!props.inputDisable){props.inputFocus(2, 'inputFocusTop')}}}\r\n                    style={focusColor(props.focusInput.t.third, props.inputFocusTop[2])}\r\n                    >\r\n                        <h1>{props.tR[2]}</h1>\r\n                        {/* <input\r\n                        type='number'\r\n                        onClick={() => props.inputFocus(2, 'inputFocusTop')}\r\n                        value={props.tR[2]}\r\n                        onChange={(e)=>inputChange(e, 2, props.tR, 'topRow')}\r\n                        max=\"1\"\r\n                        style={focusColor(props.focusInput.t.third, props.inputFocusTop[2])}\r\n                        disabled={props.inputDisable}\r\n                        /> */}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classNames.row} >\r\n                    <div className={`${classNames.digits} ${classNames.brd}`}>\r\n                        <h1 className={classNames.cross}>X</h1>\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brd}`}>\r\n                        <h1>{null}</h1>\r\n                    </div>\r\n                    <div className={`${classNames.digits} ${classNames.brd}`}>\r\n                        <h1>{null}</h1>\r\n                    </div>\r\n                    <div \r\n                    className={`${classNames.digits} ${classNames.brd} ${classNames.bI1} ${classNames.pointer}`}\r\n                    // onClick={() => {if(!props.inputDisable){props.inputFocus(0, 'inputFocusBottom')}}}\r\n                    style={focusColor(props.focusInput.b.first, props.inputFocusBottom[0])}\r\n                    >\r\n                        <h1>{props.bR[0]}</h1>\r\n                        {/* <input\r\n                        type='number'\r\n                        onClick={() => props.inputFocus(0, 'inputFocusBottom')}\r\n                        value={props.bR[0]}\r\n                        onChange={(e)=>inputChange(e, 0, props.bR, 'bottomRow')} max=\"1\"\r\n                        style={focusColor(props.focusInput.b.first, props.inputFocusBottom[0])}\r\n                        disabled={props.inputDisable}\r\n                        className={classNames.bI1}\r\n                        /> */}\r\n                    </div>\r\n                    <div\r\n                    className={`${classNames.digits} ${classNames.brd} ${classNames.bI2} ${classNames.pointer}`}\r\n                    // onClick={() => {if(!props.inputDisable){props.inputFocus(1, 'inputFocusBottom')}}}\r\n                    style={focusColor(props.focusInput.b.second, props.inputFocusBottom[1])}\r\n                    >\r\n                        <h1>{props.bR[1]}</h1>\r\n                        {/* <input\r\n                        type='number'\r\n                        onClick={() => props.inputFocus(1, 'inputFocusBottom')}\r\n                        value={props.bR[1]}\r\n                        onChange={(e)=>inputChange(e, 1, props.bR, 'bottomRow')} max=\"1\"\r\n                        style={focusColor(props.focusInput.b.second, props.inputFocusBottom[1])}\r\n                        disabled={props.inputDisable}\r\n                        className={classNames.bI2}\r\n                        /> */}\r\n                    </div>\r\n                    <div\r\n                    className={`${classNames.digits} ${classNames.brd} ${classNames.bI3} ${classNames.pointer}`}\r\n                    // onClick={() => {if(!props.inputDisable){props.inputFocus(2, 'inputFocusBottom')}}}\r\n                    style={focusColor(props.focusInput.b.third, props.inputFocusBottom[2])}\r\n                    >\r\n                        <h1>{props.bR[2]}</h1>\r\n                        {/* <input\r\n                        type='number'\r\n                        onClick={() => props.inputFocus(2, 'inputFocusBottom')}\r\n                        value={props.bR[2]}\r\n                        onChange={(e)=>inputChange(e, 2, props.bR, 'bottomRow')} max=\"1\"\r\n                        style={focusColor(props.focusInput.b.third, props.inputFocusBottom[2])}\r\n                        disabled={props.inputDisable}\r\n                        className={classNames.bI3}\r\n                        /> */}\r\n                    </div>\r\n                </div>\r\n\r\n                \r\n                {rows}\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStatetoProps = state => {\r\n    return{\r\n        tR: state.number.topRow,\r\n        bR: state.number.bottomRow,\r\n        // inputDisable: state.number.inputDisable,\r\n        tLofCarry : state.carry.topLine,\r\n        mLofCarry : state.carry.middleLine,\r\n        bLofCarry : state.carry.bottomLine,\r\n        r1 : state.result.topResult,\r\n        r2 : state.result.middleResult,\r\n        r3 : state.result.bottomResult,\r\n        r4 : state.result.finalResult,\r\n        focusInput: state.result.focusingInput,\r\n        resultRow : state.number.resutltsRow,\r\n        inputFocusTop : state.numpad.inputFocusTop,\r\n        inputFocusBottom : state.numpad.inputFocusBottom\r\n    }\r\n}\r\n// const mapDispatchtoProps = dispatch => {\r\n//     return{\r\n//         input: (newNum, fn) => dispatch(reduxFunctions.inputNumber(newNum, fn)),\r\n//         inputFocus: (c, fn) => dispatch(reduxFunctions.inputFocus(c, fn))\r\n//     }\r\n// }\r\n\r\nexport default connect(mapStatetoProps)(Board);","import React from 'react';\r\nimport classNames from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className={classNames.header}>\r\n            <div className={classNames.logo}>\r\n                <a href='!#'>\r\n                    <img src=\"https://zoomcbd.com/math/logo.svg\" alt=\"Logo\" />Multi Plus\r\n                </a>\r\n            </div>\r\n            <div className={classNames.ico}>\r\n                <i className=\"fas fa-bars\"></i>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classNames from './Keypad.module.css';\r\nimport * as reduxFunctions from '../../store/actions/index';\r\n\r\nconst Keypad = (props) => {\r\n    const getIndexPosition = () => {\r\n        let convertToArray = Object.values(props.iFT) \r\n        let index = convertToArray.indexOf(true);\r\n        let position = 'topRow';\r\n        if(index === -1){\r\n            convertToArray = Object.values(props.iFB);\r\n            index = convertToArray.indexOf(true);\r\n            position = 'bottomRow'\r\n            // if(index === -1){\r\n            //     index = true\r\n            // }\r\n        }\r\n        return {index, position};\r\n    }\r\n    const onKeyPress = (key) => {\r\n        const indexPosition = getIndexPosition();\r\n        if(indexPosition.index === -1){\r\n            alert('Press the start button below')\r\n        }else{\r\n            if(indexPosition.position === 'bottomRow'){\r\n                props.onPress(key, indexPosition.index, 'bottomRow')\r\n                if(indexPosition.index-1 !== -1){\r\n                    props.inputFocus(indexPosition.index-1, 'inputFocusBottom' )\r\n                }else{\r\n                    props.lastFocus()\r\n                }\r\n            }else{\r\n                props.onPress(key, indexPosition.index, 'topRow')\r\n                props.inputFocus(indexPosition.index-1, 'inputFocusTop')\r\n                if(indexPosition.index-1 === -1 && props.tR[2]){\r\n                    props.inputFocus(2, 'inputFocusBottom' )\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const multiply = () => {\r\n        if(!props.bR[2] || getIndexPosition().position === 'topRow') props.multiply();\r\n    }\r\n\r\n    const deleteDigit = () => {\r\n        const indexPosition = getIndexPosition();\r\n        if(indexPosition.position === 'bottomRow'){\r\n            if(indexPosition.index === -1){\r\n                props.deleteDigit(0, 'bottomRow');\r\n                props.inputFocus(1, 'inputFocusBottom' );\r\n            }else{\r\n                props.deleteDigit(indexPosition.index, 'bottomRow');\r\n                if(indexPosition.index+1 !== 3){\r\n                    props.inputFocus(indexPosition.index+1, 'inputFocusBottom');\r\n                }else{\r\n                    props.inputFocus(0, 'inputFocusTop' )\r\n                }\r\n            }\r\n        }else{\r\n            props.deleteDigit(indexPosition.index, 'topRow');\r\n            if(indexPosition.index+1 !== 3){\r\n                props.inputFocus(indexPosition.index+1, 'inputFocusTop')\r\n            }else{\r\n                props.inputFocus(2, 'inputFocusTop')\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div className={classNames.container}>\r\n            <div className={classNames.digits}>\r\n                <button className={classNames.digit} onClick={()=>{if(!props.inputDisable){onKeyPress(7)}}}>7</button>\r\n                <button className={classNames.digit} onClick={()=>{if(!props.inputDisable){onKeyPress(8)}}}>8</button>\r\n                <button className={classNames.digit} onClick={()=>{if(!props.inputDisable){onKeyPress(9)}}}>9</button>\r\n                <button className={classNames.digit} onClick={()=>{if(!props.inputDisable){onKeyPress(4)}}}>4</button>\r\n                <button className={classNames.digit} onClick={()=>{if(!props.inputDisable){onKeyPress(5)}}}>5</button>\r\n                <button className={classNames.digit} onClick={()=>{if(!props.inputDisable){onKeyPress(6)}}}>6</button>\r\n                <button className={classNames.digit} onClick={()=>{if(!props.inputDisable){onKeyPress(1)}}}>1</button>\r\n                <button className={classNames.digit} onClick={()=>{if(!props.inputDisable){onKeyPress(2)}}}>2</button>\r\n                <button className={classNames.digit} onClick={()=>{if(!props.inputDisable){onKeyPress(3)}}}>3</button>\r\n                <button className={classNames.digit} onClick={()=>{multiply()}}>\r\n                    <i className=\"fas fa-times\"></i>\r\n                </button>\r\n                <button className={classNames.digit} onClick={()=>{if(!props.inputDisable){onKeyPress(0)}}}>0</button>\r\n                <button className={classNames.digit} onClick={()=>deleteDigit()}>\r\n                    <i className=\"fas fa-backspace\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStatetoProps = state => {\r\n    return{\r\n        tR: state.number.topRow,\r\n        bR: state.number.bottomRow,\r\n        iFT : state.numpad.inputFocusTop,\r\n        iFB : state.numpad.inputFocusBottom,\r\n        inputDisable: state.number.inputDisable\r\n    }\r\n}\r\nconst mapDispatchtoProps = dispatch => {\r\n    return{\r\n        onPress: (key, index, changeFn) => dispatch(reduxFunctions.keypress(key, index, changeFn)),\r\n        inputFocus: (c, fn) => dispatch(reduxFunctions.inputFocus(c, fn)),\r\n        multiply: () => dispatch(reduxFunctions.multiply()),\r\n        deleteDigit: (index, position) => dispatch(reduxFunctions.deleteDigit(index, position)),\r\n        lastFocus: () => dispatch(reduxFunctions.lastFocus()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Keypad);","import React, { useEffect, useState } from 'react';\r\nimport Buttons from '../ActionButtons/Buttons';\r\nimport ExplainationBoard from '../ExplainationBoard/ExplainationBoard';\r\nimport Board from '../NumberBoard/Board';\r\nimport classNames from './Layout.module.css';\r\nimport Header from '../Header/Header';\r\nimport Keypad from '../Keypad/Keypad';\r\n\r\nconst Layout = () => {\r\n\r\n    const [arrow, setArrow] = useState(<i className=\"fas fa-arrow-circle-left\"></i>)\r\n    const [toggleKeypad, setToggleKeypad] = useState(true)\r\n\r\n    useEffect(()=>{\r\n        document.getElementById('numberPad').classList.add(`${classNames.number_pad_container_grow}`)\r\n        setArrow(<i className=\"fas fa-arrow-circle-right\"></i>)\r\n        setToggleKeypad(false)\r\n    },[])\r\n\r\n    const keypadToggle = () => {\r\n        const numberPad = document.getElementById('numberPad');\r\n\r\n        if(toggleKeypad){\r\n            numberPad.classList.remove(`${classNames.number_pad_container_shrink}`)\r\n            numberPad.classList.add(`${classNames.number_pad_container_grow}`);\r\n            setArrow(<i className=\"fas fa-arrow-circle-right\"></i>)\r\n            setToggleKeypad(false)\r\n        }else{\r\n            numberPad.classList.remove(`${classNames.number_pad_container_grow}`);\r\n            numberPad.classList.add(`${classNames.number_pad_container_shrink}`)\r\n            setArrow(<i className=\"fas fa-arrow-circle-left\"></i>)\r\n            setToggleKeypad(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={classNames.container}>\r\n                <Header />\r\n                <div className={classNames.inner}>\r\n                    <div className={classNames.board_container}>\r\n                        <Board/>\r\n                    </div>\r\n                    <div className={classNames.explainer_container}>\r\n                        <ExplainationBoard/>\r\n                    </div>\r\n                    <div className={`${classNames.number_pad_container}`} id=\"numberPad\">\r\n                        <div className={classNames.keypadTrigger}>\r\n                            <button onClick={keypadToggle}>\r\n                                {arrow}\r\n                            </button>\r\n                        </div>\r\n                        <Keypad/>\r\n                    </div>\r\n                </div>\r\n                <Buttons/>\r\n            </div>\r\n            <div className={classNames.mvlogo}>\r\n                <img src='https://zoomcbd.com/math/logo.svg' alt='Logo' />\r\n            </div>\r\n            <div className={classNames.mvmenu}>\r\n                <i className=\"fas fa-bars\"></i>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nexport default Layout;","import Layout from \"./containers/Layout/Layout\";\n\n\nfunction App() {\n  return (\n    <Layout />\n  );\n}\n\nexport default App;\n","import * as actionTypes from '../actions/actions';\r\nimport texts_1x1 from '../texts/text_1x1';\r\nimport texts_2x1 from '../texts/text_2x1';\r\nimport texts_2x2 from '../texts/text_2x2';\r\nimport texts_3x1 from '../texts/text_3x1';\r\nimport texts_3x2 from '../texts/text_3x2';\r\nimport texts_3x3 from '../texts/text_3x3';\r\n\r\nconst initialState = {\r\n    topResult:{\r\n        ones: {focusAction: false, value: null},\r\n        tens: {focusAction: false, value: null},\r\n        hundreds: {focusAction: false, value: null},\r\n        thousands: {focusAction: false, value: null},\r\n        tenThousands: {focusAction: false, value: null},\r\n        hundredThousands: {focusAction: false, value: null}\r\n    },\r\n    middleResult:{\r\n        ones: {focusAction: false, value: null},\r\n        tens: {focusAction: false, value: null},\r\n        hundreds: {focusAction: false, value: null},\r\n        thousands: {focusAction: false, value: null},\r\n        tenThousands: {focusAction: false, value: null},\r\n        hundredThousands: {focusAction: false, value: null}\r\n    },\r\n    bottomResult:{\r\n        ones: {focusAction: false, value: null},\r\n        tens: {focusAction: false, value: null},\r\n        hundreds: {focusAction: false, value: null},\r\n        thousands: {focusAction: false, value: null},\r\n        tenThousands: {focusAction: false, value: null},\r\n        hundredThousands: {focusAction: false, value: null}\r\n    },\r\n    finalResult:{\r\n        ones: {focusAction: false, value: null},\r\n        tens: {focusAction: false, value: null},\r\n        hundreds: {focusAction: false, value: null},\r\n        thousands: {focusAction: false, value: null},\r\n        tenThousands: {focusAction: false, value: null},\r\n        hundredThousands: {focusAction: false, value: null}\r\n    },\r\n    focusingInput: {\r\n        t:{\r\n            first: false,\r\n            second: false,\r\n            third: false\r\n        },\r\n        b:{\r\n            first: false,\r\n            second: false,\r\n            third: false\r\n        },\r\n    },\r\n    allTexts: {},\r\n    textCounter: 0\r\n};\r\n\r\nlet nto;\r\n\r\nconst result = (state = initialState, action)=>{\r\n    if(action.type === actionTypes.END){\r\n        return initialState;\r\n    }\r\n    let returnedObject = {};\r\n\r\n    let r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18;\r\n\r\n    let fc1, fc2, fc3, fc4, fc5;\r\n\r\n    let t1, t2, t3, b1, b2, b3, c1, c2, c4, c5, c7, c8;\r\n\r\n    let textsLines;\r\n\r\n    if(action.type === actionTypes.COUNTER){\r\n        r1 = action.resultDigits.result.rL1.rL11;\r\n        r2 = action.resultDigits.result.rL1.rL12;\r\n        r3 = action.resultDigits.result.rL1.rL13;\r\n        r4 = action.resultDigits.result.rL1.rL14;\r\n        r5 = action.resultDigits.result.rL2.rL21;\r\n        r6 = action.resultDigits.result.rL2.rL22;\r\n        r7 = action.resultDigits.result.rL2.rL23;\r\n        r8 = action.resultDigits.result.rL2.rL24;\r\n        r9 = action.resultDigits.result.rL3.rL31;\r\n        r10 = action.resultDigits.result.rL3.rL32;\r\n        r11 = action.resultDigits.result.rL3.rL33;\r\n        r12 = action.resultDigits.result.rL3.rL34;\r\n\r\n        r13 = action.resultDigits.finalResult.r.fr1;\r\n        r14 = action.resultDigits.finalResult.r.fr2;\r\n        r15 = action.resultDigits.finalResult.r.fr3;\r\n        r16 = action.resultDigits.finalResult.r.fr4;\r\n        r17 = action.resultDigits.finalResult.r.fr5;\r\n        r18 = action.resultDigits.finalResult.r.fr6;\r\n\r\n        fc1 = action.resultDigits.finalResult.c.fc1;\r\n        fc2 = action.resultDigits.finalResult.c.fc2;\r\n        fc3 = action.resultDigits.finalResult.c.fc3;\r\n        fc4 = action.resultDigits.finalResult.c.fc4;\r\n        fc5 = action.resultDigits.finalResult.c.fc5;\r\n\r\n        t1 = action.resultDigits.number.t1;\r\n        t2 = action.resultDigits.number.t2;\r\n        t3 = action.resultDigits.number.t3;\r\n        b1 = action.resultDigits.number.b1;\r\n        b2 = action.resultDigits.number.b2;\r\n        b3 = action.resultDigits.number.b3;\r\n\r\n        c1 = action.resultDigits.carry.cL1.cL11;\r\n        c2 = action.resultDigits.carry.cL1.cL12;\r\n        c4 = action.resultDigits.carry.cL2.cL21;\r\n        c5 = action.resultDigits.carry.cL2.cL22;\r\n        c7 = action.resultDigits.carry.cL3.cL31;\r\n        c8 = action.resultDigits.carry.cL3.cL32;\r\n\r\n        if(action.upperDigit === 1 && action.lowerDigit === 1){\r\n            textsLines = texts_1x1(t1, b1, r1, r2);\r\n        }else if(action.upperDigit === 2 && action.lowerDigit === 1){\r\n            textsLines = texts_2x1(t1, t2, b1, c1, r1, r2, r3);\r\n        }else if(action.upperDigit === 2 && action.lowerDigit === 2){\r\n            textsLines = texts_2x2(t1, t2, b1, b2, c1, r1, r2, r3, r5, r6, r7, r13, r14, fc1, fc2, fc3);\r\n        }else if(action.upperDigit === 3 && action.lowerDigit === 1){\r\n            textsLines = texts_3x1(t1, t2, t3, b1, c1, c2, r1, r2, r3, r4);\r\n        }else if(action.upperDigit === 3 && action.lowerDigit === 2){\r\n            textsLines = texts_3x2(t1, t2, t3, b1, b2, c1, c2, c4, c5, r1, r2, r3, r4, r5, r6, r7, r8, r13, r14, r15, r16, r17, fc1, fc2, fc3, fc4);\r\n        }else if(action.upperDigit === 3 && action.lowerDigit === 3){\r\n            textsLines = texts_3x3(t1, t2, t3, b1, b2, b3, c1, c2, c4, c5, c7, c8, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, fc1, fc2, fc3, fc4, fc5);\r\n        }\r\n\r\n        switch (action.position) {\r\n            case 0:\r\n                if(action.upperDigit === 1 && action.lowerDigit === 1){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            ones:{\r\n                                focusAction: true,\r\n                                value: r1,\r\n                            },\r\n                            tens:{\r\n                                focusAction: r2 ? true : false,\r\n                                value: r2 === 0 ? null : r2\r\n                            }\r\n                        }\r\n                    }\r\n                }else{\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            ones:{\r\n                                focusAction: true,\r\n                                value: r1\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            third: true\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b,\r\n                            third: true\r\n                        },\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    }\r\n                }\r\n            case 1:\r\n                const logic1  = action.upperDigit === 2 && action.lowerDigit === 1;\r\n                const logic2 = action.upperDigit === 2 && action.lowerDigit === 2;\r\n                if(logic1 || logic2){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            ones:{\r\n                                ...state.topResult.ones,\r\n                                focusAction: false\r\n                            },\r\n                            tens:{\r\n                                focusAction: true,\r\n                                value: r2\r\n                            },\r\n                            hundreds:{\r\n                                focusAction: r3 ? true : false,\r\n                                value: r3\r\n                            }\r\n                        }\r\n                    }\r\n                }else{\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            ones:{\r\n                                ...state.topResult.ones,\r\n                                focusAction: false\r\n                            },\r\n                            tens:{\r\n                                focusAction: true,\r\n                                value: r2\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            second: true,\r\n                            third: false\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b\r\n                        },\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    }\r\n                }\r\n            case 2:\r\n                return{\r\n                    ...state,\r\n                    topResult:{\r\n                        ...state.topResult,\r\n                        tens:{\r\n                            ...state.topResult.tens,\r\n                            focusAction: false\r\n                        },\r\n                        hundreds:{\r\n                            focusAction: true,\r\n                            value: r3\r\n                        },\r\n                        thousands:{\r\n                            focusAction: r4 ? true : false,\r\n                            value: r4,\r\n                        },\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    },\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            first: true,\r\n                            second: false\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b\r\n                        },\r\n                    }\r\n                }\r\n            case 3:\r\n                if(action.upperDigit === 2 && action.lowerDigit === 2){\r\n                    returnedObject = {\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            first: false,\r\n                            second: false\r\n                        }\r\n                    }\r\n                }else{\r\n                    returnedObject = {\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            first: false\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    topResult:{\r\n                        ...state.topResult,\r\n                        tens:{\r\n                            ...state.topResult.tens,\r\n                            focusAction: false\r\n                        },\r\n                        hundreds:{\r\n                            ...state.topResult.hundreds,\r\n                            focusAction: false\r\n                        },\r\n                        thousands:{\r\n                            ...state.topResult.thousands,\r\n                            focusAction: false\r\n                        }\r\n                    },\r\n                    middleResult:{\r\n                        ...state.middleResult,\r\n                        ones:{\r\n                            ...state.middleResult.ones,\r\n                            focusAction: true,\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    },\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...returnedObject\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b,\r\n                            third: false,\r\n                            second: true\r\n                        },\r\n                    }\r\n                }\r\n            case 4:\r\n                return{\r\n                    ...state,\r\n                    middleResult:{\r\n                        ...state.middleResult,\r\n                        ones:{\r\n                            ...state.middleResult.ones,\r\n                            focusAction: false\r\n                        },\r\n                        tens:{\r\n                            focusAction: true,\r\n                            value: r5\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    },\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            third: true\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b\r\n                        },\r\n                    }\r\n                }\r\n            case 5:\r\n                if(action.upperDigit === 2 && action.lowerDigit === 2){\r\n                    returnedObject = {\r\n                        middleResult:{\r\n                            ...state.middleResult,\r\n                            tens:{\r\n                                ...state.middleResult.tens,\r\n                                focusAction: false\r\n                            },\r\n                            hundreds:{\r\n                                focusAction: true,\r\n                                value: r6,\r\n                                carry:  null\r\n                            },\r\n                            thousands:{\r\n                                focusAction: r7 ? true:false,\r\n                                value: r7\r\n                            }\r\n                        }\r\n                    }\r\n                }else{\r\n                    returnedObject = {\r\n                        middleResult:{\r\n                            ...state.middleResult,\r\n                            tens:{\r\n                                ...state.middleResult.tens,\r\n                                focusAction: false\r\n                            },\r\n                            hundreds:{\r\n                                focusAction: true,\r\n                                value: r6\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            third: false,\r\n                            second: true\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b\r\n                        },\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    }\r\n                }\r\n            case 6:\r\n                return{\r\n                    ...state,\r\n                    middleResult:{\r\n                        ...state.middleResult,\r\n                        hundreds:{\r\n                            ...state.middleResult.hundreds,\r\n                            focusAction: false\r\n                        },\r\n                        thousands:{\r\n                            focusAction: true,\r\n                            value: r7\r\n                        },\r\n                        tenThousands:{\r\n                            focusAction: r8 ? true : false,\r\n                            value: r8,\r\n                            carry: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    },\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            second: false,\r\n                            first: true\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b\r\n                        },\r\n                    }\r\n                }\r\n            case 7:\r\n                return{\r\n                    ...state,\r\n                    middleResult:{\r\n                        ...state.middleResult,\r\n                        thousands:{\r\n                            ...state.middleResult.thousands,\r\n                            focusAction: false\r\n                        },\r\n                        tenThousands:{\r\n                            ...state.middleResult.tenThousands,\r\n                            focusAction: false\r\n                        }\r\n                    },\r\n                    bottomResult:{\r\n                        ...state.bottomResult,\r\n                        ones:{\r\n                            ...state.bottomResult.ones,\r\n                            focusAction: true,\r\n                            value: 0\r\n                        },\r\n                        tens:{\r\n                            ...state.bottomResult.tens,\r\n                            focusAction: true,\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    },\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            first: false\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b,\r\n                            second: false,\r\n                            first: true\r\n                        },\r\n                    }\r\n                }\r\n            case 8:\r\n                return{\r\n                    ...state,\r\n                    bottomResult:{\r\n                        ...state.bottomResult,\r\n                        ones:{\r\n                            ...state.bottomResult.ones,\r\n                            focusAction: false\r\n                        },\r\n                        tens:{\r\n                            ...state.bottomResult.tens,\r\n                            focusAction: false\r\n                        },\r\n                        hundreds:{\r\n                            focusAction: true,\r\n                            value: r9\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    },\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            third: true\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b\r\n                        },\r\n                    }\r\n                }\r\n            case 9:\r\n                return{\r\n                    ...state,\r\n                    bottomResult:{\r\n                        ...state.bottomResult,\r\n                        hundreds:{\r\n                            ...state.bottomResult.hundreds,\r\n                            focusAction: false,\r\n                        },\r\n                        thousands:{\r\n                            focusAction: true,\r\n                            value: r10\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    },\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            second: true,\r\n                            third: false\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b\r\n                        },\r\n                    }\r\n                }\r\n            case 10:\r\n                return{\r\n                    ...state,\r\n                    bottomResult:{\r\n                        ...state.bottomResult,\r\n                        thousands:{\r\n                            ...state.bottomResult.thousands,\r\n                            focusAction: false,\r\n                        },\r\n                        tenThousands:{\r\n                            focusAction: true,\r\n                            value: r11\r\n                        },\r\n                        hundredThousands:{\r\n                            focusAction: r12 ? true : false,\r\n                            value: r12\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    },\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            second: false,\r\n                            first: true\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b\r\n                        },\r\n                    }\r\n                }\r\n            case 11:\r\n                return{\r\n                    ...state,\r\n                    middleResult:{\r\n                        ...state.middleResult,\r\n                        hundreds:{\r\n                            ...state.middleResult.hundreds,\r\n                            focusAction: false\r\n                        },\r\n                        thousands:{\r\n                            ...state.middleResult.thousands,\r\n                            focusAction: false\r\n                        },\r\n                        tenThousands:{\r\n                            ...state.middleResult.tenThousands,\r\n                            focusAction: false\r\n                        }\r\n                    },\r\n                    bottomResult:{\r\n                        ...state.bottomResult,\r\n                        tenThousands:{\r\n                            ...state.bottomResult.tenThousands,\r\n                            focusAction: false\r\n                        },\r\n                        hundredThousands:{\r\n                            ...state.bottomResult.hundredThousands,\r\n                            focusAction: false\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    },\r\n                    focusingInput:{\r\n                        ...initialState.focusingInput\r\n                    }\r\n                }\r\n            case 12:\r\n                return{\r\n                    ...state,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        ones:{\r\n                            focusAction: true,\r\n                            value: r13\r\n                        },\r\n                        tens:{\r\n                            ...state.finalResult.tens,\r\n                            carry: fc1\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    }\r\n                }\r\n            case 13:\r\n                return{\r\n                    ...state,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        ones:{\r\n                            ...state.finalResult.ones,\r\n                            focusAction: false,\r\n                        },\r\n                        tens:{\r\n                            focusAction: true,\r\n                            value: r14,\r\n                            carry: null\r\n                        },\r\n                        hundreds:{\r\n                            ...state.finalResult.hundreds,\r\n                            carry: fc2\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    }\r\n                }\r\n            case 14:\r\n                return{\r\n                    ...state,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        tens:{\r\n                            ...state.finalResult.tens,\r\n                            focusAction: false,\r\n                        },\r\n                        hundreds:{\r\n                            focusAction: true,\r\n                            value: r15,\r\n                            carry: null\r\n                        },\r\n                        thousands:{\r\n                            ...state.finalResult.thousands,\r\n                            carry: fc3\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    }\r\n                }\r\n            case 15:\r\n                return{\r\n                    ...state,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        hundreds:{\r\n                            ...state.finalResult.hundreds,\r\n                            focusAction: false,\r\n                        },\r\n                        thousands:{\r\n                            focusAction: true,\r\n                            value: r16,\r\n                            carry: null\r\n                        },\r\n                        tenThousands:{\r\n                            ...state.finalResult.tenThousands,\r\n                            carry: fc4\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    }\r\n                }\r\n            case 16:\r\n                return{\r\n                    ...state,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        thousands:{\r\n                            ...state.finalResult.thousands,\r\n                            focusAction: false,\r\n                        },\r\n                        tenThousands:{\r\n                            focusAction: true,\r\n                            value: r17,\r\n                            carry: null\r\n                        },\r\n                        hundredThousands:{\r\n                            ...state.finalResult.hundredThousands,\r\n                            carry: fc5\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    }\r\n                }\r\n            case 17:\r\n                return{\r\n                    ...state,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        tenThousands:{\r\n                            ...state.finalResult.tenThousands,\r\n                            focusAction: false,\r\n                        },\r\n                        hundredThousands:{\r\n                            focusAction: r18 === 0? false: true,\r\n                            value: r18 === 0? null: r18,\r\n                            carry: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    }\r\n                }\r\n            case 18:\r\n                if(action.upperDigit === 1 && action.lowerDigit === 1){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            ones:{\r\n                                ...state.topResult.ones,\r\n                                focusAction: false\r\n                            },\r\n                            tens:{\r\n                                ...state.topResult.tens,\r\n                                focusAction: false\r\n                            }\r\n                        }\r\n                    }\r\n                }else if(action.upperDigit === 2 && action.lowerDigit === 1){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            tens:{\r\n                                ...state.topResult.tens,\r\n                                focusAction: false\r\n                            },\r\n                            hundreds:{\r\n                                ...state.topResult.hundreds,\r\n                                focusAction: false,\r\n                            }\r\n                        }\r\n                    }\r\n                }else if(action.upperDigit === 3 && action.lowerDigit === 1){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            hundreds:{\r\n                                ...state.topResult.hundreds,\r\n                                focusAction: false\r\n                            },\r\n                            thousands:{\r\n                                ...state.topResult.thousands,\r\n                                focusAction: false,\r\n                            }\r\n                        }\r\n                    }\r\n                }else if(action.upperDigit === 3 && action.lowerDigit === 3){\r\n                    returnedObject = {\r\n                        finalResult:{\r\n                            ...state.finalResult,\r\n                            tenThousands:{\r\n                                ...state.finalResult.tenThousands,\r\n                                carry: null\r\n                            },\r\n                            hundredThousands:{\r\n                                ...state.finalResult.hundredThousands,\r\n                                focusAction: false\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        ones: {\r\n                            ...state.finalResult.ones,\r\n                            focusAction: false,\r\n                            carry: null\r\n                        },\r\n                        tens: {\r\n                            ...state.finalResult.tens,\r\n                            focusAction: false,\r\n                            carry: null\r\n                        },\r\n                        hundreds: {\r\n                            ...state.finalResult.hundreds,\r\n                            focusAction: false,\r\n                            carry: null\r\n                        },\r\n                        thousands: {\r\n                            ...state.finalResult.thousands,\r\n                            focusAction: false,\r\n                            carry: null\r\n                        },\r\n                        tenThousands: {\r\n                            ...state.finalResult.tenThousands,\r\n                            focusAction: false,\r\n                            carry: null\r\n                        },\r\n                        hundredThousands: {\r\n                            ...state.finalResult.hundredThousands,\r\n                            focusAction: false,\r\n                            carry: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter + 1,\r\n                    allTexts: {\r\n                        ...state.allTexts,\r\n                        [action.position]: textsLines[state.textCounter].text\r\n                    },\r\n                    focusingInput:{\r\n                        ...initialState.focusingInput\r\n                    }\r\n                }\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n    if(action.type === actionTypes.COUNTERPREV){\r\n        const logic11 = action.upperDigit === 1 && action.lowerDigit === 1;\r\n        const logic21 = action.upperDigit === 2 && action.lowerDigit === 1;\r\n        const logic22 = action.upperDigit === 2 && action.lowerDigit === 2;\r\n        const logic31 = action.upperDigit === 3 && action.lowerDigit === 1;\r\n        const logic32 = action.upperDigit === 3 && action.lowerDigit === 2;\r\n        const logic33 = action.upperDigit === 3 && action.lowerDigit === 3;\r\n\r\n        fc1 = action.resultDigits.finalResult.c.fc1;\r\n        fc2 = action.resultDigits.finalResult.c.fc2;\r\n        fc3 = action.resultDigits.finalResult.c.fc3;\r\n        fc4 = action.resultDigits.finalResult.c.fc4;\r\n        fc5 = action.resultDigits.finalResult.c.fc5;\r\n\r\n        const newTextsObjectCreate = (texts) =>{\r\n\r\n            let valuesTextsArr, keysTextsArr, removedTextsArr;\r\n            let newTextsObj = {};\r\n\r\n            valuesTextsArr = Object.values(texts);\r\n            valuesTextsArr.pop();\r\n            removedTextsArr = [...valuesTextsArr];\r\n            keysTextsArr = Object.keys(texts);\r\n            for (let i = 0; i < removedTextsArr.length; i++) {\r\n                newTextsObj[keysTextsArr[i]] = removedTextsArr[i];\r\n            }\r\n\r\n            return newTextsObj;\r\n        }\r\n\r\n        switch (action.position) {\r\n            case 1:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                if(logic33 || logic31 || logic32 || logic21 || logic22){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            ones:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                third: false\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b,\r\n                                third: false\r\n                            },\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 2:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                if(logic33 || logic31 || logic32){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            ones:{\r\n                                ...state.topResult.ones,\r\n                                focusAction: true\r\n                            },\r\n                            tens:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                second: false,\r\n                                third: true\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b\r\n                            },\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 3:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                if(logic33 || logic32){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            tens:{\r\n                                ...state.topResult.tens,\r\n                                focusAction: true,\r\n                            },\r\n                            hundreds:{\r\n                                ...state.topResult.hundreds,\r\n                                focusAction: false,\r\n                                value: null\r\n                            },\r\n                            thousands:{\r\n                                ...state.topResult.thousands,\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                second: true,\r\n                                first: false\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b\r\n                            },\r\n                        }\r\n                    }\r\n                }else if(logic22){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            ones:{\r\n                                ...state.topResult.ones,\r\n                                focusAction: true\r\n                            },\r\n                            tens:{\r\n                                ...state.topResult.tens,\r\n                                focusAction: false,\r\n                                value: null\r\n                            },\r\n                            hundreds:{\r\n                                ...state.topResult.hundreds,\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                second: false,\r\n                                third: true\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b\r\n                            },\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 4:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                if(logic33 || logic32){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            hundreds:{\r\n                                ...state.topResult.hundreds,\r\n                                focusAction: true\r\n                            },\r\n                            thousands:{\r\n                                ...state.topResult.thousands,\r\n                                focusAction: state.topResult.thousands? true : false\r\n                            }\r\n                        },\r\n                        middleResult:{\r\n                            ...state.middleResult,\r\n                            ones:{\r\n                                ...state.middleResult.ones,\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                first: true,\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b,\r\n                                third: true,\r\n                                second: false\r\n                            },\r\n                        }\r\n                    }\r\n                }else if(logic22){\r\n                    returnedObject = {\r\n                        middleResult:{\r\n                            ...state.middleResult,\r\n                            ones:{\r\n                                ...state.middleResult.ones,\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            tens:{\r\n                                ...state.topResult.tens,\r\n                                focusAction: true\r\n                            },\r\n                            hundreds:{\r\n                                ...state.topResult.hundreds,\r\n                                focusAction: true\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                second: true,\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b,\r\n                                third: true,\r\n                                second: false\r\n                            },\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 5:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                if(logic33 || logic32){\r\n                    returnedObject = {\r\n                        middleResult:{\r\n                            ...state.middleResult,\r\n                            ones:{\r\n                                ...state.middleResult.ones,\r\n                                focusAction: true\r\n                            },\r\n                            tens:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                third: false\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b\r\n                            },\r\n                        }\r\n                    }\r\n                }else if(logic22){\r\n                    returnedObject = {\r\n                        middleResult:{\r\n                            ...state.middleResult,\r\n                            ones:{\r\n                                ...state.middleResult.ones,\r\n                                focusAction: true\r\n                            },\r\n                            tens:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                third: false,\r\n                                first: false\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b\r\n                            },\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 6:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                if(logic33 || logic32){\r\n                    returnedObject = {\r\n                        middleResult:{\r\n                            ...state.middleResult,\r\n                            tens:{\r\n                                ...state.middleResult.tens,\r\n                                focusAction: true\r\n                            },\r\n                            hundreds:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                third: true,\r\n                                second: false\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b\r\n                            },\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 7:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                return{\r\n                    ...state,\r\n                    middleResult:{\r\n                        ...state.middleResult,\r\n                        hundreds:{\r\n                            ...state.middleResult.hundreds,\r\n                            focusAction: true\r\n                        },\r\n                        thousands:{\r\n                            focusAction: false,\r\n                            value: null\r\n                        },\r\n                        tenThousands:{\r\n                            focusAction: false,\r\n                            value: null,\r\n                            carry: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter - 1,\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            second: true,\r\n                            first: false\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b\r\n                        },\r\n                    },\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 8:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                return{\r\n                    ...state,\r\n                    middleResult:{\r\n                        ...state.middleResult,\r\n                        thousands:{\r\n                            ...state.middleResult.thousands,\r\n                            focusAction: true\r\n                        },\r\n                        tenThousands:{\r\n                            ...state.middleResult.tenThousands,\r\n                            focusAction: state.middleResult.tenThousands.value? true : false\r\n                        }\r\n                    },\r\n                    bottomResult:{\r\n                        ...state.bottomResult,\r\n                        ones:{\r\n                            ...state.bottomResult.ones,\r\n                            focusAction: false,\r\n                            value: null\r\n                        },\r\n                        tens:{\r\n                            ...state.bottomResult.tens,\r\n                            focusAction: false,\r\n                            value: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter - 1,\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            first: true\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b,\r\n                            second: true,\r\n                            first: false\r\n                        },\r\n                    },\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 9:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                return{\r\n                    ...state,\r\n                    bottomResult:{\r\n                        ...state.bottomResult,\r\n                        ones:{\r\n                            ...state.bottomResult.ones,\r\n                            focusAction: true\r\n                        },\r\n                        tens:{\r\n                            ...state.bottomResult.tens,\r\n                            focusAction: true\r\n                        },\r\n                        hundreds:{\r\n                            focusAction: false,\r\n                            value: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter - 1,\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            third: false\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b\r\n                        },\r\n                    },\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 10:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                return{\r\n                    ...state,\r\n                    bottomResult:{\r\n                        ...state.bottomResult,\r\n                        hundreds:{\r\n                            ...state.bottomResult.hundreds,\r\n                            focusAction: true,\r\n                        },\r\n                        thousands:{\r\n                            focusAction: false,\r\n                            value: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter - 1,\r\n                    focusingInput: {\r\n                        ...state.focusingInput,\r\n                        t:{\r\n                            ...state.focusingInput.t,\r\n                            second: false,\r\n                            third: true\r\n                        },\r\n                        b:{\r\n                            ...state.focusingInput.b\r\n                        },\r\n                    },\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 11:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                if(logic33){\r\n                    returnedObject = {\r\n                        bottomResult:{\r\n                            ...state.bottomResult,\r\n                            thousands:{\r\n                                ...state.bottomResult.thousands,\r\n                                focusAction: true,\r\n                            },\r\n                            tenThousands:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            },\r\n                            hundredThousands:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                second: true,\r\n                                first: false\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b\r\n                            },\r\n                        }\r\n                    }\r\n                }else if(logic22){\r\n                    returnedObject = {\r\n                        middleResult:{\r\n                            ...state.middleResult,\r\n                            tens:{\r\n                                ...state.middleResult.tens,\r\n                                focusAction: true\r\n                            },\r\n                            hundreds:{\r\n                                focusAction: false,\r\n                                value: null,\r\n                                carry:  null\r\n                            },\r\n                            thousands:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                first: false,\r\n                                second: false,\r\n                                third: true\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b\r\n                            },\r\n                        }\r\n                    }\r\n                }else if(logic32){\r\n                    returnedObject = {\r\n                        middleResult:{\r\n                            ...state.middleResult,\r\n                            hundreds:{\r\n                                ...state.middleResult.thousands,\r\n                                focusAction: true,\r\n                            },\r\n                            thousands:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            },\r\n                            tenThousands:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                second: true,\r\n                                first: false\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b\r\n                            },\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 12:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                if(logic33){\r\n                    returnedObject = {\r\n                        bottomResult:{\r\n                            ...state.bottomResult,\r\n                            tenThousands:{\r\n                                ...state.bottomResult.tenThousands,\r\n                                focusAction: true\r\n                            },\r\n                            hundredThousands:{\r\n                                ...state.bottomResult.hundredThousands,\r\n                                focusAction: state.bottomResult.hundredThousands.value ? true : false\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                first: true\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b,\r\n                                first: true\r\n                            },\r\n                        }\r\n                    }\r\n                }else if(logic22){\r\n                    returnedObject = {\r\n                        middleResult:{\r\n                            ...state.middleResult,\r\n                            hundreds:{\r\n                                ...state.middleResult.hundreds,\r\n                                focusAction: true\r\n                            },\r\n                            thousands:{\r\n                                ...state.middleResult.thousands,\r\n                                focusAction: state.middleResult.thousands.value ? true : false\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                second: true\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b,\r\n                                second: true\r\n                            },\r\n                        }\r\n                    }\r\n                }else if(logic32){\r\n                    returnedObject = {\r\n                        middleResult:{\r\n                            ...state.middleResult,\r\n                            thousands:{\r\n                                ...state.middleResult.thousands,\r\n                                focusAction: true\r\n                            },\r\n                            tenThousands:{\r\n                                ...state.middleResult.tenThousands,\r\n                                focusAction: state.middleResult.tenThousands.value ? true : false\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                first: true\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b,\r\n                                second: true\r\n                            },\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 13:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                return{\r\n                    ...state,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        ones:{\r\n                            focusAction: false,\r\n                            value: null\r\n                        },\r\n                        tens:{\r\n                            ...state.finalResult.tens,\r\n                            carry: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 14:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                return{\r\n                    ...state,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        ones:{\r\n                            ...state.finalResult.ones,\r\n                            focusAction: true,\r\n                        },\r\n                        tens:{\r\n                            focusAction: false,\r\n                            value: null,\r\n                            carry: fc1\r\n                        },\r\n                        hundreds:{\r\n                            ...state.finalResult.hundreds,\r\n                            carry: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 15:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                return{\r\n                    ...state,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        tens:{\r\n                            ...state.finalResult.tens,\r\n                            focusAction: true,\r\n                        },\r\n                        hundreds:{\r\n                            focusAction: false,\r\n                            value: null,\r\n                            carry: fc2\r\n                        },\r\n                        thousands:{\r\n                            ...state.finalResult.thousands,\r\n                            carry: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 16:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                return{\r\n                    ...state,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        hundreds:{\r\n                            ...state.finalResult.hundreds,\r\n                            focusAction: true,\r\n                        },\r\n                        thousands:{\r\n                            focusAction: false,\r\n                            value: null,\r\n                            carry: fc3\r\n                        },\r\n                        tenThousands:{\r\n                            ...state.finalResult.tenThousands,\r\n                            carry: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 17:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n                return{\r\n                    ...state,\r\n                    finalResult:{\r\n                        ...state.finalResult,\r\n                        thousands:{\r\n                            ...state.finalResult.thousands,\r\n                            focusAction: true,\r\n                        },\r\n                        tenThousands:{\r\n                            ...state.finalResult.tenThousands,\r\n                            focusAction: false,\r\n                            value: null,\r\n                            carry: fc4\r\n                        },\r\n                        hundredThousands:{\r\n                            ...state.finalResult.hundredThousands,\r\n                            carry: null\r\n                        }\r\n                    },\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            case 18:\r\n                nto = newTextsObjectCreate(state.allTexts);\r\n\r\n                if(logic11){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            ones:{\r\n                                focusAction: false,\r\n                                value: null,\r\n                            },\r\n                            tens:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...initialState.focusingInput\r\n                        }\r\n                    }\r\n                }else if(logic21){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            ones:{\r\n                                ...state.topResult.ones,\r\n                                focusAction: true\r\n                            },\r\n                            tens:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            },\r\n                            hundreds:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            }\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                second: false,\r\n                                third: true\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b\r\n                            }\r\n                        }\r\n                    }\r\n                }else if(logic22){\r\n                    returnedObject = {\r\n                        finalResult:{\r\n                            ...state.finalResult,\r\n                            hundreds:{\r\n                                ...state.finalResult.hundreds,\r\n                                focusAction: true,\r\n                            },\r\n                            thousands:{\r\n                                focusAction: false,\r\n                                value: null,\r\n                                carry: fc3\r\n                            },\r\n                            tenThousands:{\r\n                                ...state.finalResult.tenThousands,\r\n                                carry: null\r\n                            }\r\n                        }\r\n                    }\r\n                }else if(logic31){\r\n                    returnedObject = {\r\n                        topResult:{\r\n                            ...state.topResult,\r\n                            tens:{\r\n                                ...state.topResult.tens,\r\n                                focusAction: true\r\n                            },\r\n                            hundreds:{\r\n                                focusAction: false,\r\n                                value: null\r\n                            },\r\n                            thousands:{\r\n                                focusAction: false,\r\n                                value: null,\r\n                            },\r\n                        },\r\n                        focusingInput: {\r\n                            ...state.focusingInput,\r\n                            t:{\r\n                                ...state.focusingInput.t,\r\n                                first: false,\r\n                                second: true\r\n                            },\r\n                            b:{\r\n                                ...state.focusingInput.b\r\n                            },\r\n                        }\r\n                    }\r\n                }else if(logic32){\r\n                    returnedObject = {\r\n                        finalResult:{\r\n                            ...state.finalResult,\r\n                            thousands:{\r\n                                ...state.finalResult.thousands,\r\n                                focusAction: true,\r\n                            },\r\n                            tenThousands:{\r\n                                focusAction: false,\r\n                                value: null,\r\n                                carry: fc4\r\n                            },\r\n                            hundredThousands:{\r\n                                ...state.finalResult.hundredThousands,\r\n                                carry: null\r\n                            }\r\n                        }\r\n                    }\r\n                }else if(logic33){\r\n                    returnedObject = {\r\n                        finalResult:{\r\n                            ...state.finalResult,\r\n                            tenThousands:{\r\n                                ...state.finalResult.tenThousands,\r\n                                focusAction: true,\r\n                            },\r\n                            hundredThousands:{\r\n                                focusAction: false,\r\n                                value: null,\r\n                                carry: fc5\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    ...state,\r\n                    ...returnedObject,\r\n                    textCounter: state.textCounter - 1,\r\n                    allTexts:{\r\n                        ...nto\r\n                    }\r\n                }\r\n            default:\r\n                return state\r\n        }\r\n    }else{\r\n        return state\r\n    }\r\n};\r\n\r\nexport default result;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from '../actions/actions';\r\n\r\nconst initState = {\r\n    topRow: ['','',''],\r\n    bottomRow: ['','',''],\r\n    boardTitle: {\r\n        title: '',\r\n        show: false\r\n    },\r\n    counter: 0,\r\n    nextBtnHide: false,\r\n    resutltsRow: 5,\r\n    // inputDisable: false,\r\n    btnHide: true,\r\n    trd: 3,\r\n    brd: 3\r\n}\r\n\r\nconst reducer = (state = initState, actions) => {\r\n    if(state.counter === 19){\r\n        return{\r\n            ...state,\r\n            counter: 0,\r\n            nextBtnHide: true\r\n        }\r\n    }\r\n\r\n    if(actions.type === actionTypes.COUNTERRESULT){\r\n        if(actions.upperDigit === 1 && actions.lowerDigit === 1){\r\n            if(state.counter === 1){\r\n                return{\r\n                    ...state,\r\n                    counter: 18,\r\n                }\r\n            }\r\n        }\r\n        if(actions.upperDigit === 2 && actions.lowerDigit === 1){\r\n            if(state.counter === 2){\r\n                return{\r\n                    ...state,\r\n                    counter: 18,\r\n                }\r\n            }\r\n        }\r\n        if(actions.upperDigit === 2 && actions.lowerDigit === 2){\r\n            switch (state.counter) {\r\n                case 2:\r\n                    return{\r\n                        ...state,\r\n                        counter: 3,\r\n                    }\r\n                case 6:\r\n                    return{\r\n                        ...state,\r\n                        counter: 11,\r\n                    }\r\n                case 16:\r\n                    return{\r\n                        ...state,\r\n                        counter: 18,\r\n                    }\r\n            \r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        if(actions.upperDigit === 3 && actions.lowerDigit === 1){\r\n            if(state.counter === 3){\r\n                return{\r\n                    ...state,\r\n                    counter: 18,\r\n                }\r\n            }\r\n        }\r\n        if(actions.upperDigit === 3 && actions.lowerDigit === 2){\r\n            if(state.counter === 7){\r\n                return{\r\n                    ...state,\r\n                    counter: 11,\r\n                }\r\n            }else if(state.counter === 17){\r\n                return{\r\n                    ...state,\r\n                    counter: 18,\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if(actions.type === actionTypes.COUNTERPREV){\r\n        if(actions.upperDigit === 1 && actions.lowerDigit === 1){\r\n            if(state.counter === 18){\r\n                return{\r\n                    ...state,\r\n                    counter: 0,\r\n                }\r\n            }\r\n        }\r\n        if(actions.upperDigit === 2 && actions.lowerDigit === 1){\r\n            if(state.counter === 18){\r\n                return{\r\n                    ...state,\r\n                    counter: 1,\r\n                }\r\n            }\r\n        }\r\n        if(actions.upperDigit === 2 && actions.lowerDigit === 2){\r\n            switch (state.counter) {\r\n                case 3:\r\n                    return{\r\n                        ...state,\r\n                        counter: 1,\r\n                    }\r\n                case 11:\r\n                    return{\r\n                        ...state,\r\n                        counter: 5,\r\n                    }\r\n                case 18:\r\n                    return{\r\n                        ...state,\r\n                        counter: 15,\r\n                    }\r\n            \r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        if(actions.upperDigit === 3 && actions.lowerDigit === 1){\r\n            if(state.counter === 18){\r\n                return{\r\n                    ...state,\r\n                    counter: 2,\r\n                }\r\n            }\r\n        }\r\n        if(actions.upperDigit === 3 && actions.lowerDigit === 2){\r\n            if(state.counter === 11){\r\n                return{\r\n                    ...state,\r\n                    counter: 6,\r\n                }\r\n            }else if(state.counter === 18){\r\n                return{\r\n                    ...state,\r\n                    counter: 16,\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const getLength = (r) => {\r\n        const d = [];\r\n        r.forEach((c)=>{\r\n            if(Number(c)) d.push(c)\r\n        });\r\n        return d.length;\r\n    }\r\n\r\n    const getPosition = (p) => {\r\n        if(p === 'topRow'){\r\n            return state.topRow;\r\n        }else if(p === 'bottomRow'){\r\n            return state.bottomRow;\r\n        }\r\n    }\r\n\r\n    const randomNumberGenerate = (digit) => {\r\n\r\n        let randomNumArray;\r\n        const randomNum1 = Math.floor(Math.random() * (9)) + 1;\r\n        const randomNum2 = Math.floor(Math.random() * (9)) + 1;\r\n        const randomNum3 = Math.floor(Math.random() * (9)) + 1;\r\n        const randomNumString1 = randomNum1.toString();\r\n        const randomNumString2 = randomNum2.toString();\r\n        const randomNumString3 = randomNum3.toString();\r\n\r\n        switch (digit) {\r\n            case 3:\r\n                randomNumArray = [randomNumString1, randomNumString2, randomNumString3];\r\n                break;\r\n            case 2:\r\n                randomNumArray = ['', randomNumString1, randomNumString2];\r\n                break;\r\n            case 1:\r\n                randomNumArray = ['', '', randomNumString1];\r\n                break;\r\n\r\n            default:\r\n                randomNumArray = [randomNumString1, randomNumString2, randomNumString3];\r\n                break;\r\n        }\r\n        \r\n        return randomNumArray\r\n    }\r\n\r\n    const startingObject = (top, bottom) => {\r\n        const t = top.join('')\r\n        const b = bottom.join('')\r\n        \r\n        return{\r\n            boardTitle: {\r\n                title: `We will multiply <span>${top[0]}${top[1]}${top[2]}</span> x <span>${bottom[0]}${bottom[1]}${bottom[2]}</span>. The answer is <span>${t * b}</span>, but that doesn’t matter. We don’t care about the answer here; we care only about how to get it. <span>Click Next</span>`,\r\n                show: true\r\n            },\r\n            nextBtnHide: false,\r\n            resutltsRow: b.length,\r\n            // inputDisable: true,\r\n            btnHide: false\r\n        }\r\n    }\r\n\r\n    const endingObject = {\r\n        ...state,\r\n        topRow: ['','',''],\r\n        bottomRow: ['','',''],\r\n        boardTitle: {\r\n            ...state.boardTitle,\r\n            show: false\r\n        },\r\n        counter: 0,\r\n        resutltsRow: 5,\r\n        // inputDisable: false,\r\n        btnHide: true,\r\n        trd: getLength(state.topRow),\r\n        brd: getLength(state.bottomRow)\r\n    }\r\n\r\n    switch (actions.type) {\r\n        case actionTypes.KEYPRESS:\r\n            let newArrayOnPress, keys, p;\r\n            p = getPosition(actions.position);\r\n            keys = p.keys();\r\n            newArrayOnPress = p.map((el)=>{\r\n                for(const key of keys){\r\n                    if(key === actions.index){\r\n                        return actions.key\r\n                    }else{\r\n                        return el\r\n                    }\r\n                }\r\n                return el\r\n            })\r\n            return{\r\n                ...state,\r\n                [actions.position]: newArrayOnPress\r\n            }\r\n        case actionTypes.DELETEDIGIT:\r\n            let newArrayOnDelete, keysD, positionOfDigit;\r\n            positionOfDigit = getPosition(actions.position);\r\n            keysD = positionOfDigit.keys();\r\n            newArrayOnDelete = positionOfDigit.map((el)=>{\r\n                for(const key of keysD){\r\n                    if(key === actions.index){\r\n                        return ''\r\n                    }else{\r\n                        return el\r\n                    }\r\n                }\r\n                return el\r\n            })\r\n            return{\r\n                ...state,\r\n                [actions.position]: newArrayOnDelete\r\n            }\r\n        // case actionTypes.RANDOM_NUMBER:\r\n        //     let randomNumArray = randomNumberGenerate(actions.digitCount);\r\n        //     return{\r\n        //         ...state,\r\n        //         [actions.rowType]: randomNumArray\r\n        //     }\r\n        // case actionTypes.INPUT_NUMBER:\r\n        //     return{\r\n        //         ...state,\r\n        //         [actions.rowPosition]: actions.newNumbers\r\n        //     }\r\n        case actionTypes.START:\r\n            const start = startingObject(state.topRow, state.bottomRow)\r\n            return{\r\n                ...state,\r\n                ...start,\r\n            }\r\n        case actionTypes.GENERATEONSTART:\r\n            let topRowNew, bottomRowNew;\r\n            if(getLength(state.topRow) > 0){\r\n                topRowNew = randomNumberGenerate(getLength(state.topRow))\r\n            }else{\r\n                topRowNew = randomNumberGenerate(state.trd)\r\n            }\r\n            if(getLength(state.bottomRow) > 0){\r\n                bottomRowNew = randomNumberGenerate(getLength(state.bottomRow))\r\n            }else{\r\n                bottomRowNew = randomNumberGenerate(state.brd)\r\n            }\r\n            // if(getLength(state.bottomRow) === 0 && getLength(state.topRow) > getLength(state.bottomRow)){\r\n            //     topRowNew = randomNumberGenerate(3)\r\n            //     bottomRowNew = randomNumberGenerate(3)\r\n            // }\r\n            const startOnGen = startingObject(topRowNew, bottomRowNew)\r\n            return{\r\n                ...state,\r\n                topRow: topRowNew,\r\n                bottomRow: bottomRowNew,\r\n                ...startOnGen\r\n            }\r\n        case actionTypes.END:\r\n            return{\r\n                ...endingObject\r\n            }\r\n        case actionTypes.COUNTER:\r\n            return{\r\n                ...state,\r\n                counter: state.counter + 1,\r\n            }\r\n        case actionTypes.COUNTERPREV:\r\n            if(state.counter === 0){\r\n                return{\r\n                    ...endingObject\r\n                }\r\n            }else{\r\n                return{\r\n                    ...state,\r\n                    counter: state.counter - 1,\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actions';\r\n\r\nconst initialState = {\r\n    topLine:{\r\n        ones: {focusAction: false, value: null},\r\n        tens: {focusAction: false, value: null},\r\n        hundreds: {focusAction: false, value: null},\r\n        thousands: {focusAction: false, value: null},\r\n        tenThousands: {focusAction: false, value: null},\r\n        hundredThousands: {focusAction: false, value: null}\r\n    },\r\n    middleLine:{\r\n        ones: {focusAction: false, value: null},\r\n        tens: {focusAction: false, value: null},\r\n        hundreds: {focusAction: false, value: null},\r\n        thousands: {focusAction: false, value: null},\r\n        tenThousands: {focusAction: false, value: null},\r\n        hundredThousands: {focusAction: false, value: null}\r\n    },\r\n    bottomLine:{\r\n        ones: {focusAction: false, value: null},\r\n        tens: {focusAction: false, value: null},\r\n        hundreds: {focusAction: false, value: null},\r\n        thousands: {focusAction: false, value: null},\r\n        tenThousands: {focusAction: false, value: null},\r\n        hundredThousands: {focusAction: false, value: null}\r\n    }\r\n};\r\n\r\nconst carry = (state = initialState, action)=>{\r\n    if(action.type === actionTypes.END){\r\n        return initialState;\r\n    }\r\n    let returnedObject = initialState;\r\n    const stepsFn = (obj) => {\r\n        return {\r\n            ...initialState,\r\n            [obj.line] : {\r\n                ...initialState[obj.line],\r\n                [obj.focusPos] : {\r\n                    focusAction: obj.carryNumb?true:false,\r\n                    value: obj.carryNumb\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if(action.type === actionTypes.COUNTERCARRY){\r\n\r\n        switch (action.position) {\r\n            case 0:\r\n                if(action.upperDigit === 1 && action.lowerDigit === 1){\r\n                    returnedObject = initialState;\r\n                }else{\r\n                    returnedObject = stepsFn({\r\n                        line: 'bottomLine',\r\n                        focusPos: 'tens',\r\n                        carryNumb: action.carryNumbers.cL1.cL11\r\n                    });\r\n                }\r\n                return returnedObject;\r\n            case 1:\r\n                const logic1  = action.upperDigit === 2 && action.lowerDigit === 1;\r\n                const logic2 = action.upperDigit === 2 && action.lowerDigit === 2;\r\n                if(logic1 || logic2){\r\n                    returnedObject = initialState;\r\n                }else{\r\n                    returnedObject = stepsFn({\r\n                        line: 'bottomLine',\r\n                        focusPos: 'hundreds',\r\n                        carryNumb: action.carryNumbers.cL1.cL12\r\n                    })\r\n                }\r\n                return returnedObject;\r\n            case 2:\r\n                return initialState\r\n            case 4:\r\n                return stepsFn({\r\n                    line: 'middleLine',\r\n                    focusPos: 'hundreds',\r\n                    carryNumb: action.carryNumbers.cL2.cL21\r\n                })\r\n            case 5:\r\n                if(action.upperDigit === 2 && action.lowerDigit === 2){\r\n                    returnedObject = initialState;\r\n                }else{\r\n                    returnedObject = stepsFn({\r\n                        line: 'middleLine',\r\n                        focusPos: 'thousands',\r\n                        carryNumb: action.carryNumbers.cL2.cL22\r\n                    })\r\n                }\r\n                return returnedObject\r\n            case 6:\r\n                return initialState\r\n            case 8:\r\n                return stepsFn({\r\n                    line: 'topLine',\r\n                    focusPos: 'thousands',\r\n                    carryNumb: action.carryNumbers.cL3.cL31\r\n                })\r\n            case 9:\r\n                return stepsFn({\r\n                    line: 'topLine',\r\n                    focusPos: 'tenThousands',\r\n                    carryNumb: action.carryNumbers.cL3.cL32\r\n                })\r\n            case 10:\r\n                return initialState\r\n        \r\n            default:\r\n                return state\r\n        }\r\n\r\n    }\r\n    \r\n    if(action.type === actionTypes.COUNTERPREV){\r\n        const logic11 = action.upperDigit === 1 && action.lowerDigit === 1;\r\n        const logic21 = action.upperDigit === 2 && action.lowerDigit === 1;\r\n        const logic22 = action.upperDigit === 2 && action.lowerDigit === 2;\r\n        const logic31 = action.upperDigit === 3 && action.lowerDigit === 1;\r\n        const logic32 = action.upperDigit === 3 && action.lowerDigit === 2;\r\n        const logic33 = action.upperDigit === 3 && action.lowerDigit === 3;\r\n\r\n        let c1, c2, c3, c4, c5, c6;\r\n\r\n        c1 = action.resultDigits.carry.cL1.cL11;\r\n        c2 = action.resultDigits.carry.cL1.cL12;\r\n        c3 = action.resultDigits.carry.cL2.cL21;\r\n        c4 = action.resultDigits.carry.cL2.cL22;\r\n        c5 = action.resultDigits.carry.cL3.cL31;\r\n        c6 = action.resultDigits.carry.cL3.cL32;\r\n\r\n        switch (action.position){\r\n            case 1:\r\n                return initialState\r\n            case 2:\r\n                if(logic11){\r\n                    returnedObject = initialState;\r\n                }else if(logic33 || logic32 || logic31){\r\n                    returnedObject = stepsFn({\r\n                        line: 'bottomLine',\r\n                        focusPos: 'tens',\r\n                        carryNumb: c1\r\n                    });\r\n                }\r\n                return returnedObject;\r\n            case 3:\r\n                if(logic21 || logic22){\r\n                    returnedObject = initialState;\r\n                }else if(logic33 || logic32 || logic31){\r\n                    returnedObject = stepsFn({\r\n                        line: 'bottomLine',\r\n                        focusPos: 'hundreds',\r\n                        carryNumb: c2\r\n                    })\r\n                }\r\n                return returnedObject;\r\n            case 5:\r\n                return initialState\r\n            case 6:\r\n                return stepsFn({\r\n                    line: 'middleLine',\r\n                    focusPos: 'hundreds',\r\n                    carryNumb: c3\r\n                })\r\n            case 7:\r\n                if(logic22){\r\n                    returnedObject = initialState;\r\n                }else if(logic33){\r\n                    returnedObject = stepsFn({\r\n                        line: 'middleLine',\r\n                        focusPos: 'thousands',\r\n                        carryNumb: c4\r\n                    })\r\n                }\r\n                return returnedObject\r\n            case 9:\r\n                return initialState\r\n            case 10:\r\n                if(logic33){\r\n                    return stepsFn({\r\n                        line: 'topLine',\r\n                        focusPos: 'thousands',\r\n                        carryNumb: c5\r\n                    })\r\n                }else if(logic32){\r\n                    return stepsFn({\r\n                        line: 'middleLine',\r\n                        focusPos: 'hundreds',\r\n                        carryNumb: c3\r\n                    })\r\n                }\r\n                return returnedObject\r\n            case 11:\r\n                if(logic33){\r\n                    return stepsFn({\r\n                        line: 'topLine',\r\n                        focusPos: 'tenThousands',\r\n                        carryNumb: c6\r\n                    })\r\n                }else if(logic32){\r\n                    return stepsFn({\r\n                        line: 'middleLine',\r\n                        focusPos: 'thousands',\r\n                        carryNumb: c4\r\n                    })\r\n                }\r\n                return returnedObject\r\n            default:\r\n                return state\r\n        }\r\n    }else{\r\n        return state\r\n    }\r\n\r\n};\r\n\r\nexport default carry;","const texts_1x1 = (t1, b1, r1, r2) => {\r\n\r\n    return [\r\n        {\r\n            text: `${b1} x ${t1} <br> = ${r2}${r1}`\r\n        },\r\n        {\r\n            text: `2----`\r\n        }\r\n    ]\r\n}\r\n\r\nexport default texts_1x1;","let emptySpaceText = 'Nothing';\r\n\r\nconst texts_2x1 = (t1, t2, b1, cr1, r1, r2, r3) => {\r\n\r\n    let c1;\r\n\r\n    c1 = cr1 ? cr1 : emptySpaceText;\r\n\r\n    return [\r\n        {\r\n            text: `Carries are ${c1}`\r\n        },\r\n        {\r\n            text: `2------------------`\r\n        },\r\n        {\r\n            text: `3------------------`\r\n        }\r\n    ]\r\n}\r\n\r\nexport default texts_2x1;","let emptySpaceText = 'Nothing';\r\n\r\nconst texts_2x2 = (t1, t2, b1, b2, cr1, cr4, r1, r2, r3, r5, r6, r7, r13, r14, r15, r16, fcr1, fcr2, fcr3) => {\r\n\r\n    let c1, c4, fc1, fc2, fc3;\r\n\r\n    c1 = cr1 ? cr1 : emptySpaceText;\r\n    c4 = cr4 ? cr4 : emptySpaceText;\r\n\r\n    fc1 = fcr1 ? fcr1 : emptySpaceText;\r\n    fc2 = fcr2 ? fcr2 : emptySpaceText;\r\n    fc3 = fcr3 ? fcr3 : emptySpaceText;\r\n\r\n    return [\r\n        {\r\n            text: `Carries are ${c1}, ${c4}, ${fc1}, ${fc2}, ${fc3}`\r\n        },\r\n        {\r\n            text: `2------------------`\r\n        },\r\n        {\r\n            text: `3------------------`\r\n        },\r\n        {\r\n            text: `4------------------`\r\n        },\r\n        {\r\n            text: `5------------------`\r\n        },\r\n        {\r\n            text: `6------------------`\r\n        },\r\n        {\r\n            text: `7------------------`\r\n        },\r\n        {\r\n            text: `8------------------`\r\n        },\r\n        {\r\n            text: `9------------------`\r\n        },\r\n        {\r\n            text: `10------------------`\r\n        },\r\n        {\r\n            text: `11------------------`\r\n        },\r\n        {\r\n            text: `12------------------`\r\n        }\r\n    ]\r\n}\r\n\r\nexport default texts_2x2;","let emptySpaceText = 'Nothing';\r\n\r\nconst texts_3x1 = (t1, t2, t3, b1, cr1, cr2, r1, r2, r3, r4) => {\r\n\r\n    let c1, c2;\r\n\r\n    c1 = cr1 ? cr1 : emptySpaceText;\r\n    c2 = cr2 ? cr2 : emptySpaceText;\r\n\r\n    return [\r\n        {\r\n            text: `Carries are ${c1}, ${c2}`\r\n        },\r\n        {\r\n            text: `2------------------`\r\n        },\r\n        {\r\n            text: `3------------------`\r\n        },\r\n        {\r\n            text: `4------------------`\r\n        },\r\n        {\r\n            text: `5------------------`\r\n        },\r\n        {\r\n            text: `6------------------`\r\n        },\r\n        {\r\n            text: `7------------------`\r\n        },\r\n        {\r\n            text: `8------------------`\r\n        },\r\n        {\r\n            text: `9------------------`\r\n        },\r\n        {\r\n            text: `10------------------`\r\n        },\r\n        {\r\n            text: `11------------------`\r\n        },\r\n        {\r\n            text: `12------------------`\r\n        }\r\n    ]\r\n}\r\n\r\nexport default texts_3x1;","let emptySpaceText = 'Nothing';\r\n\r\nconst texts_3x2 = (t1, t2, t3, b1, b2, cr1, cr2, cr4, cr5, r1, r2, r3, r4, r5, r6, r7, r8, r13, r14, r15, r16, r17, fcr1, fcr2, fcr3, fcr4) => {\r\n\r\n    let c1, c2, c4, c5, fc1, fc2, fc3, fc4;\r\n\r\n    c1 = cr1 ? cr1 : emptySpaceText;\r\n    c2 = cr2 ? cr2 : emptySpaceText;\r\n    c4 = cr4 ? cr4 : emptySpaceText;\r\n    c5 = cr5 ? cr5 : emptySpaceText;\r\n\r\n    fc1 = fcr1 ? fcr1 : emptySpaceText;\r\n    fc2 = fcr2 ? fcr2 : emptySpaceText;\r\n    fc3 = fcr3 ? fcr3 : emptySpaceText;\r\n    fc4 = fcr4 ? fcr4 : emptySpaceText;\r\n\r\n    return [\r\n        {\r\n            text: `Carries ${c1} ${c2} ${c4} ${c5} ${fc1} ${fc2} ${fc3} ${fc4}`\r\n        },\r\n        {\r\n            text: `2------------------`\r\n        },\r\n        {\r\n            text: `3------------------`\r\n        },\r\n        {\r\n            text: `4------------------`\r\n        },\r\n        {\r\n            text: `5------------------`\r\n        },\r\n        {\r\n            text: `6------------------`\r\n        },\r\n        {\r\n            text: `7------------------`\r\n        },\r\n        {\r\n            text: `8------------------`\r\n        },\r\n        {\r\n            text: `9------------------`\r\n        },\r\n        {\r\n            text: `10------------------`\r\n        },\r\n        {\r\n            text: `11------------------`\r\n        },\r\n        {\r\n            text: `12------------------`\r\n        },\r\n        {\r\n            text: `13------------------`\r\n        },\r\n        {\r\n            text: `14------------------`\r\n        },\r\n        {\r\n            text: `15------------------`\r\n        },\r\n        {\r\n            text: `16------------------`\r\n        },\r\n        {\r\n            text: `17------------------`\r\n        },\r\n        {\r\n            text: `18------------------`\r\n        },\r\n        {\r\n            text: `19-------------END`\r\n        }\r\n    ]\r\n}\r\n\r\nexport default texts_3x2;","let emptySpaceText = 'Nothing';\r\n\r\nconst texts_3x3 = (t1, t2, t3, b1, b2, b3, cr1, cr2, cr4, cr5, cr7, cr8, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, fcr1, fcr2, fcr3, fcr4, fcr5) => {\r\n\r\n    let c1, c2, c4, c5, c7, c8, fc1, fc2, fc3, fc4, fc5;\r\n\r\n    c1 = cr1 ? cr1 : emptySpaceText;\r\n    c2 = cr2 ? cr2 : emptySpaceText;\r\n    c4 = cr4 ? cr4 : emptySpaceText;\r\n    c5 = cr5 ? cr5 : emptySpaceText;\r\n    c7 = cr7 ? cr7 : emptySpaceText;\r\n    c8 = cr8 ? cr8 : emptySpaceText;\r\n\r\n    fc1 = fcr1 ? fcr1 : emptySpaceText;\r\n    fc2 = fcr2 ? fcr2 : emptySpaceText;\r\n    fc3 = fcr3 ? fcr3 : emptySpaceText;\r\n    fc4 = fcr4 ? fcr4 : emptySpaceText;\r\n    fc5 = fcr5 ? fcr5 : emptySpaceText;\r\n\r\n    return [\r\n        {\r\n            text: `Carries ${c1}, ${c2}, ${c4}, ${c5}, ${c7}, ${c8}, ${fc1}, ${fc2}, ${fc3}, ${fc4}, ${fc5}`\r\n        },\r\n        {\r\n            text: `2-Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.`\r\n        },\r\n        {\r\n            text: `3Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.`\r\n        },\r\n        {\r\n            text: `4Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.`\r\n        },\r\n        {\r\n            text: `5Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.`\r\n        },\r\n        {\r\n            text: `6Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.`\r\n        },\r\n        {\r\n            text: `7Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.`\r\n        },\r\n        {\r\n            text: `8Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.`\r\n        },\r\n        {\r\n            text: `9Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.`\r\n        },\r\n        {\r\n            text: `10Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.`\r\n        },\r\n        {\r\n            text: `11------------------`\r\n        },\r\n        {\r\n            text: `12------------------`\r\n        },\r\n        {\r\n            text: `13------------------`\r\n        },\r\n        {\r\n            text: `14------------------`\r\n        },\r\n        {\r\n            text: `15------------------`\r\n        },\r\n        {\r\n            text: `16------------------`\r\n        },\r\n        {\r\n            text: `17------------------`\r\n        },\r\n        {\r\n            text: `18------------------`\r\n        },\r\n        {\r\n            text: `19-------------END`\r\n        },\r\n    ]\r\n}\r\n\r\nexport default texts_3x3;","const carryNumFn = (prev, p1, p2) => {\r\n    let carryNumber;\r\n    let carryNum;\r\n    const cNumFn = (carryNumber) =>{\r\n        if(carryNumber.toString().length > 1){\r\n            carryNum = Number(carryNumber.toString().slice(0,1))\r\n        }else{\r\n            carryNum = null;\r\n        }\r\n        return carryNum;\r\n    }\r\n    if(prev){\r\n        carryNumber = (p1 * p2) + prev;\r\n        carryNum = cNumFn(carryNumber);\r\n    }else{\r\n        carryNumber = p1 * p2;\r\n        carryNum = cNumFn(carryNumber);\r\n    }\r\n    return carryNum;\r\n}\r\n\r\nexport default carryNumFn;","const resultNumFn = (prev, p1, p2) => {\r\n    let resultNumber;\r\n    let resultNum;\r\n    let result;\r\n    const rNumFn = (resultNumber) =>{\r\n        if(resultNumber.toString().length > 1){\r\n            resultNum = Number(resultNumber.toString().slice(1));\r\n        }else{\r\n            resultNum = resultNumber;\r\n        }\r\n        return resultNum;\r\n    }\r\n    if(prev){\r\n        resultNumber = (p1 * p2) + prev;\r\n        result = rNumFn(resultNumber);\r\n    }else{\r\n        resultNumber = p1 * p2;\r\n        result = rNumFn(resultNumber);\r\n    }\r\n    return result;\r\n}\r\nexport default resultNumFn;","const finalResultFn = (carry, n1, n2, n3) =>{\r\n    let resultNumber;\r\n    let resultNum;\r\n    let carryingNum;\r\n    const rNumFn = (resultNumber) =>{\r\n        if(resultNumber.toString().length > 1){\r\n            resultNum = Number(resultNumber.toString().slice(1));\r\n            carryingNum = Number(resultNumber.toString().slice(0,1));\r\n        }else{\r\n            resultNum = resultNumber;\r\n        }\r\n    }\r\n    if(carry){\r\n        resultNumber = n1 + n2 + n3 + carry;\r\n        rNumFn(resultNumber);\r\n    }else{\r\n        resultNumber = n1 + n2 + n3;\r\n        rNumFn(resultNumber);\r\n    }\r\n    return {resultNum,carryingNum};\r\n}\r\n\r\nexport default finalResultFn;","import * as actionTypes from '../actions/actions';\r\nimport carryNumFn from './Utility/carry';\r\nimport resultNumFn from './Utility/result';\r\nimport finalResultFn from './Utility/finalResult';\r\n\r\nconst initialState = {\r\n    answer : {}\r\n};\r\n\r\nconst multiplication = (state = initialState, action)=>{\r\n    if(action.type === actionTypes.START || action.type === actionTypes.GENERATEDONSTART){\r\n        \r\n        const t1 = Number(action.topRow[2]);\r\n        const t2 = Number(action.topRow[1]);\r\n        const t3 = Number(action.topRow[0]);\r\n        const b1 = Number(action.bottomRow[2]);\r\n        const b2 = Number(action.bottomRow[1]);\r\n        const b3 = Number(action.bottomRow[0]);\r\n\r\n        const c1 = carryNumFn(null, t1, b1);\r\n        const c2 = carryNumFn(c1, t2, b1);\r\n        const c3 = carryNumFn(c2, t3, b1);\r\n        const c4 = carryNumFn(null, t1, b2);\r\n        const c5 = carryNumFn(c4, t2, b2);\r\n        const c6 = carryNumFn(c5, t3, b2);\r\n        const c7 = carryNumFn(null, t1, b3);\r\n        const c8 = carryNumFn(c7, t2, b3);\r\n        const c9 = carryNumFn(c8, t3, b3);\r\n\r\n        const r1 = resultNumFn(null, t1, b1);\r\n        const r2 = resultNumFn(c1, t2, b1);\r\n        const r3 = resultNumFn(c2, t3, b1);\r\n        const r4 = c3;\r\n        const r5 = resultNumFn(null, t1, b2);\r\n        const r6 = resultNumFn(c4, t2, b2);\r\n        const r7 = resultNumFn(c5, t3, b2);\r\n        const r8 = c6;\r\n        const r9 = resultNumFn(null, t1, b3);\r\n        const r10 = resultNumFn(c7, t2, b3);\r\n        const r11 = resultNumFn(c8, t3, b3);\r\n        const r12 = c9;\r\n\r\n        const fR1 = finalResultFn(null, r1, 0, 0);\r\n        const fR2 = finalResultFn(fR1.carryingNum, r2, r5, 0);\r\n        const fR3 = finalResultFn(fR2.carryingNum, r3, r6, r9);\r\n        const fR4 = finalResultFn(fR3.carryingNum, r4, r7, r10);\r\n        const fR5 = finalResultFn(fR4.carryingNum, 0, r8, r11);\r\n        const fR6 = finalResultFn(fR5.carryingNum, 0, 0, r12);\r\n\r\n        return {\r\n            ...state,\r\n            answer:{\r\n                ...state.answer,\r\n                number : {\r\n                    t1: t1,\r\n                    t2: t2,\r\n                    t3: t3,\r\n                    b1: b1,\r\n                    b2: b2,\r\n                    b3: b3\r\n                },\r\n                carry : {\r\n                    cL1 : {\r\n                        cL11: c1,\r\n                        cL12: c2,\r\n                        cL13: c3\r\n                    },\r\n                    cL2 : {\r\n                        cL21: c4,\r\n                        cL22: c5,\r\n                        cL23: c6\r\n                    },\r\n                    cL3 : {\r\n                        cL31: c7,\r\n                        cL32: c8,\r\n                        cL33: c9\r\n                    }\r\n                },\r\n                result : {\r\n                    rL1 : {\r\n                        rL11: r1,\r\n                        rL12: r2,\r\n                        rL13: r3,\r\n                        rL14: r4,\r\n                    },\r\n                    rL2 : {\r\n                        rL21: r5,\r\n                        rL22: r6,\r\n                        rL23: r7,\r\n                        rL24: r8,\r\n                    },\r\n                    rL3 : {\r\n                        rL31: r9,\r\n                        rL32: r10,\r\n                        rL33: r11,\r\n                        rL34: r12,\r\n                    }\r\n                },\r\n                finalResult:{\r\n                    r:{\r\n                        fr1: fR1.resultNum,\r\n                        fr2: fR2.resultNum,\r\n                        fr3: fR3.resultNum,\r\n                        fr4: fR4.resultNum,\r\n                        fr5: fR5.resultNum,\r\n                        fr6: fR6.resultNum,\r\n                    },\r\n                    c:{\r\n                        fc1: fR1.carryingNum,\r\n                        fc2: fR2.carryingNum,\r\n                        fc3: fR3.carryingNum,\r\n                        fc4: fR4.carryingNum,\r\n                        fc5: fR5.carryingNum\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }else{\r\n        return state\r\n    }\r\n};\r\n\r\nexport default multiplication;","import * as actionTypes from '../actions/actions';\r\n\r\nconst initialState = {\r\n    inputFocusTop:{\r\n        0: false,\r\n        1: false,\r\n        2: true\r\n    },\r\n    inputFocusBottom:{\r\n        0: false,\r\n        1: false,\r\n        2: false\r\n    }\r\n};\r\nconst falsyObject = {\r\n    inputFocusTop:{\r\n        0: false,\r\n        1: false,\r\n        2: false\r\n    },\r\n    inputFocusBottom:{\r\n        0: false,\r\n        1: false,\r\n        2: false\r\n    }\r\n}\r\nconst numberPad = (state = initialState, action)=>{\r\n    if(action.type === actionTypes.START || action.type === actionTypes.GENERATEDONSTART || action.type === actionTypes.LASTFOCUS){\r\n        return {\r\n            ...falsyObject\r\n        }\r\n    }\r\n    if(action.type === actionTypes.END){\r\n        return {\r\n            ...falsyObject,\r\n            inputFocusTop:{\r\n                ...falsyObject.inputFocusTop,\r\n                2: true\r\n            }\r\n        }\r\n    }\r\n    switch (action.type) {\r\n        case actionTypes.INPUTFOCUS:\r\n            return {\r\n                ...falsyObject,\r\n                [action.position]:{\r\n                    ...falsyObject[action.position],\r\n                    [action.current] : true\r\n                }\r\n            }\r\n        case actionTypes.KEYPRESSMULTI:\r\n            return {\r\n                ...falsyObject,\r\n                inputFocusBottom:{\r\n                    ...falsyObject.inputFocusBottom,\r\n                    2: true\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    };\r\n};\r\n\r\nexport default numberPad;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {combineReducers, createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\n\nimport numbers from './store/reducers/numbers';\nimport carrys from './store/reducers/carry';\nimport results from './store/reducers/results';\nimport multiplication from './store/reducers/multiplication';\nimport numberPad from './store/reducers/numberPad';\n\nconst rootReducer = combineReducers({\n  number : numbers,\n  carry : carrys,\n  result : results,\n  multi: multiplication,\n  numpad: numberPad\n})\n\n\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Keypad_container__15i43\",\"digits\":\"Keypad_digits__1GfBQ\",\"digit\":\"Keypad_digit__1bjxo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mvlogo\":\"Layout_mvlogo__z1TSS\",\"mvmenu\":\"Layout_mvmenu__1TYkK\",\"container\":\"Layout_container__3v8bI\",\"inner\":\"Layout_inner__3JCe2\",\"board_container\":\"Layout_board_container__2Qn4q\",\"number_pad_container\":\"Layout_number_pad_container__2GVLx\",\"keypadTrigger\":\"Layout_keypadTrigger__38FY4\",\"number_pad_container_grow\":\"Layout_number_pad_container_grow__2Zn4k\",\"grow\":\"Layout_grow__3VkWM\",\"number_pad_container_shrink\":\"Layout_number_pad_container_shrink__1rPs-\",\"shrink\":\"Layout_shrink__pgRh3\",\"explainer_container\":\"Layout_explainer_container__1Mz_o\"};"],"sourceRoot":""}